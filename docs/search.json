[{"path":"https://rfhb.github.io/ctrdata/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2015 Ralf Herold Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://rfhb.github.io/ctrdata/articles/ctrdata_install.html","id":"install-package-ctrdata-on-an-r-system","dir":"Articles","previous_headings":"","what":"Install package ctrdata on an R system","title":"Install R package ctrdata","text":"R Project website (https://www.r-project.org/) provides installers R system. can used software products graphical user interfaces R Studio, Microsoft R Open, Visual Studio Code. General information ctrdata package available : https://rfhb.github.io/ctrdata/. R, execute: using development version package ctrdata, install GitHub: Either install package ctrdata user’s library.","code":"install.packages(\"ctrdata\") # install package under development install.packages(c(\"remotes\")) remotes::install_github(\"rfhb/ctrdata\", dependencies = TRUE, build_vignettes = TRUE)"},{"path":"https://rfhb.github.io/ctrdata/articles/ctrdata_install.html","id":"databases-to-use","dir":"Articles","previous_headings":"Install package ctrdata on an R system","what":"Databases to use","title":"Install R package ctrdata","text":"time, PostgreSQL, DuckDB, SQLite MongoDB (local remote) database can used package ctrdata. full SQLite database provided R package RSQLite. Suggested installation instructions PostgreSQL local MongoDB server ; remote MongoDB database server accessible . See speed comparison databases; recommended: DuckDB, PostgreSQL MongoDB local server.","code":""},{"path":"https://rfhb.github.io/ctrdata/articles/ctrdata_install.html","id":"attach-package-ctrdata","dir":"Articles","previous_headings":"Install package ctrdata on an R system","what":"Attach package ctrdata","title":"Install R package ctrdata","text":"completing installation, attach package user’s library. also check availability additional installation requirements mentioned : Remember respect registers’ terms conditions (see ctrOpenSearchPagesInBrowser(copyright = TRUE)). Please cite package publication follows: Ralf Herold (2025). ctrdata: Retrieve Analyze Clinical Trials Public Registers. R package version 1.21.0. https://cran.r-project.org/package=ctrdata","code":"library(ctrdata)"},{"path":[]},{"path":"https://rfhb.github.io/ctrdata/articles/ctrdata_retrieve.html","id":"attach-package-ctrdata","dir":"Articles","previous_headings":"Get started","what":"Attach package ctrdata","title":"Retrieve clinical trial information","text":"Remember respect registers’ terms conditions (see ctrOpenSearchPagesInBrowser(copyright = TRUE)). Please cite package publication follows: Ralf Herold (2025). ctrdata: Retrieve Analyze Clinical Trials Public Registers. R package version 1.21.0. https://cran.r-project.org/package=ctrdata","code":"library(ctrdata) citation(\"ctrdata\")"},{"path":"https://rfhb.github.io/ctrdata/articles/ctrdata_retrieve.html","id":"open-registers-advanced-search-page-in-browser","dir":"Articles","previous_headings":"Get started","what":"Open register’s advanced search page in browser","title":"Retrieve clinical trial information","text":"functions open browser, user can start searching trials interest.","code":"# Please review and respect register copyrights: ctrOpenSearchPagesInBrowser(   copyright = TRUE )  # Open browser with example search: ctrOpenSearchPagesInBrowser(   url = \"cancer&age=under-18\",   register = \"EUCTR\" )"},{"path":"https://rfhb.github.io/ctrdata/articles/ctrdata_retrieve.html","id":"adjust-search-parameters-and-execute-search-in-browser","dir":"Articles","previous_headings":"Get started","what":"Adjust search parameters and execute search in browser","title":"Retrieve clinical trial information","text":"Refine search trials interest listed browser. total number trials can retrieved package ctrdata intentionally limited queries 10,000 result records.","code":""},{"path":"https://rfhb.github.io/ctrdata/articles/ctrdata_retrieve.html","id":"copy-address-from-browser-address-bar-to-clipboard","dir":"Articles","previous_headings":"Get started","what":"Copy address from browser address bar to clipboard","title":"Retrieve clinical trial information","text":"Use functions keyboard shortcuts according operating system. See automation copy URLs user’s queries supported clinical trial registers.","code":""},{"path":"https://rfhb.github.io/ctrdata/articles/ctrdata_retrieve.html","id":"get-address-from-clipboard","dir":"Articles","previous_headings":"Get started","what":"Get address from clipboard","title":"Retrieve clinical trial information","text":"next steps executed R environment:","code":"q <- ctrGetQueryUrl() # * Using clipboard content as register query URL: https://www.clinicaltrialsregister.eu/ # ctr-search/search?query=cancer&age=under-18&resultsstatus=trials-with-results # * Found search query from EUCTR: query=cancer&age=under-18&resultsstatus=trials-with-results  q #                                                    query-term  query-register # 1 query=cancer&age=under-18&resultsstatus=trials-with-results           EUCTR  # To check, this opens a browser with the query ctrOpenSearchPagesInBrowser(url = q)"},{"path":"https://rfhb.github.io/ctrdata/articles/ctrdata_retrieve.html","id":"retrieve-trial-information-transform-save-to-database-and-check-queries","dir":"Articles","previous_headings":"Get started","what":"Retrieve trial information, transform, save to database and check queries","title":"Retrieve clinical trial information","text":"Note addition protocol- results-related information, also trial documents made publicly available registers, including protocols, consent forms results reports, can downloaded ctrdata, specifying parameter documents.path, see help(ctrLoadQueryIntoDb). database, takes 80 seconds 1470 records 376 trials (~55 ms/record), time needed internet-retrieval slow register.","code":"# Count number of trial records ctrLoadQueryIntoDb(   queryterm = q,   only.count = TRUE )$n # * Checking trials in EUCTR... # Retrieved overview, multiple records of 376 trial(s) from 19 page(s) to be  # downloaded (estimate: 50 MB) # [1] 376  # Connect to a database and chose a collection (table) db <- nodbi::src_sqlite(   dbname = \"sqlite_file.sql\",   collection = \"test\" )  # Retrieve records, download into database ctrLoadQueryIntoDb(   queryterm = q,   con = db )  # Show which queries have been downloaded into database dbQueryHistory(con = db) #       query-timestamp query-register query-records # 1 2025-03-02 13:05:08          EUCTR          1470 #                                                    query-term # 1 query=cancer&age=under-18&resultsstatus=trials-with-results"},{"path":"https://rfhb.github.io/ctrdata/articles/ctrdata_retrieve.html","id":"repeat-and-update-a-previous-query","dir":"Articles","previous_headings":"","what":"Repeat and update a previous query","title":"Retrieve clinical trial information","text":"Previously executed queries can repeated specifying “last” integer number parameter querytoupdate, number corresponds row number query shown dbQueryHistory(). possible, query update first checks new records register. Depending register time since running query last, update (differential update) possible original query executed fully .","code":"# Show all queries dbQueryHistory(con = db)  # Repeat last query ctrLoadQueryIntoDb(   querytoupdate = \"last\",   only.count = TRUE,   con = db ) # First result page empty - no (new) trials found? # Updated history (\"meta-info\" in \"test\")"},{"path":"https://rfhb.github.io/ctrdata/articles/ctrdata_retrieve.html","id":"results-related-trial-information","dir":"Articles","previous_headings":"","what":"Results-related trial information","title":"Retrieve clinical trial information","text":"CTGOV CTGOV2, results always included retrieval. EUCTR, result-related trial information requested retrieved, take longer download store. results structured electronic format foreseeably available ISRCTN CTIS, thus ctrdata load , see help(ctrLoadQueryIntoDb). download presence results recorded dbQueryHistory() availability results increases time. following takes 90 seconds 1470 records (~ 65 ms/record) 376 trials.","code":"Sys.time(); ctrLoadQueryIntoDb(   querytoupdate = \"last\",   forcetoupdate = TRUE,   euctrresults = TRUE,   con = db ); Sys.time();  # * Checking trials in EUCTR... # Retrieved overview, multiple records of 376 trial(s) from 19 page(s) to be downloaded (estimate: 50 MB) # (1/3) Downloading trials... # Note: register server cannot compress data, transfer takes longer (estimate: 500 s) # (2/3) Converting to NDJSON (estimate: 8 s)... # (3/3) Importing records into database... # = Imported or updated 1470 records on 376 trial(s)  # * Checking results if available from EUCTR for 376 trials:  # (1/4) Downloading results... # Download status: 376 done; 0 in progress. Total size: 45.77 Mb (100%)... done!            # - extracting results (. = data, F = file[s] and data, x = noneonverting to NDJSON (estimate: 40 s)... # (3/4) Importing results into database (may take some time)... # (4/4) Results history: not retrieved (euctrresultshistory = FALSE) # = Imported or updated results for 376 trials # Updated history (\"meta-info\" in \"test\") # $n # [1] 1470"},{"path":"https://rfhb.github.io/ctrdata/articles/ctrdata_retrieve.html","id":"add-trial-information-from-several-registers","dir":"Articles","previous_headings":"","what":"Add trial information from several registers","title":"Retrieve clinical trial information","text":"collection can used store (analyse) trial information different registers, thus can include different complementary sets trials. registers currently supported include CTIS, EUCTR, CTGOV, CTGOV2 ISRCTN. can achieved loading queries user defines specifically function ctrGenerateQueries() provides, follows:","code":"# Loading specific query into same collection ctrLoadQueryIntoDb(   queryterm = \"cond=neuroblastoma&aggFilters=phase:2,ages:child,status:com\",   register = \"CTGOV2\",   con = db )  # Use same query details to obtain queries queries <- ctrGenerateQueries(   condition = \"neuroblastoma\",   recruitment = \"completed\",   phase = \"phase 2\",   population = \"P\" )  # Open queries in registers' web interfaces sapply(queries, ctrOpenSearchPagesInBrowser)  # Load all queries into database collection result <- lapply(queries, ctrLoadQueryIntoDb, con = db)  # Show results of loading sapply(result, \"[[\", \"n\") # EUCTR CTGOV2 ISRCTN   CTIS  #   180    111      0      1   # Overview of queries dbQueryHistory(con = db) #       query-timestamp query-register query-records # 1 2025-03-02 13:05:08          EUCTR          1470 # 2 2025-03-02 13:26:49          EUCTR             0 # 3 2025-03-02 13:31:53          EUCTR          1470 # 4 2025-03-02 13:49:09         CTGOV2           111 # 5 2025-03-02 13:56:01          EUCTR           180 # 6 2025-03-02 13:56:02         CTGOV2           111 # 7 2025-03-02 13:56:03           CTIS             1 #                                                                                                   query-term # 1                                                query=cancer&age=under-18&resultsstatus=trials-with-results # 2                                                query=cancer&age=under-18&resultsstatus=trials-with-results # 3                                                query=cancer&age=under-18&resultsstatus=trials-with-results # 4                                                cond=neuroblastoma&aggFilters=phase:2,ages:child,status:com # 5                             query=neuroblastoma&phase=phase-two&age=children&age=under-18&status=completed # 6                                                cond=neuroblastoma&aggFilters=phase:2,ages:child,status:com # 7 searchCriteria={\"medicalCondition\":\"neuroblastoma\",\"trialPhaseCode\":[4],\"ageGroupCode\":[2],\"status\":[5,8]}"},{"path":"https://rfhb.github.io/ctrdata/articles/ctrdata_retrieve.html","id":"add-personal-annotations","dir":"Articles","previous_headings":"","what":"Add personal annotations","title":"Retrieve clinical trial information","text":"loading trial information, user can specify annotation string records loaded calling ctrLoadQueryIntoDb(). default, new annotations appended existing annotation trial record; alternatively, annotations can replaced. Annotations useful analyses, example specially identify subsets records trials interest collection","code":"# Annotate a query in CTGOV2 defined above ctrLoadQueryIntoDb(   queryterm = queries[\"CTGOV2\"],   annotation.text = \"site_DE \",   annotation.mode = \"append\",   con = db ) # * Appears specific for CTGOV REST API 2.0 # * Found search query from CTGOV2: cond=neuroblastoma&aggFilters=phase:2,ages:child,status:com # * Checking trials using CTGOV REST API 2.0, found 111 trials # (1/3) Downloading in 1 batch(es) (max. 1000 trials each; estimate: 11 Mb total) # (2/3) Converting to NDJSON... # (3/3) Importing records into database... # JSON file #: 1 / 1                                # = Imported or updated 111 trial(s) # = Annotated retrieved records (111 records) # Updated history (\"meta-info\" in \"test\") # $n # [1] 111"},{"path":"https://rfhb.github.io/ctrdata/articles/ctrdata_retrieve.html","id":"load-information-using-trial-identifiers","dir":"Articles","previous_headings":"","what":"Load information using trial identifiers","title":"Retrieve clinical trial information","text":"identifiers clinical trials interest already known, example shows can processed import trial information database collection. involves constructing query combines identifiers iterating sets identifiers. Note combine identifiers queryterm depends specific register:","code":"# ids of trials of interest ctIds <- c(   \"NCT00001209\", \"NCT00001436\", \"NCT00187109\", \"NCT01516567\", \"NCT01471782\",    \"NCT00357084\", \"NCT00357500\", \"NCT00365755\", \"NCT00407433\", \"NCT00410657\",    \"NCT00436852\", \"NCT00445965\", \"NCT00450307\", \"NCT00450827\", \"NCT00471679\",    \"NCT00492167\", \"NCT00499616\", \"NCT00503724\"    )  # split into sets of each 10 trial ids  # (larger sets e.g. 50 may still work) idSets <- split(ctIds, ceiling(seq_along(ctIds) / 10))  # variable to collect import results result <- NULL  # iterate over sets of trial ids for (idSet in idSets) {      setResult <- ctrLoadQueryIntoDb(     queryterm = paste0(\"term=\", paste0(idSet, collapse = \" \")),     register = \"CTGOV2\",     con = db   )      # check that queried ids have   # successfully been loaded   stopifnot(identical(     sort(setResult$success), sort(idSet)))      # append result   result <- c(result, list(setResult)) }  # inspect results  as.data.frame(do.call(rbind, result))[, c(\"n\", \"failed\")] #    n failed # 1 10   NULL # 2  8   NULL  # queryterms for other registers for retrieving trials by their identifier:  # # CTIS (note the comma separated values):  # https://euclinicaltrials.eu/ctis-public/search#searchCriteria= # {\"containAny\":\"2025-521008-22-00, 2024-519446-67-00, 2024-517647-31-00\"} # # EUCTR (note the country suffix os to be removed, values separated with OR):  # https://www.clinicaltrialsregister.eu/ctr-search/search? # query=2008-001606-16+OR+2008-001721-34+OR+2008-002260-33 #"},{"path":"https://rfhb.github.io/ctrdata/articles/ctrdata_retrieve.html","id":"find-synonyms-of-active-substance-names","dir":"Articles","previous_headings":"","what":"Find synonyms of active substance names","title":"Retrieve clinical trial information","text":"registers automatically expand search terms include alternative terms, codes names active substances. synonymous names can used queries register offer search expansion. obtain character vector synonyms active substance name:","code":"# Search for synonyms ctrFindActiveSubstanceSynonyms(   activesubstance = \"imatinib\" ) #  [1] \"imatinib\"          \"CGP 57148\"         \"CGP 57148B\"        #  [4] \"CGP57148B\"         \"Gleevec\"           \"GLIVEC\"            #  [7] \"Imatinib\"          \"Imatinib Mesylate\" \"NSC 716051\"        # [10] \"ST1571\"            \"STI 571\"           \"STI571\""},{"path":"https://rfhb.github.io/ctrdata/articles/ctrdata_retrieve.html","id":"using-a-mongodb-database","dir":"Articles","previous_headings":"","what":"Using a MongoDB database","title":"Retrieve clinical trial information","text":"example works free service . Note user name password need encoded. format connection string documented https://docs.mongodb.com/manual/reference/connection-string/. recommended databases, see vignette Install R package ctrdata.","code":"# Specify base uri for remote MongoDB server, #  as part of the encoded connection string db <- nodbi::src_mongo(   # Note: this provides read-only access   url = \"mongodb+srv://DWbJ7Wh:bdTHh5cS@cluster0-b9wpw.mongodb.net\",   db = \"dbperm\",   collection = \"dbperm\")  # Since the above access is read-only, # just obtain fields of interest: dbGetFieldsIntoDf(   fields = c(\"a2_eudract_number\",              \"e71_human_pharmacology_phase_i\"),   con = db) #                  _id a2_eudract_number e71_human_pharmacology_phase_i # 1 2010-024264-18-3RD    2010-024264-18                           TRUE # 2  2010-024264-18-AT    2010-024264-18                           TRUE # 3  2010-024264-18-DE    2010-024264-18                           TRUE # 4  2010-024264-18-GB    2010-024264-18                           TRUE # 5  2010-024264-18-IT    2010-024264-18                           TRUE # 6  2010-024264-18-NL    2010-024264-18                           TRUE"},{"path":"https://rfhb.github.io/ctrdata/articles/ctrdata_summarise.html","id":"preparations","dir":"Articles","previous_headings":"","what":"Preparations","title":"Summarise and analyse clinical trial information","text":"using MongoDB, may faster SQLite, can handle credentials, provides access remote servers can directly retrieve nested elements paths. See README.md Retrieve clinical trial information examples using SQLite. Also PostgreSQL can used database, see Install R package ctrdata. See Retrieve clinical trial information details.","code":"db <- nodbi::src_mongo(   url = \"mongodb://localhost\",   db = \"my_database_name\",   collection = \"my_collection_name\" ) db # MongoDB  8.0.4 (uptime: 298113s)  # URL: mongodb://localhost # Database: my_database_name # Collection: my_collection_name  # empty collection if exists nodbi::docdb_delete(db, db$collection) # Load package library(ctrdata)  # Model queries queries <- ctrGenerateQueries(   condition = \"neuroblastoma\",   population = \"P\" )  # Load trials from all queries into collection result <- lapply(queries, ctrLoadQueryIntoDb, euctrresults = TRUE, con = db)  # Show results of loading sapply(result, \"[[\", \"n\") # EUCTR CTGOV2 ISRCTN   CTIS  #   390    613      3     19"},{"path":"https://rfhb.github.io/ctrdata/articles/ctrdata_summarise.html","id":"find-fields-variables-of-interest","dir":"Articles","previous_headings":"","what":"Find fields / variables of interest","title":"Summarise and analyse clinical trial information","text":"Specify part name variable interest; variables including deeply nested variable names searched. Set sample = TRUE (default) rapidly execute function large database collections. search fields cached thus accelerated R session; calling ctrLoadQueryIntoDb() changing sample = ... invalidates cache.","code":"# dbFindFields(namepart = \"date\", sample = FALSE, con = db) # Finding fields in database collection (may take some time) . . . . .  # Field names cached for this session. # [...] #                                                                            EUCTR  # \"e231_full_title_date_and_version_of_each_substudy_and_their_related_objectives\"  # [...] #                                                                           CTGOV2  #      \"annotationSection.annotationModule.unpostedAnnotation.unpostedEvents.date\"  #                                                                           CTGOV2  #                            \"protocolSection.statusModule.studyFirstSubmitQcDate\"  # [...] #                                                                             CTIS  #                                                                    \"publishDate\"  #                                                                             CTIS  #                                                                    \"startDateEU\"  # [...] #                                                                           ISRCTN  #                                                     \"trialDesign.overallEndDate\""},{"path":"https://rfhb.github.io/ctrdata/articles/ctrdata_summarise.html","id":"data-frame-from-database","dir":"Articles","previous_headings":"","what":"Data frame from database","title":"Summarise and analyse clinical trial information","text":"fields interest can obtained database represented R data frame, example:","code":"# Define vector of fields fieldsOfInterest <- c(   # EUCTR protocol-related information   \"f41_in_the_member_state\",   \"f422_in_the_whole_clinical_trial\",   \"a1_member_state_concerned\",   #   # EUCTR results-related information   \"trialInformation.recruitmentStartDate\",    \"trialInformation.globalEndOfTrialDate\",   #   # CTGOV2   \"protocolSection.statusModule.startDateStruct.date\",   \"trialInformation.recruitmentStartDate\",   \"protocolSection.statusModule.primaryCompletionDateStruct.date\" )  # Create data frame with records of trials  # which for at least one field have a value result <- dbGetFieldsIntoDf(   fields = fieldsOfInterest,   con = db ) # Querying database (7 fields)...  # dim(result) # [1] 984   8"},{"path":"https://rfhb.github.io/ctrdata/articles/ctrdata_summarise.html","id":"metadata-from-data-frame","dir":"Articles","previous_headings":"","what":"Metadata from data frame","title":"Summarise and analyse clinical trial information","text":"objects returned functions package include attributes metadata indicate database, table / collection query details. Metadata can reused R.","code":"attributes(result) # [...] # # $class # [1] \"data.frame\" #  # $`ctrdata-dbname` # [1] \"my_database_name\" #  # $`ctrdata-table`  <-- this attribute will be retired by end 2024 # [1] \"my_collection_name\" #  # $`ctrdata-table-note` # [1] \"^^^ attr ctrdata-table will be removed by end 2024\" #  # $`ctrdata-collection` # [1] \"my_collection_name\" #  # $`ctrdata-dbqueryhistory` #       query-timestamp query-register query-records # 1 2025-03-02 15:26:22          EUCTR           390 # 2 2025-03-02 15:26:25         CTGOV2           613 # 3 2025-03-02 15:26:26         ISRCTN             3 # 4 2025-03-02 15:26:28           CTIS            19 #                                                               query-term # 1                                       query=neuroblastoma&age=under-18 # 2                               cond=neuroblastoma&aggFilters=ages:child # 3                     &filters=condition:neuroblastoma,ageRange:Child&q= # 4 searchCriteria={\"medicalCondition\":\"neuroblastoma\",\"ageGroupCode\":[2]}"},{"path":"https://rfhb.github.io/ctrdata/articles/ctrdata_summarise.html","id":"de-duplicate-records","dir":"Articles","previous_headings":"","what":"De-duplicate records","title":"Summarise and analyse clinical trial information","text":"database, variable “_id” unique index record. “_id” NCT number CTGOV records (e.g., “NCT00002560”), EudraCT number EUCTR records including postfix identifying EU Member State (e.g., “2008-001436-12-NL”). relevant de-duplicate records trial can registered CTGOV2 EUCTR, can records involved country EUCTR. De-duplication done analysis stage enables select trial record taken one register, one EU Member State. basis de-duplication recording additional trial identifiers supplementary fields (variables), checked reported using function dbFindIdsUniqueTrials():","code":"# Obtain de-duplicated trial record ids ids <- dbFindIdsUniqueTrials(   preferregister = \"EUCTR\",   con = db ) # Searching for duplicate trials...  # - Getting all trial identifiers (may take some time), 1025 found in collection # - Finding duplicates among registers' and sponsor ids... # - 284 EUCTR _id were not preferred EU Member State record for 109 trials # - Keeping 106 / 0 / 423 / 1 / 19 records from EUCTR / CTGOV / CTGOV2 / ISRCTN / CTIS # = Returning keys (_id) of 549 records in collection \"my_collection_name\"  # Eliminate duplicate trials records: result <- result[result[[\"_id\"]] %in% ids, ]  nrow(result) # [1] 513 # # Note that \"ids\" are the identifiers of unique trials in the whole collection, # whereas the data frame \"result\" only includes those trials in which any of  # the fields of interest had a value, thus explaining why \"result\" has fewer # rows than \"ids\" has identifiers."},{"path":"https://rfhb.github.io/ctrdata/articles/ctrdata_summarise.html","id":"use-trial-concepts-to-simplify-analyses","dir":"Articles","previous_headings":"","what":"Use trial concepts to simplify analyses","title":"Summarise and analyse clinical trial information","text":"alternative calculate column isUniqueTrial already time data frame created. uses one trial concepts provide canonical field, calculated trial information register, see help(dfCalculateConcept).","code":"# Obtain data of interest result <- dbGetFieldsIntoDf(   fields = fieldsOfInterest,    calculate = \".isUniqueTrial\",   con = db ) # Querying database (30 fields)... # - Finding duplicates among registers' and sponsor ids...  # - 132 EUCTR _id were not preferred EU Member State record for 83 trials # - Keeping 613 / 50 / 0 / 1 / 19 records from CTGOV2 / EUCTR / CTGOV / ISRCTN / CTIS  # Eliminate duplicate trials records: result <- result[result[[\".isUniqueTrial\"]], ]  nrow(result) # [1] 267 # # Note this has used a different register as priority. # Also, the data frame result includes all trials which # had a value in at least one of the fields of interest # or the fields needed to calculate the trial concept.   # See description of concept .isUniqueTrial:  dfCalculateConcept(\".isUniqueTrial\")  # See how concept .isUniqueTrial is implemented .isUniqueTrial"},{"path":"https://rfhb.github.io/ctrdata/articles/ctrdata_summarise.html","id":"reviewing-a-specific-trial","dir":"Articles","previous_headings":"","what":"Reviewing a specific trial","title":"Summarise and analyse clinical trial information","text":"often useful inspect data single trial, e.g. understand meaning relation fields, see certain information stored, identify fields interest. given trial, function ctrShowOneTrial() enables user visualise hiearchy fields contents user’s local web browser, search field names field values, select copy selected fields’ names use function dbGetFieldsIntoDf(). Alternatively, use standard database function retrieve trial’s JSON representation ctrdata stored collection visualise nested structure field names values.","code":"# Opens a web browser for user interaction. # If the trial is not found in the database, # it will be loaded from the register.  # # The search is for both, field names and values ctrShowOneTrial(\"2022-501725-21-00\", con = db) # Requires additional package for visualisation remotes::install_github(\"hrbrmstr/jsonview\")  # Works with DuckDb, SQLite, PostgreSQL, MongoDB oneTrial <- nodbi::docdb_query(   src = db,    key = db$collection,    query = '{\"_id\":\"2022-501725-21-00\"}',   limit = 1L )  # Interactive widget where nodes can be expanded, # note that fields and values cannot be searched jsonview::json_tree_view(oneTrial)"},{"path":"https://rfhb.github.io/ctrdata/articles/ctrdata_summarise.html","id":"simple-analysis-of-dates","dir":"Articles","previous_headings":"","what":"Simple analysis of dates","title":"Summarise and analyse clinical trial information","text":"data frame generated dbGetFieldsIntoDf(), fields typed dates, logical, character numbers. typing facilitates using data analysis, example dates base R graphics:","code":"# Get data of interest result <- dbGetFieldsIntoDf(   fields = c(\"ctrname\"),   calculate = c(\".isUniqueTrial\", \".startDate\"),   con = db ) # Querying database (33 fields)... # - Finding duplicates among registers' and sponsor ids...  # - 132 EUCTR _id were not preferred EU Member State record for 83 trials # - Keeping 613 / 50 / 0 / 1 / 19 records from CTGOV2 / EUCTR / CTGOV / ISRCTN / CTIS # Calculating .startDate...    str(result) # 'data.frame': 1025 obs. of  4 variables: #  $ _id           : chr  \"2004-004386-15-DE\" \"2004-004386-15-ES\" \"2004-004386-15-GB\" \"2004-004386-15-IT\" ... #  $ ctrname       : chr  \"EUCTR\" \"EUCTR\" \"EUCTR\" \"EUCTR\" ... #  $ .isUniqueTrial: logi  FALSE FALSE FALSE FALSE FALSE FALSE ... #  $ .startDate    : Date, format: \"2005-07-26\" \"2005-11-15\" \"2005-07-26\" ...  # Open file for saving png(\"vignettes/nb1.png\")  # De-duplicate and visualise start date hist(   result[result$.isUniqueTrial, \".startDate\"],   breaks = \"years\" ) box() dev.off()"},{"path":"https://rfhb.github.io/ctrdata/articles/ctrdata_summarise.html","id":"cross-register-clinical-trial-concepts","dir":"Articles","previous_headings":"","what":"Cross-register clinical trial concepts","title":"Summarise and analyse clinical trial information","text":"number calculations across fields different registers available ctrdata. offers much convenience users, provides canonical understanding implementation mapping corresponding fields value lists across different registers. Available calculations can listed, specific documentation shown.","code":"# See all concepts available at this time dfCalculateConcept() #  [1] \".controlType\"             \".isMedIntervTrial\"        \".isPlatformTrial\"         #  [4] \".isUniqueTrial\"           \".numSites\"                \".numTestArmsSubstances\"   #  [7] \".primareEndpointEstimand\" \".sampleSize\"              \".sponsorType\"             # [10] \".startDate\"               \".statusRecruitment\"       \".trialObjective\"          # [13] \".trialPhase\"  # Introduction to trial concepts help(\"ctrdata-trial-concepts\")  # Show documentation of a specific trial concept  # dfCalculateConcept(name = \".isMedIntervTrial\") #  # >>>> .isMedIntervTrial #  # * Description: #  # Calculates if record is a medicine-interventional trial, investigating one  # or more medicine, whether biological or not. #  # For EUCTR and CTIS, this corresponds to all records as per the definition of  # the EU Clinical Trial Regulation. #  # For CTGOV and CTGOV2, this is based on drug or biological as type of  # intervention, and interventional as type of study. #  # For ISRCTN, this is based on drug or biological as type of intervention,  # and interventional as type of study. #  # Returns a logical. #  # * Fields needed: #  # ctrname # intervention.intervention_type # study_type # protocolSection.armsInterventionsModule.interventions.type # protocolSection.designModule.studyType # interventions.intervention.interventionType # trialDesign.primaryStudyDesign # ctrname #  # * To show the implementation, call: ctrdata::.isMedIntervTrial # or, after package(\"ctrdata\"), call: .isMedIntervTrial #  # <<<<"},{"path":"https://rfhb.github.io/ctrdata/articles/ctrdata_summarise.html","id":"merging-fields-for-analysis","dir":"Articles","previous_headings":"","what":"Merging fields for analysis","title":"Summarise and analyse clinical trial information","text":"function dfMergeVariablesRelevel(), users control merge values set original variables new variable, optionally new set values. , see help(dfMergeVariablesRelevel). can used concepts specific use case / implemented far, see dfCalculateConcept().","code":""},{"path":"https://rfhb.github.io/ctrdata/articles/ctrdata_summarise.html","id":"historic-versions-of-trial-records-and-changes-in-sample-sizes","dir":"Articles","previous_headings":"","what":"Historic versions of trial records and changes in sample sizes","title":"Summarise and analyse clinical trial information","text":"Historic versions can set retrieved CTGOV2 specifying ctgov2history = <...> using ctrLoadQueryIntoDb(); functionality added ctrdata version 1.18.0. versions include trial data available date respective version. CTGOV2 provides historic versions time; available CTIS relaunch 2024-06-17. CTGOV2 records, historic versions added follows ctrdata data model trial record, ellipsis ... represents trial data fields: {\"_id\":\"NCT01234567\", \"title\": \"Current title\", ..., \"history\": [{\"history_version\": {\"version_number\": 1, \"version_date\": \"2020-21-22 10:11:12\"}, \"title\": \"Original title\", ...}, {\"history_version\": {\"number\": 2, \"date\": \"2021-22-23 11:13:13\"}, \"title\": \"Later title\", ...}]} example shows planned realised number participants (sample size) changed time individual trials, using available data","code":"# Load previous query (above), specifying that  # for each trial, 5 versions should be retrieved ctrLoadQueryIntoDb(   queryterm = queries[\"CTGOV2\"],    con = db,    ctgov2history = 5L )  # Get relevant fields result <- dbGetFieldsIntoDf(   fields = c(     # only CTGOV2 has structured historic information     \"history.protocolSection.designModule.enrollmentInfo.count\",     \"history.history_version.version_date\"   ),   calculate = \".statusRecruitment\",   con = db )  # Helper packages library(dplyr) library(tidyr) library(ggplot2)  # Mangle and plot result %>%   unnest(cols = starts_with(\"history.\")) %>%   filter(.statusRecruitment == \"completed\") %>%    filter(!is.na(history.protocolSection.designModule.enrollmentInfo.count)) %>%    filter(history.protocolSection.designModule.enrollmentInfo.count > 0L) %>%    group_by(`_id`) %>%   ggplot(     mapping = aes(       x = history.history_version.version_date,       y = history.protocolSection.designModule.enrollmentInfo.count,       colour = `_id`)   ) +   geom_step() +   geom_point() +   theme_light() +   scale_y_log10() +   guides(colour = \"none\") +   labs(     title = \"Sample sizes in trials including patients with a neuroblastoma\",      subtitle = \"Source: CTGOV2 records labelled as phase 3 and completed\",      caption = Sys.Date()   )  ggsave(\"vignettes/samplesizechanges.png\", width = 6, height = 4)"},{"path":"https://rfhb.github.io/ctrdata/articles/ctrdata_summarise.html","id":"analysing-nested-fields-such-as-trial-results","dir":"Articles","previous_headings":"","what":"Analysing nested fields such as trial results","title":"Summarise and analyse clinical trial information","text":"registers represent clinical trial information nesting fields (e.g., several reporting groups within several measures within one several endpoints). visualisation hierarchical representation CTGOV2 follows. Compare outcome measures presented : https://clinicaltrials.gov/study/NCT02139397?tab=results#outcome-measures, specifically “3. Determine Progression Free Survival (PFS)…” Alternative: analysis nested information highlighted duration response facilitated ctrdata follows. main steps : Create data fields identified shown previous sections (using dbGetFieldsIntoDf()) Transform nested information long, name-value data frame (using dfTrials2Long()) Identify measures interest (e.g. PFS, blue circle ) specifying name value fields (wherename, wherevalue function dfName2Value()) Obtain values specifying name(s) value field(s) (red green circles figure ; valuename function dfName2Value()) Tabulate results interest put together following example. Note CTGOV fields longer downloadable (see NEWS.md) may exist previously created databases.","code":"# Since version 1.20.0, an interactive widget is built into ctrdata # and can be used to search in all field names and all values  ctrShowOneTrial(\"NCT02139397\", con = db) # Helper package remotes::install_github(\"https://github.com/hrbrmstr/jsonview\")  # Get relevant data result <- dbGetFieldsIntoDf(\"resultsSection.outcomeMeasuresModule\", con = db)  # Create interactive widget jsonview::json_tree_view(result[result[[\"_id\"]] == \"NCT02139397\", -1]) #### 1. Create data frame from results fields # These are key results fields from # CTGOV2, CTGOV and from EUCTR: result <- dbGetFieldsIntoDf(   fields = c(     # EUCTR - note this requires to set parameter     # euctrresults = TRUE in ctrLoadQueryIntoDb()     # as shown above in section \"User annotations\"     \"trialInformation.populationAgeGroup\",     \"subjectDisposition.recruitmentDetails\",     \"baselineCharacteristics.baselineReportingGroups.baselineReportingGroup\",     \"endPoints.endPoint\",     \"subjectAnalysisSets\",     \"adverseEvents.seriousAdverseEvents.seriousAdverseEvent\",      # CTGOV2     \"resultsSection.outcomeMeasuresModule\",     \"protocolSection.designModule.designInfo.allocation\",      \"resultsSection.participantFlowModule\",     # CTGOV     \"clinical_results.baseline.analyzed_list.analyzed.count_list.count\",     \"clinical_results.baseline.group_list.group\",     \"clinical_results.baseline.analyzed_list.analyzed.units\",     \"clinical_results.outcome_list.outcome\",     \"study_design_info.allocation\"   ),   calculate = \".isUniqueTrial\",   con = db )  # Keep only unique trial records result <- result[result[[\".isUniqueTrial\"]], ]   #### 2. All nested data are transformed to a long, # Name value data frame (which has several hundred # rows for each trial, with one row per field): #  long_result <- dfTrials2Long(df = result) # Total 89253 rows, 159 unique names of variables long_result[c(100, 10000, 80000), ] # # A tibble: 3 × 4 #   `_id`             identifier name                                                        value #   <chr>             <chr>      <chr>                                                       <chr> # 1 2007-000371-42-PL 36         adverseEvents.seriousAdverseEvents.seriousAdverseEvent.dic… false # 2 2013-003595-12-CZ 13.3       adverseEvents.seriousAdverseEvents.seriousAdverseEvent.val… 0     # 3 NCT02124772       25.3       resultsSection.outcomeMeasuresModule.outcomeMeasures.denom… OG002   #### 3. and 4. Obtain values for measures of interest  # # The parameters can be regular expressions clinicalDuration <- dfName2Value(   df = long_result,   # 3. Identify measures of interest   wherename = paste0(     \"endPoints.endPoint.title|\",     \"resultsSection.outcomeMeasuresModule.outcomeMeasures.title\"   ),   wherevalue = paste0(     \"duration of response|DOR|\",     \"free survival|DFS|PFS|EFS\"   ),   # 4. Obtain result values for measure   valuename = paste0(     \"resultsSection.*outcomeMeasures.classes.categories.measurements.value|\",     \"endPoints.*armReportingGroup.tendencyValues.tendencyValue.value|\",     \"resultsSection.outcomeMeasuresModule.outcomeMeasures.unitOfMeasure|\",     \"endPoints.endPoint.unit|\",     \"resultsSection.outcomeMeasuresModule.outcomeMeasures.groups.title|\",     \"endPoints.*armReportingGroup.armId\"   ) ) # Returning values for 53 out of 683 trials   #### 5. Tabulate the results  # PFS / EFS duration has been reported with various units: sort(unique(clinicalDuration[   grepl(\"unit\", clinicalDuration$name), \"value\", drop = TRUE])) # [1] \"3 year EFS\"                               \"Days\"                                     # [3] \"Estimated probability\"                    \"L/hr\"                                     # [5] \"months\"                                   \"Months\"                                   # [7] \"number of participants with No VOD/Death\" \"Participants\"                             # [9] \"percent of probability\"                   \"percent probability\"   # Helper packages for convenience library(dplyr) library(tidyr)  # Mangle data for tabulation clinicalDuration %>%    as_tibble() %>%   mutate(     group_id = paste0(`_id`, \"_\", sub(\"([0-9]+)[.]?.*\", \"\\\\1\", identifier)),     name_short = sub(\".*[.](.+)\", \"\\\\1\", name),     name_short = if_else(name_short == \"unitOfMeasure\", \"unit\", name_short)   ) %>%   group_by(group_id) %>%    mutate(     is_duration = any(grepl(\"day|month|week|year\", value, ignore.case = TRUE))) %>%   ungroup() %>%    filter(is_duration) %>%    select(name_short, value, where, group_id) %>%    pivot_wider(id_cols = c(group_id, where), names_from = name_short, values_fn = list) %>%   unnest(c(value, unit)) %>%    filter(!grepl(\"999[9]*\", value)) %>%   rowwise() %>%    mutate(     value = as.numeric(value),     arm_names = paste(armId, title, collapse = \" / \"),   ) %>%    ungroup() %>%    mutate(     days = case_when(       grepl(\"[wW]eek\", unit) ~ value * 7,       grepl(\"[mM]onth\", unit) ~ value * 30,       grepl(\"[yY]ear\", unit) ~ value * 30,       .default = value     )) %>%    select(!c(value, unit, armId, title)) -> clinicalDuration  clinicalDuration[sample(seq_len(nrow(clinicalDuration)), 10L), ] # # A tibble: 10 × 4 #    group_id             where                                                    arm_names  days #    <chr>                <chr>                                                    <chr>     <dbl> #  1 NCT01962103_22       Phase 2: Progression-Free Survival (PFS)                 \" Phase …  91   #  2 NCT02162732_4        Progression Free Survival (PFS) Interval Will be Measur… \" Neurob… 283   #  3 2014-004685-25-DE_11 PFS as Determined by the Investigator using RANO criter… \"\"         NA   #  4 NCT01355679_4        Activity of Treatments Chosen Based on Progression Free… \" Guided…  59   #  5 2014-004697-41-IT_16 Duration of Response (DOR) as Determined by the Investi… \"Arm-104… 396   #  6 NCT02162732_4        Progression Free Survival (PFS) Interval Will be Measur… \" Neurob… 163   #  7 NCT01483820_3        Number of Days Participants Experienced Progression Fre… \" TPI 28…  46   #  8 NCT01505608_5        Progression Free Survival (PFS) of Participants Using D… \" Arm A-… 125   #  9 NCT02139397_3        Determine the Progression Free Survival (PFS) of Partic… \" Phase …  51.2 # 10 NCT04029688_14       Part 1b: PFS in Participants With Neuroblastoma From SE… \" Part 1…  54"},{"path":"https://rfhb.github.io/ctrdata/articles/ctrdata_summarise.html","id":"analysing-primary-endpoints","dir":"Articles","previous_headings":"","what":"Analysing primary endpoints","title":"Summarise and analyse clinical trial information","text":"Text analysis used many fields trial information registers. example simply categorise type primary endpoint. addition, number subjects compared type primary endpoint. example uses trial concepts introduced earlier sections, see dfCalculateConcept().","code":"# Get relevant data result <- dbGetFieldsIntoDf(   calculate = c(     \".isUniqueTrial\",     \".sampleSize\",     \".trialPopulation\",     \".primaryEndpointDescription\"   ),   con = db ) # Querying database (75 fields)... # - Finding duplicates among registers' and sponsor ids...  # - 132 EUCTR _id were not preferred EU Member State record for 83 trials # - Keeping 613 / 50 / 0 / 1 / 19 records from CTGOV2 / EUCTR / CTGOV / ISRCTN / CTIS # Calculating .primaryEndpointDescription...   # De-duplicate result <- result[result[[\".isUniqueTrial\"]], ]  # For primary endpoint of interest, use regular expression on text to # identify time to the respective event (mostly includes death events) regex <- \"((progression|event|relapse|recurrence|disease)[- ]free)|pfs|dfs|efs)\"  # .primaryEndpointDescription is in each cell a list of one or more  # items with an endpoint description; grepl works on each such item result$pep_is_efs <- grepl(   pattern = regex,   x = result$.primaryEndpointDescription,   ignore.case = TRUE )  # Tabulate table(result$pep_is_efs) # FALSE  TRUE #   606    76  # Plot library(ggplot2) ggplot(   data = result,   aes(     x = .sampleSize,     y = pep_is_efs   ) ) +   geom_boxplot() +   scale_x_log10() # Warning message: # Removed 90 rows containing non-finite values (`stat_boxplot()`).   ggsave(\"vignettes/boxpep.png\", width = 6, height = 4)"},{"path":"https://rfhb.github.io/ctrdata/articles/ctrdata_summarise.html","id":"analysis-methods-and-p-values","dir":"Articles","previous_headings":"","what":"Analysis methods and p values","title":"Summarise and analyse clinical trial information","text":"may interesting review results primary endpoint set trials, therapeutic area types endpoints designs. results null-hypothesis significance testing (NHST) may show interesting distribution p values (see also Robinson-D 2014, http://varianceexplained.org/statistics/interpreting-pvalue-histogram/, refers cases many p values, possibly single experiment). analysed robustly well-defined set trials, distributions may allow assumptions equipoise, forking path reporting preferences. example merely shows technical approach, without asserting relevance. robust analysis, consider trial concepts (particular, “.trialObjectives”, “.controlType”, “.isMedIntervTrial”, “.trialPhase”), see dfCalculateConcept().","code":"# Get result set result <- dbGetFieldsIntoDf(   calculate = c(     \".isUniqueTrial\",     \".sampleSize\",     \".primaryEndpointResults\"   ),    con = db ) # Querying database (53 fields)...  # De-duplicate result <- result[result[[\".isUniqueTrial\"]], ]  # Helper package library(ggplot2)  # Plot p values ECDF ggplot(   data = result,    aes(x = .primaryEndpointFirstPvalue)) +    stat_ecdf(geom = \"step\") +   labs(     title = \"Trials with children with a neuroblastoma\",      x = \"Range of p values\",      y = \"Empirical cumulative density of p values\\nfrom primary endpoint primary analysis\") +   geom_vline(     xintercept = 0.05,      linetype = 3)  ggsave(\"vignettes/phase23_paed_p_values.png\", width = 6, height = 4)  # Plot sample size vs. p value ggplot(   data = result,    aes(     x = .sampleSize,      y = .primaryEndpointFirstPvalue)) +   geom_point() +    ylim(0, 1) +    xlim(0, 1000) +    scale_x_log10() +    geom_hline(yintercept = 0.05, linetype = 3)  ggsave(\"vignettes/phase23_paed_p_values_participants.png\", width = 6, height = 4)   # Statistical method used for primary endpoint analysis tmp <- table(result$.primaryEndpointFirstPmethod) tmp <- tmp[rev(order(tmp))] tmp <- data.frame(tmp) knitr::kable(tmp)"},{"path":"https://rfhb.github.io/ctrdata/articles/ctrdata_summarise.html","id":"investigational-or-authorised-medicinal-product","dir":"Articles","previous_headings":"","what":"Investigational or authorised medicinal product?","title":"Summarise and analyse clinical trial information","text":"information status authorisation (licensing) medicine used trial recorded EUCTR field dimp.d21_imp_to_be_used_in_the_trial_has_a_marketing_authorisation. corresponding field CTGOV, CTGOV2 ISRCTN known. status tree starting dimp element.","code":"# Helper package library(dplyr)  # Get results result <- dbGetFieldsIntoDf(   fields = c(     \"a1_member_state_concerned\",     \"n_date_of_competent_authority_decision\",     \"dimp.d21_imp_to_be_used_in_the_trial_has_a_marketing_authorisation\",     \"x6_date_on_which_this_record_was_first_entered_in_the_eudract_database\",     \"f422_in_the_whole_clinical_trial\",     \"a2_eudract_number\"   ),   calculate = c(     \".isUniqueTrial\",     \".startDate\"     ),    con = db )  # De-duplicate result <- result[result[[\".isUniqueTrial\"]], ]  # How many of the investigational medicinal product(s) # that are being used in the trial are authorised? number_authorised <- sapply(   result[[\"dimp.d21_imp_to_be_used_in_the_trial_has_a_marketing_authorisation\"]],   function(i) if (all(is.na(i))) NA else sum(i, na.rm = TRUE) ) table(number_authorised, exclude = \"\") # number_authorised #    0    1    2    3    4    5    6    7   13 <NA>  #   19   12    5    2    3    3    1    1    1  636  result[[\"any_authorised\"]] <- number_authorised > 0L  # Helper packages library(ggplot2) library(scales) library(dplyr)  # Plot ggplot(   data = result %>%      filter(!is.na(any_authorised)),   aes(     x = .startDate,     fill = any_authorised   ) ) +   scale_x_date(     breaks = breaks_width(width = \"2 years\"),     labels = date_format(\"%Y\")   ) +   geom_histogram(binwidth = 2 * 365.25) +   labs(     title = \"Selected clinical trials in EU\",     x = \"Year of trial start\",     y = \"Number of trials\",     fill = \"Medicine\\nauthorised?\"   )  ggsave(\"vignettes/nbtrials.png\", width = 6, height = 4)"},{"path":"https://rfhb.github.io/ctrdata/articles/ctrdata_summarise.html","id":"analyses-using-aggregation-pipeline-and-mapreduce","dir":"Articles","previous_headings":"","what":"Analyses using aggregation pipeline and mapreduce","title":"Summarise and analyse clinical trial information","text":"example analysis functions can run directly MongoDB server, fast consume R resources.","code":"# Load package for database access library(mongolite)  # Create R object m to access the # collection db created above m <- mongo(   url = paste0(db[[\"url\"]], \"/\", db[[\"db\"]]),   collection = db[[\"collection\"]] )  # Number of records in  collection m$count() # [1] 1026  # Number of EUCTR records, using JSON for query m$count(query = '{\"_id\": {\"$regex\": \"[0-9]{4}-[0-9]{6}-[0-9]{2}-[3A-Z]{2,3}\", \"$options\": \"i\"}}') # [1] 390  # Alternative m$count(query = '{\"ctrname\": \"EUCTR\"}') # [1] 390  # Number of CTGOV records m$count(query = '{\"_id\": {\"$regex\": \"NCT[0-9]{8}\", \"$options\": \"i\"}}') # [1] 613  # Alternative m$count(query = '{\"ctrname\": \"CTGOV2\"}') # [1] 613  # To best define regular expressions for analyses, inspect the field: head(   m$distinct(     key = \"protocolSection.outcomesModule.primaryOutcomes.measure\",     query = '{\"ctrname\": \"CTGOV2\"}'   ) ) # [1] \"- To demonstrate that 123I-mIBG planar scintigraphy is sensitive and ... # [2] \"1-year Progression-free Survival\"                                                                                                                               # [3] \"18F-mFBG PET Scan identification of Neuroblastoma on the LAFOV PET/CT\"                                                                                          # [4] \"1p36 deletion status and its association with UBE4B\"                                                                                                            # [5] \"2-year progression free survival\"                                                                                                                               # [6] \"2-year progression free survival (PFS)\""},{"path":"https://rfhb.github.io/ctrdata/articles/ctrdata_summarise.html","id":"aggregation","dir":"Articles","previous_headings":"Analyses using aggregation pipeline and mapreduce","what":"Aggregation","title":"Summarise and analyse clinical trial information","text":"following example uses aggregation pipeline MongoDB. See details mongo’s aggregation pipleline: https://docs.mongodb.org/manual/core/aggregation-pipeline/","code":"# # Total count of PFS, EFS, RFS or DFS out <- m$aggregate(   # Count number of documents in collection that   # matches in primary_outcome.measure the   # regular expression,   pipeline =     '[{\"$match\": {\"protocolSection.outcomesModule.primaryOutcomes.measure\":       {\"$regex\": \"(progression|event|relapse|recurrence|disease)[- ]free\",                  \"$options\": \"i\"}}},       {\"$group\": {\"_id\": \"null\", \"count\": {\"$sum\": 1}}}]' ) out #    _id count # 1 null    64  # List records of trials with overall survival # as primary endpoint, and list start date out <- m$aggregate(   pipeline =     '[{\"$match\": {\"protocolSection.outcomesModule.primaryOutcomes.measure\":       {\"$regex\": \"overall survival\", \"$options\": \"i\"}}},       {\"$project\": {\"_id\": 1, \"protocolSection.statusModule.startDateStruct.date\": 1}}]' ) head(out) #          _id       date # 1 NCT00445965    2006-01 # 2 NCT00801931 2007-09-06 # 3 NCT05303727    2022-08 # 4 NCT02176967 2014-08-08 # 5 NCT02558244    2016-01 # 6 NCT04897880 2019-01-09"},{"path":"https://rfhb.github.io/ctrdata/articles/ctrdata_summarise.html","id":"mapreduce","dir":"Articles","previous_headings":"Analyses using aggregation pipeline and mapreduce","what":"Mapreduce","title":"Summarise and analyse clinical trial information","text":"Since Mapreduce deprecated starting MongoDB 5 (https://docs.mongodb.com/manual/core/map-reduce/), use aggregation pipeline:","code":"# Count number of trials by number of study # participants in bins of hundreds of participants: m$aggregate(pipeline = ' [   {     \"$project\": {       \"flooredNumber\": {         \"$multiply\": [           {             \"$floor\": {               \"$divide\": [                 {                   \"$toInt\": \"$protocolSection.designModule.enrollmentInfo.count\"                 },                 100               ]             }           },           100         ]       }     }   },   {     \"$group\": {       \"_id\": \"$flooredNumber\",       \"count\": {         \"$count\": {}       }     }   },   {     \"$sort\": {       \"_id\": 1     }   } ] ') #      _id count # 1     NA   463 # 2      0   419 # 3    100    67 # 4    200    18 # 5    300    12 # 6    400     8 # 7    500     9 # 8    600     6 # 9    700     1 # 10   800     2 # 11   900     1 # 12  1000     5 # [...]"},{"path":"https://rfhb.github.io/ctrdata/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ralf Herold. Author, maintainer.","code":""},{"path":"https://rfhb.github.io/ctrdata/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Herold R (2025). ctrdata: Retrieve Analyze Clinical Trials Public Registers. R package version 1.20.0.9000, https://cran.r-project.org/package=ctrdata.","code":"@Manual{,   title = {ctrdata: Retrieve and Analyze Clinical Trials in Public Registers},   author = {Ralf Herold},   year = {2025},   note = {R package version 1.20.0.9000},   url = {https://cran.r-project.org/package=ctrdata}, }"},{"path":"https://rfhb.github.io/ctrdata/index.html","id":"ctrdata-for-aggregating-and-analysing-clinical-trials","dir":"","previous_headings":"","what":"Retrieve and Analyze Clinical Trials in Public Registers","title":"Retrieve and Analyze Clinical Trials in Public Registers","text":"package ctrdata provides functions retrieving (downloading), aggregating analysing clinical trials using information (structured protocol result data, well documents) public registers. can used EU Clinical Trials Register (“EUCTR”, https://www.clinicaltrialsregister.eu/) EU Clinical Trials Information System (“CTIS”, https://euclinicaltrials.eu/, see example) ClinicalTrials.gov (“CTGOV2”, see example) ISRCTN Registry (https://www.isrctn.com/) motivation investigate design conduct trials interest, describe trends availability patients facilitate using detailed results research meta-analyses. ctrdata package R system, systems tools can use databases created package. README reviewed 2025-03-02 version 1.20.0.9000.","code":""},{"path":"https://rfhb.github.io/ctrdata/index.html","id":"main-features","dir":"","previous_headings":"","what":"Main features","title":"Retrieve and Analyze Clinical Trials in Public Registers","text":"Protocol- results-related trial information easily downloaded: Users define query register’s web interface, copy URL enter ctrdata retrieves one go trials found. script can automate copying query URL registers. Personal annotations can made downloading trials. Also, trial documents historic versions available registers trials can downloaded. Downloaded trial information transformed stored collection document-centric database, fast offline access. Information different registers can accumulated single collection. Uses DuckDB, PostgreSQL, RSQLite MongoDB, via R package nodbi: see section Databases . Interactively browse trial structure data. Easily re-run previous query collection retrieve update trial records. analyses, convenience functions ctrdata implement trial concepts canonically simplify analyses across registers 🔔, allow find synonyms active substance, identify unique (de-duplicated) trial records across registers, merge recode fields well easily access deeply-nested fields. Analysis can done R (see vignette) systems, using JSON-structured information database. Remember respect registers’ terms conditions (see ctrOpenSearchPagesInBrowser(copyright = TRUE)). Please cite package publication follows: “Ralf Herold (2025). ctrdata: Retrieve Analyze Clinical Trials Public Registers. R package version 1.21.0, https://cran.r-project.org/package=ctrdata”.","code":""},{"path":"https://rfhb.github.io/ctrdata/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Retrieve and Analyze Clinical Trials in Public Registers","text":"Package ctrdata used unpublished works publications: Alzheimer’s disease Horizon Scanning Report (2024) PDF file, p 10 🔔 Kundu et al. (2024) Analysis Factors Influencing Enrollment Success Hematology Malignancy Cancer Clinical Trials (2008-2023). Blood Meeting Abstracts https://doi.org/10.1182/blood-2024-207446 🔔 Lasch et al. (2022) Impact COVID‐19 Initiation Clinical Trials Europe United States. Clinical Pharmacology & Therapeutics https://doi.org/10.1002/cpt.2534 Sood et al. (2022) Managing Evidence Infodemic: Automation Approaches Used Developing NICE COVID-19 Living Guidelines. medRxiv https://doi.org/10.1101/2022.06.13.22276242 Blogging Innovation coming paediatric research Cancer Research UK (2017) impact collaboration: value UK medical research EU science health EMA (2017) Results juvenile animal studies (JAS) impact anti-cancer medicine development use children PDF file, p 34","code":""},{"path":[]},{"path":"https://rfhb.github.io/ctrdata/index.html","id":"id_1-install-package-ctrdata-in-r","dir":"","previous_headings":"Installation","what":"1. Install package ctrdata in R","title":"Retrieve and Analyze Clinical Trials in Public Registers","text":"Package ctrdata CRAN GitHub. Within R, use following commands install package ctrdata: commands also install package’s dependencies (jsonlite, httr, curl, clipr, xml2, nodbi, stringi, tibble, lubridate, jqr, dplyr, zip, readr, digest, countrycode, htmlwidgets, stringdist V8).","code":"# Install CRAN version: install.packages(\"ctrdata\")  # Alternatively, install development version: install.packages(\"devtools\") devtools::install_github(\"rfhb/ctrdata\", build_vignettes = TRUE)"},{"path":"https://rfhb.github.io/ctrdata/index.html","id":"id_2-script-to-automatically-copy-users-query-from-web-browser","dir":"","previous_headings":"Installation","what":"2. Script to automatically copy user’s query from web browser","title":"Retrieve and Analyze Clinical Trials in Public Registers","text":"Optional; works registers supported ctrdata recommended CTIS URL web browser reflects user’s parameters querying register. web browser, install Tampermonkey browser extension, click “New user script” “Tools”, enter “Import URL” URL: https://raw.githubusercontent.com/rfhb/ctrdata/master/tools/ctrdataURLcopier.js click “Install”. browser extension can disabled enabled user. enabled, URLs user’s queries registers automatically copied clipboard can pasted queryterm = ... parameter function ctrLoadQueryIntoDb(). Additionally, script retrieves results CTIS opening search URLs https://euclinicaltrials.eu/ctis-public/search#searchCriteria={“status”:[3,4]}.","code":""},{"path":"https://rfhb.github.io/ctrdata/index.html","id":"overview-of-functions-in-ctrdata","dir":"","previous_headings":"","what":"Overview of functions in ctrdata","title":"Retrieve and Analyze Clinical Trials in Public Registers","text":"functions listed approximate order use user’s workflow (bold, main functions). See also package documentation overview.","code":""},{"path":"https://rfhb.github.io/ctrdata/index.html","id":"databases-for-use-with-ctrdata","dir":"","previous_headings":"","what":"Databases for use with ctrdata","title":"Retrieve and Analyze Clinical Trials in Public Registers","text":"Package ctrdata retrieves trial information stores database collection, given connection object parameter con several ctrdata functions. connection object created almost identically four database backends supported ctrdata, shown table. speed comparison, see nodbi documentation. Besides ctrdata functions , connection object can used functions packages, nodbi (see last row table) , case MongoDB database backend, mongolite (see vignettes).","code":""},{"path":"https://rfhb.github.io/ctrdata/index.html","id":"data-model-of-ctrdata","dir":"","previous_headings":"","what":"Data model of ctrdata","title":"Retrieve and Analyze Clinical Trials in Public Registers","text":"Package ctrdata uses data models implicit data retrieved different registers. mapping provided register’s data model putative target data model. reasons include registers’ data models continually evolving time, data fields similar values meaning registers, retrieved public data may correspond registers’ internal data model. structure data specific trial can interactively inspected searched using function, see section . Thus, handling data different models registers done time analysis. approach allows high level flexibility, transparency reproducibility. support analyses, ctrdata (version 1.21.0) provides functions calculate concepts clinical trials across registers, commonly used analyses, start dates, age groups statistical tests results. See dfCalculateConcept() section Analysis across trials example workflow . analyses, see examples function dfMergeVariablesRelevel() align related fields different registers joint analysis. databases, one clinical trial one document, corresponding one row SQLite, PostgreSQL DuckDB table, one document MongoDB collection. NoSQL backends allow documents different structures, used accommodate different models data retrieved registers. Package ctrdata stores every document: field _id trial identification provided register retrieved field ctrname name register (EUCTR, CTGOV, CTGOV2, ISRCTN, CTIS) trial retrieved field record_last_import date time document last updated using ctrLoadQueryIntoDb() CTGOV2: object history historic version trial history_version, contains fields version_number (starting 1) version_date original fields provided register trial (see examples ) visualising data structure trial, see vignette section.","code":""},{"path":"https://rfhb.github.io/ctrdata/index.html","id":"vignettes","dir":"","previous_headings":"","what":"Vignettes","title":"Retrieve and Analyze Clinical Trials in Public Registers","text":"Install R package ctrdata Retrieve clinical trial information Summarise analyse clinical trial information","code":""},{"path":"https://rfhb.github.io/ctrdata/index.html","id":"example-workflow","dir":"","previous_headings":"","what":"Example workflow","title":"Retrieve and Analyze Clinical Trials in Public Registers","text":"aim download protocol-related trial information tabulate trials’ status conduct. Attach package ctrdata: See help get started ctrdata: Information trial registers can used ctrdata (last updated 2025-02-01): Trial concepts across registers provided ctrdata (new 2025-02-01 🔔): Open registers’ advanced search pages browser: Adjust search parameters execute search browser trials interest listed browser, copy address browser’s address bar clipboard (can automate , see ) Search used example: https://www.clinicaltrialsregister.eu/ctr-search/search?query=neuroblastoma&phase=phase-two&age=children Get address clipboard: 🔔 Queries trial registers can automatically copied clipboard (including “CTIS”, URL otherwise show user’s query) using solution . Retrieve protocol-related information, transform save database: loading trial information, first database collection specified, using nodbi (see specify PostgreSQL, RSQlite, DuckDB MongoDB backend, see section Databases): , trial information retrieved loaded collection: hood, EUCTR plain text XML files EUCTR, CTGOV, ISRCTN converted using Javascript via V8 R NDJSON, imported database collection. Easily generate queries register add records several registers collection parameters can used ask ctrdata generate search queries apply register, opening web interfaces loading trial data collection: Analyse Tabulate status trials part agreed paediatric development program (paediatric investigation plan, PIP). ctrdata functions return data.frame (tibble, package tibble loaded). Queries CTGOV CTGOV2 new website API introduced July 2023 (https://www.clinicaltrials.gov/) supported ctrdata since mid-2023 identified ctrdata CTGOV2. 2024-06-25, CTGOV retired classic website API used ctrdata since 2015. support users, ctrdata automatically translates redirects queries current website. helps automatically updating previously loaded queries (ctrLoadQueryIntoDb(querytoupdate = <n>)), manually migrating queries reproducible work clinical trials information. Going forward, users recommended change use CTGOV2 queries. regards study data, important differences exist field names contents information retrieved using CTGOV CTGOV2; see schema study protocols CTGOV, schema study results Study Data Structure CTGOV2. details, call help(\"ctrdata-registers\"). one reasons ctrdata handles situation two different registers continue identify current API register = \"CTGOV2\", support analysis stage. Note loading trials ctrdata overwrites previous record CTGOV2 data, whether previous record retrieved using CTGOV CTGOV2 queries. Example using CTGOV query: Queries CTIS Queries CTIS search interface can automatically copied clipboard user can paste queryterm, see . Subsequent relaunch CTIS 2024-07-18, 8,700 trials publicly accessible CTIS. See download documents CTIS. Inspect search structure trial information given trial, function ctrShowOneTrial() enables user visualise hiearchy fields contents user’s local web browser, search field names field values, select copy selected fields’ names use function dbGetFieldsIntoDf(). Analysis across trials Show cumulative start trials time. uses calculation trial concepts available since ctrdata version 1.21.0 🔔. Analysis across registers Result-related trial information Analyse simple result details, CTGOV2 (see vignette examples): Neuroblastoma trials Download documents: retrieve protocols, statistical analysis plans documents local folder ./files-.../","code":"library(ctrdata) help(\"ctrdata\") help(\"ctrdata-registers\") help(\"ctrdata-trial-concepts\") ctrOpenSearchPagesInBrowser()  # Please review and respect register copyrights: ctrOpenSearchPagesInBrowser(copyright = TRUE) q <- ctrGetQueryUrl() # * Using clipboard content as register query URL: https://www.clinicaltrialsregister.eu/ # ctr-search/search?query=neuroblastoma&phase=phase-two&age=children # * Found search query from EUCTR: query=neuroblastoma&phase=phase-two&age=children  q #                                         query-term query-register # 1 query=neuroblastoma&phase=phase-two&age=children          EUCTR # Connect to (or create) an SQLite database # stored in a file on the local system: db <- nodbi::src_sqlite(   dbname = \"some_database_name.sqlite_file\",   collection = \"some_collection_name\" ) # Retrieve trials from public register: ctrLoadQueryIntoDb(   queryterm = q,   euctrresults = TRUE,   con = db ) # * Checking trials in EUCTR... # Retrieved overview, multiple records of 73 trial(s) from 4 page(s) to be downloaded (estimate: 9 MB) # (1/3) Downloading trials... # Note: register server cannot compress data, transfer takes longer (estimate: 90 s) # Download status: 4 done; 0 in progress. Total size: 6.39 Mb (100%)... done!              # (2/3) Converting to NDJSON (estimate: 1 s)... # (3/3) Importing records into database... # = Imported or updated 270 records on 73 trial(s)  # * Checking results if available from EUCTR for 73 trials:  # (1/4) Downloading results... # Download status: 73 done; 0 in progress. Total size: 22.57 Mb (100%)... done!              # Download status: 41 done; 0 in progress. Total size: 165.04 Kb (100%)... done!              # Download status: 41 done; 0 in progress. Total size: 165.04 Kb (100%)... done!              # - extracting results (. = data, F = file[s] and data, x = none): # F F . . . . . . . F . . . F . . . F . . . . . F . . . . . . . F  # (2/4) Converting to NDJSON (estimate: 3 s)... # (3/4) Importing results into database (may take some time)... # (4/4) Results history: not retrieved (euctrresultshistory = FALSE) # = Imported or updated results for 32 trials # No history found in expected format. # Updated history (\"meta-info\" in \"some_collection_name\") # $n # [1] 270 # Generate queries for each register queries <- ctrGenerateQueries(   condition = \"neuroblastoma\",   recruitment = \"completed\",   phase = \"phase 2\",   population = \"P\" )  queries # EUCTR  # \"https://www.clinicaltrialsregister.eu/ctr-search/search?query=neuroblastoma&phase=phase-two # &age=children&age=adolescent&age=infant-and-toddler&age=newborn&age=preterm-new-born-infants # &age=under-18&status=completed\"  # CTGOV2  # \"https://clinicaltrials.gov/search?cond=neuroblastoma&aggFilters=phase:2,ages:child,status:com\"  # ISRCTN  # \"https://www.isrctn.com/search?&filters=condition:neuroblastoma,phase:Phase II,ageRange:Child,trialStatus:completed&q=\"  # CTIS  # \"https://euclinicaltrials.eu/ctis-public/search#searchCriteria={\\\"medicalCondition\\\": # \\\"neuroblastoma\\\",\\\"trialPhaseCode\\\":[4],\\\"ageGroupCode\\\":[2],\\\"status\\\":[5,8]}\"   # Open queries in registers' web interfaces sapply(queries, ctrOpenSearchPagesInBrowser)  # Load all queries into database collection result <- lapply(queries, ctrLoadQueryIntoDb, con = db)  sapply(result, \"[[\", \"n\") # EUCTR CTGOV2 ISRCTN   CTIS  #   180    111      0      1 # Get all records that have values in the fields of interest: result <- dbGetFieldsIntoDf(   # Field of interest    fields = c(\"a7_trial_is_part_of_a_paediatric_investigation_plan\"),   # Trial concepts calculated across registers   calculate = c(\".statusRecruitment\", \".isUniqueTrial\"),   con = db ) # Querying database (35 fields)... # - Finding duplicates among registers' and sponsor ids...      # - 114 EUCTR _id were not preferred EU Member State record for 40 trials # - Keeping 111 / 34 / 0 / 0 / 1 records from CTGOV2 / EUCTR / CTGOV / ISRCTN / CTIS  # Tabulate the clinical trial information of interest with(   result[result$.isUniqueTrial, ],   table(     .statusRecruitment,     a7_trial_is_part_of_a_paediatric_investigation_plan   ) ) #                   a7_trial_is_part_of_a_paediatric_investigation_plan # .statusRecruitment FALSE TRUE #          ongoing       0    0 #          completed    12    6 #          other         2    2 # CTGOV search query URL q <- \"https://classic.clinicaltrials.gov/ct2/results?cond=neuroblastoma&rslt=With&recrs=e&age=0&intr=Drug\"  # Open old URL (CTGOV) in current website (CTGOV2): ctrOpenSearchPagesInBrowser(q) # * Appears specific for CTGOV Classic website # Since 2024-06-25, the classic CTGOV servers are no longer available.  # Package ctrdata has translated the classic CTGOV query URL from this call  # of function ctrLoadQueryIntoDb(queryterm = ...) into a query URL that works  # with the current CTGOV2. This is printed below and is also part of the return  # value of this function, ctrLoadQueryIntoDb(...)$url. This URL can be used with  # ctrdata functions. Note that the fields and data schema of trials differ  # between CTGOV and CTGOV2.  # # Replace this URL: #  # https://classic.clinicaltrials.gov/ct2/results?cond=neuroblastoma&rslt=With&recrs=e&age=0&intr=Drug #  # with this URL: #  # https://clinicaltrials.gov/search?cond=neuroblastoma&intr=Drug&aggFilters=ages:child,results:with,status:com #  # * Found search query from CTGOV2: cond=neuroblastoma&intr=Drug&aggFilters=ages:child,results:with,status:com  # Count trials: ctrLoadQueryIntoDb(   queryterm = q,   con = db,    only.count = TRUE ) # $n # [1] 70 # See how many trials are in CTIS publicly accessible: ctrLoadQueryIntoDb(   queryterm = \"\",   register = \"CTIS\",   only.count = TRUE ) # $n # [1] 8754 # This opens a local browser for user interaction.  # If the trial identifier (_id) is not found in the # specified collection, it will be retrieved from the register.  ctrShowOneTrial(   identifier = \"2024-518931-12-00\",    con = db ) # use helper package library(dplyr) library(ggplot2)  df <- dbGetFieldsIntoDf(   fields = \"\",   calculate = c(\".statusRecruitment\", \".isUniqueTrial\", \".startDate\"),   con = db)  df %>%   filter(.isUniqueTrial) %>%   ggplot() +   stat_ecdf(aes(     x = .startDate,     colour = .statusRecruitment)) +    labs(     title = \"Evolution over time of selected trials\",      subtitle = \"Data from EUCTR, CTIS, ISRCTN, CTGOV2\",     x = \"Date of start (proposed or realised)\",      y = \"Cumulative proportion of trials\",     colour = \"Current status\",     caption = Sys.Date()   )  ggsave(   filename = \"man/figures/README-ctrdata_across_registers.png\",   width = 5, height = 3, units = \"in\" ) # use helper package library(ggplot2)  result <- dbGetFieldsIntoDf(   calculate = c(     \".numSites\",      \".sampleSize\",      \".controlType\",      \".numTestArmsSubstances\"),   con = db )  ggplot(data = result) +   labs(     title = \"Selected trials\",     subtitle = \"Patients with a neuroblastoma\"   ) +   geom_point(     mapping = aes(       x = .numSites,       y = .sampleSize,       size = .numTestArmsSubstances,       colour = .controlType     )   ) +   scale_x_log10() +   scale_y_log10() +   labs(     x = \"Number of sites\",     y = \"Total number of participants\",     colour = \"Control\",      size = \"# Treatments\",     caption = Sys.Date()   ) ggsave(   filename = \"man/figures/README-ctrdata_results_neuroblastoma.png\",   width = 5, height = 3, units = \"in\" ) ### EUCTR document files can be downloaded when results are requested # All files are downloaded and saved (documents.regexp is not used with EUCTR)  ctrLoadQueryIntoDb(   queryterm = \"query=cancer&age=under-18&phase=phase-one\",   register = \"EUCTR\",   euctrresults = TRUE,   documents.path = \"./files-euctr/\",   con = db ) # * Found search query from EUCTR: query=cancer&age=under-18&phase=phase-one # * Checking trials in EUCTR... # [...] # = documents saved in './files-euctr' # Updated history (\"meta-info\" in \"some_collection_name\")   ### CTGOV files are downloaded, here corresponding to the default of  # documents.regexp = \"prot|sample|statist|sap_|p1ar|p2ars|ctalett|lay|^[0-9]+ \" ctrLoadQueryIntoDb(   queryterm = \"cond=Neuroblastoma&type=Intr&recrs=e&phase=1&u_prot=Y&u_sap=Y&u_icf=Y\",   register = \"CTGOV\",   documents.path = \"./files-ctgov/\",   con = db ) # * Checking for documents... # - Getting links to documents # - Downloading documents into 'documents.path' = ./files-ctgov/ # - Created directory ./files-ctgov # - Applying 'documents.regexp' to 40 missing documents # - Creating subfolder for each trial # - Downloading 40 missing documents  # Download status: 40 done; 0 in progress. Total size: 110.75 Mb (100%)... done!              # = Newly saved 40 document(s) for 32 trial(s); 0 of such document(s) for 0 trial(s)  # already existed in ./files-ctgov   ### CTGOV2 files are downloaded, using the default of documents.regexp ctrLoadQueryIntoDb(   queryterm = \"https://clinicaltrials.gov/search?cond=neuroblastoma&aggFilters=phase:1,results:with\",   documents.path = \"./files-ctgov2/\",   con = db ) # * Checking for documents... # - Getting links to documents # - Downloading documents into 'documents.path' = ./files-ctgov2/ # - Created directory ./files-ctgov2 # - Creating subfolder for each trial # - Applying 'documents.regexp' to 42 missing documents # - Downloading 42 missing documents # Download status: 42 done; 0 in progress. Total size: 92.57 Mb (100%)... done!              # = Newly saved 42 document(s) for 26 trial(s); 0 of such document(s) for 0  # trial(s) already existed in ./files-ctgov2   ### ISRCTN files are downloaded, using the default of documents.regexp ctrLoadQueryIntoDb(   queryterm = \"https://www.isrctn.com/search?q=alzheimer\",   documents.path = \"./files-isrctn/\",   con = db ) # * Found search query from ISRCTN: q=alzheimer # [...] # * Checking for documents...                       # - Getting links to documents # - Downloading documents into 'documents.path' = ./files-isrctn/ # - Created directory /Users/ralfherold/Daten/mak/r/emea/ctrdata/files-isrctn # - Applying 'documents.regexp' to 52 missing documents # - Creating subfolder for each trial # - Downloading 32 missing documents  # Download status: 32 done; 0 in progress. Total size: 14.89 Mb (100%)... done!              # = Newly saved 26 document(s) for 15 trial(s); 0 of such document(s) for 0  # trial(s) already existed in ./files-isrctn   ### CTIS files are downloaded, using the default of documents.regexp ctrLoadQueryIntoDb(   queryterm = paste0(     'https://euclinicaltrials.eu/ctis-public/search#',      'searchCriteria={\"containAny\":\"cancer\",\"status\":[8]}'),   documents.path = \"./files-ctis/\",   documents.regexp = \"icf\",   con = db ) # * Found search query from CTIS: searchCriteria={\"containAny\":\"cancer\"} # [...] # * Checking for documents: . . . . . . . . . . . . . . . . . . .  # - Downloading documents into 'documents.path' = ./files-ctis/ # - Applying 'documents.regexp' to 1114 missing documents # - Creating subfolder for each trial # - Downloading 512 missing documents (excluding 2 files with duplicate names  # for saving, e.g. /Users/ralfherold/Daten/mak/r/emea/ctrdata/files-ctis/2022- # 500694-14-00/SbjctInfaICF - L1 SIS and ICF Prescreening ICF clean placeholder # - 137297.PDF, /Users/ralfherold/Daten/mak/r/emea/ctrdata/files-ctis/2022- # 500694-14-00/SbjctInfaICF - L1 SIS and ICF Pregnant Partner ICF clean -  # 137297.PDF)  # Download status: 510 done; 0 in progress. Total size: 377.27 Kb (100%)... done!              # Redirecting to CDN... # Download status: 127 done; 0 in progress. Total size: 47.66 Mb (100%)... done!              # = Newly saved 510 document(s) for 35 trial(s); 0 of such document(s) for 0  # trial(s) already existed in ./files-ctis"},{"path":"https://rfhb.github.io/ctrdata/index.html","id":"tests","dir":"","previous_headings":"","what":"Tests","title":"Retrieve and Analyze Clinical Trials in Public Registers","text":"See also https://app.codecov.io/gh/rfhb/ctrdata/tree/master/R","code":"tinytest::test_all() # test_ctrdata_ctrfindactivesubstance.R    4 tests OK 0.8s # test_ctrdata_duckdb_ctgov2.R..   78 tests OK 47.3s # test_ctrdata_function_ctrgeneratequeries.R   12 tests OK 4ms # test_ctrdata_function_dfcalculate.R   26 tests OK 2.0s # test_ctrdata_other_functions.R   67 tests OK 3.1s # test_ctrdata_postgres_ctgov2.R   50 tests OK 32.0s # test_ctrdata_sqlite_ctgov.R...  108 tests OK 30.8s # test_ctrdata_sqlite_ctgov2.R..   50 tests OK 26.8s # test_ctrdata_sqlite_ctis.R....   63 tests OK 49.4s # test_ctrdata_sqlite_euctr.R...  115 tests OK 44.2s # test_ctrdata_sqlite_isrctn.R..   38 tests OK 12.5s # test_euctr_error_sample.R.....    8 tests OK 0.2s # All ok, 619 results (4m 9.2s)  covr::package_coverage(path = \".\", type = \"tests\") # ctrdata Coverage: 94.06% # R/ctrShowOneTrial.R: 57.89% # R/dfCalculateConcept.R: 58.62% # R/ctrRerunQuery.R: 74.85% # R/zzz.R: 80.95% # R/dbGetFieldsIntoDf.R: 86.90% # R/util_functions.R: 89.52% # R/ctrLoadQueryIntoDbEuctr.R: 90.08% # R/ctrGetQueryUrl.R: 90.09% # R/ctrLoadQueryIntoDbIsrctn.R: 92.45% # R/ctrLoadQueryIntoDbCtgov2.R: 92.90% # R/ctrFindActiveSubstanceSynonyms.R: 93.62% # R/dfMergeVariablesRelevel.R: 94.29% # R/ctrLoadQueryIntoDb.R: 94.81% # R/ctrLoadQueryIntoDbCtis.R: 95.26% # R/dbFindFields.R: 95.88% # R/vct_primaryEndpointResults.R: 96.27% # R/ctrOpenSearchPagesInBrowser.R: 97.37% # R/dbFindIdsUniqueTrials.R: 97.87% # R/vct_numTestArmsSubstances.R: 97.95% # R/ctrGenerateQueries.R: 100.00% # R/dbQueryHistory.R: 100.00% # R/dfName2Value.R: 100.00% # R/dfTrials2Long.R: 100.00% # R/vct_controlType.R: 100.00% # R/vct_isMedIntervTrial.R: 100.00% # R/vct_isPlatformTrial.R: 100.00% # R/vct_isUniqueTrial.R: 100.00% # R/vct_numSites.R: 100.00% # R/vct_primaryEndpointDescription.R: 100.00% # R/vct_resultsDate.R: 100.00% # R/vct_sampleSize.R: 100.00% # R/vct_sponsorType.R: 100.00% # R/vct_startDate.R: 100.00% # R/vct_statusRecruitment.R: 100.00% # R/vct_trialObjectives.R: 100.00% # R/vct_trialPhase.R: 100.00% # R/vct_trialPopulation.R: 100.00%"},{"path":"https://rfhb.github.io/ctrdata/index.html","id":"future-features","dir":"","previous_headings":"","what":"Future features","title":"Retrieve and Analyze Clinical Trials in Public Registers","text":"See project outline https://github.com/users/rfhb/projects/1 Authentication, expected required CTGOV2; specifications yet known (work yet started). Explore registers (exploration continually ongoing; added value, terms conditions programmatic access vary; clear roadmap established yet). Implemented: Retrieve previous versions protocol- results-related information. challenges include, historic versions can retrieved one--one, include results, structured format. functionality available version 1.17.3 extent possible time, namely protocol- results-related information CTGOV2, Canonical definitions, filters, calculations works (since August 2023) data mangling analyses across registers, e.g. define study population, identify interventional trials, calculate study duration; public collaboration canonical scripts speed harmonising analyses. Merge results-related fields retrieved different registers, corresponding endpoints (work yet started). challenge incomplete congruency different structure data fields.","code":""},{"path":"https://rfhb.github.io/ctrdata/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Retrieve and Analyze Clinical Trials in Public Registers","text":"Data providers curators clinical trial registers. Please review respect copyrights terms conditions, see ctrOpenSearchPagesInBrowser(copyright = TRUE). Package ctrdata made possible building work done R, clipr. curl, dplyr, duckdb, httr, jqr, jsonlite, lubridate, mongolite, nodbi, RPostgres, RSQLite, rvest, stringi xml2.","code":""},{"path":"https://rfhb.github.io/ctrdata/index.html","id":"issues-and-notes","dir":"","previous_headings":"","what":"Issues and notes","title":"Retrieve and Analyze Clinical Trials in Public Registers","text":"Information trial registers may fully correct; see example publication CTGOV. warning may issued record imported complexity XML content high processing. issue can resolved increasing operating system stack size available R, see: https://github.com/rfhb/ctrdata/issues/22 Please file issues bugs . Also check handle closed issues, e.g. C stack usage close limit SSL certificate problem: unable get local issuer certificate.","code":""},{"path":[]},{"path":"https://rfhb.github.io/ctrdata/index.html","id":"sqlite","dir":"","previous_headings":"Trial records in databases","what":"SQLite","title":"Retrieve and Analyze Clinical Trials in Public Registers","text":"recommended use nodbi >= 0.10.7.9000 builds RSQLite >= 2.3.7.9014 (releases expected November 2024), versions enable file-based imports thus much faster: Example JSON representation SQLite","code":"# install latest development versions: devtools::install_github(\"ropensci/nodbi\")  # requires compilation, for which under MS Windows # automatically additional R Tools are installed: devtools::install_github(\"r-dbi/RSQLite\")"},{"path":"https://rfhb.github.io/ctrdata/index.html","id":"mongodb","dir":"","previous_headings":"Trial records in databases","what":"MongoDB","title":"Retrieve and Analyze Clinical Trials in Public Registers","text":"Example JSON representation MongoDB","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/ctrDb.html","id":null,"dir":"Reference","previous_headings":"","what":"Check and prepare nodbi connection object for ctrdata — ctrDb","title":"Check and prepare nodbi connection object for ctrdata — ctrDb","text":"Check prepare nodbi connection object ctrdata","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/ctrDb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check and prepare nodbi connection object for ctrdata — ctrDb","text":"","code":"ctrDb(con)"},{"path":"https://rfhb.github.io/ctrdata/reference/ctrDb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check and prepare nodbi connection object for ctrdata — ctrDb","text":"con database connection object, created nodbi. See section `1 - Database connection` ctrdata.","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/ctrDb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check and prepare nodbi connection object for ctrdata — ctrDb","text":"Connection object list, collection  element root","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/ctrFindActiveSubstanceSynonyms.html","id":null,"dir":"Reference","previous_headings":"","what":"Find synonyms of an active substance — ctrFindActiveSubstanceSynonyms","title":"Find synonyms of an active substance — ctrFindActiveSubstanceSynonyms","text":"active substance can identified recommended international nonproprietary name (INN), trade product name, company code(s). find likely synonyms, function retrieves CTGOV2 field protocolSection.armsInterventionsModule.interventions.otherNames. Note seem based choices dictionary may manually filled, thus free error needs checked.","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/ctrFindActiveSubstanceSynonyms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find synonyms of an active substance — ctrFindActiveSubstanceSynonyms","text":"","code":"ctrFindActiveSubstanceSynonyms(activesubstance = \"\", verbose = FALSE)"},{"path":"https://rfhb.github.io/ctrdata/reference/ctrFindActiveSubstanceSynonyms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find synonyms of an active substance — ctrFindActiveSubstanceSynonyms","text":"activesubstance active substance, atomic character vector verbose Print number studies found CTGOV2 `activesubstance`","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/ctrFindActiveSubstanceSynonyms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find synonyms of an active substance — ctrFindActiveSubstanceSynonyms","text":"character vector active substance (input parameter)  synonyms, NULL active substance found may invalid","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/ctrFindActiveSubstanceSynonyms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find synonyms of an active substance — ctrFindActiveSubstanceSynonyms","text":"","code":"if (FALSE) { # \\dontrun{  ctrFindActiveSubstanceSynonyms(activesubstance = \"imatinib\") #  [1] \"imatinib\"          \"CGP 57148\"         \"CGP 57148B\" #  [4] \"CGP57148B\"         \"Gleevec\"           \"GLIVEC\" #  [7] \"Imatinib\"          \"Imatinib Mesylate\" \"NSC 716051\" # [10] \"ST1571\"            \"STI 571\"           \"STI571\"  } # }"},{"path":"https://rfhb.github.io/ctrdata/reference/ctrGenerateQueries.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates queries that work across registers — ctrGenerateQueries","title":"Generates queries that work across registers — ctrGenerateQueries","text":"high-level search terms provided user, generate specific queries registers ctrdata works, see ctrdata-registers. Search terms expanded concepts MeSH MedDRA search implementations registers include intervention condition, see ctrdata-registers.","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/ctrGenerateQueries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates queries that work across registers — ctrGenerateQueries","text":"","code":"ctrGenerateQueries(   condition = NULL,   intervention = NULL,   phase = NULL,   population = NULL,   recruitment = NULL,   startBefore = NULL,   startAfter = NULL,   completedBefore = NULL,   completedAfter = NULL,   onlyWithResults = FALSE,   registers = c(\"EUCTR\", \"ISRCTN\", \"CTIS\", \"CTGOV2\") )"},{"path":"https://rfhb.github.io/ctrdata/reference/ctrGenerateQueries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates queries that work across registers — ctrGenerateQueries","text":"condition String condition / disease intervention String intervention phase String, e.g. \"phase 2\" (note \"phase 2+3\" specific category, union set \"phase 2\" \"phase 3\") population String, e.g. \"P\" (paediatric), \"\" (adult), \"P+\" (adult paediatric), \"E\" (elderly), \"P++E\" participants can recruited recruitment String, one \"ongoing\", \"completed\", \"\" startBefore String can interpreted date, see example startAfter String can interpreted date completedBefore String can interpreted date (work EUCTR) completedAfter String can interpreted date (work EUCTR) onlyWithResults Logical registers Vector register names, default registers","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/ctrGenerateQueries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates queries that work across registers — ctrGenerateQueries","text":"Named vector URLs finding trials registers input functions ctrLoadQueryIntoDb ctrOpenSearchPagesInBrowser","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/ctrGenerateQueries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates queries that work across registers — ctrGenerateQueries","text":"","code":"urls <- ctrGenerateQueries(   intervention = \"antibody\",   recruitment = \"ongoing\",   phase = \"phase 3\",   startAfter = \"2000-01-01\")  # open queries in register web interface sapply(urls, ctrOpenSearchPagesInBrowser) #> * Found search query from EUCTR: query=antibody&phase=phase-three&status=ongoing&status=trial-now-transitioned&status=suspended-by-ca&status=temporarily-halted&status=restarted&dateFrom=2000-01-01 #> * Appears specific for CTGOV REST API 2.0 #> * Found search query from CTGOV2: intr=antibody&start=2000-01-01_&aggFilters=phase:3,status:act rec #> * Found search query from ISRCTN: &filters=intervention:antibody,phase:Phase III,trialStatus:ongoing,GT+overallStartDate:2000-01-01&q= #> * Found search query from CTIS: searchCriteria={\"containAll\":\"antibody\",\"trialPhaseCode\":[5],\"status\":[2,3,4,6,7],\"eeaStartDateFrom\":\"2000-01-01\"} #>                                                                                                                                                                                                                              EUCTR  #> \"https://www.clinicaltrialsregister.eu/ctr-search/search?query=antibody&phase=phase-three&status=ongoing&status=trial-now-transitioned&status=suspended-by-ca&status=temporarily-halted&status=restarted&dateFrom=2000-01-01#tabs\"  #>                                                                                                                                                                                                                             CTGOV2  #>                                                                                                                              \"https://clinicaltrials.gov/search?intr=antibody&start=2000-01-01_&aggFilters=phase:3,status:act rec\"  #>                                                                                                                                                                                                                             ISRCTN  #>                                                                                               \"https://www.isrctn.com/search?&filters=intervention:antibody,phase:Phase III,trialStatus:ongoing,GT+overallStartDate:2000-01-01&q=\"  #>                                                                                                                                                                                                                               CTIS  #>                                                    \"https://euclinicaltrials.eu/ctis-public/search#searchCriteria={\\\"containAll\\\":\\\"antibody\\\",\\\"trialPhaseCode\\\":[5],\\\"status\\\":[2,3,4,6,7],\\\"eeaStartDateFrom\\\":\\\"2000-01-01\\\"}\"   # load queries into database collection # sapply(urls, ctrLoadQueryIntoDb, con = dbc)"},{"path":"https://rfhb.github.io/ctrdata/reference/ctrGetQueryUrl.html","id":null,"dir":"Reference","previous_headings":"","what":"Get register name and query parameters from search URL — ctrGetQueryUrl","title":"Get register name and query parameters from search URL — ctrGetQueryUrl","text":"Extracts query parameters register name parameter `url` clipboard, URL register search copied.","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/ctrGetQueryUrl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get register name and query parameters from search URL — ctrGetQueryUrl","text":"","code":"ctrGetQueryUrl(url = \"\", register = \"\")"},{"path":"https://rfhb.github.io/ctrdata/reference/ctrGetQueryUrl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get register name and query parameters from search URL — ctrGetQueryUrl","text":"url URL browser address bar. specified, clipboard contents checked suitable URL. automatically copying user's query register web browser clipboard, see . Can also contain query term dbQueryHistory()[\"query-term\"]. Can also identifier trial, based format indicate register relates. register Optional name register (one \"EUCTR\", \"CTGOV2\" \"ISRCTN\" \"CTIS\") case `url` query term full URL","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/ctrGetQueryUrl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get register name and query parameters from search URL — ctrGetQueryUrl","text":"data frame (tibble, tibble loaded) column names `query-term` `query-register`. data frame (tibble) can passed parameter `query-term` ctrLoadQueryIntoDb parameter `url` ctrOpenSearchPagesInBrowser.","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/ctrGetQueryUrl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get register name and query parameters from search URL — ctrGetQueryUrl","text":"","code":"# user copied into the clipboard the URL from # the address bar of the browser that shows results # from a query in one of the trial registers if (interactive()) try(ctrGetQueryUrl(), silent = TRUE) #> * Using clipboard content as register query URL: https://diesnerfunk.de/amateurfunk/amateur-handfunkgeraete-duo-triband/2005/pni-p15uv-amateurhandfunkgeraet-vhf/uhf-144-146-430-440-mhz?c=6 #> Warning: ctrGetQueryUrl(): no clinical trial register search URL found in parameter 'url' or in clipboard.  # extract query parameters from search result URL # (URL was cut for the purpose of formatting only) ctrGetQueryUrl(     url = paste0(         \"https://classic.clinicaltrials.gov/ct2/results?\",         \"cond=&term=AREA%5BMaximumAge%5D+RANGE%5B0+days%2C+28+days%5D\",         \"&type=Intr&rslt=&age_v=&gndr=&intr=Drugs%2C+Investigational\",         \"&titles=&outc=&spons=&lead=&id=&cntry=&state=&city=&dist=\",         \"&locn=&phase=2&rsub=&strd_s=01%2F01%2F2015&strd_e=01%2F01%2F2016\",         \"&prcd_s=&prcd_e=&sfpd_s=&sfpd_e=&rfpd_s=&rfpd_e=&lupd_s=&lupd_e=&sort=\"     ) ) #> * Appears specific for CTGOV Classic website #> Since 2024-06-25, the classic CTGOV servers are no longer available. Package ctrdata has translated the classic CTGOV query URL from this call of function ctrLoadQueryIntoDb(queryterm = ...) into a query URL that works with the current CTGOV2. This is printed below and is also part of the return value of this function, ctrLoadQueryIntoDb(...)$url. This URL can be used with ctrdata functions. Note that the fields and data schema of trials differ between CTGOV and CTGOV2.  #>  #> Replace this URL: #>  #> https://classic.clinicaltrials.gov/ct2/results?term=AREA%5BMaximumAge%5D+RANGE%5B0+days%2C+28+days%5D&type=Intr&intr=Drugs%2C+Investigational&phase=2&strd_s=01%2F01%2F2015&strd_e=01%2F01%2F2016 #>  #> with this URL: #>  #> https://clinicaltrials.gov/search?start=2015-01-01_2016-01-01&term=AREA[MaximumAge] RANGE[0 days, 28 days]&intr=Drugs, Investigational&aggFilters=phase:3,studyType:int #> * Found search query from CTGOV2: start=2015-01-01_2016-01-01&term=AREA[MaximumAge] RANGE[0 days, 28 days]&intr=Drugs, Investigational&aggFilters=phase:3,studyType:int #>                                                                                                                              query-term #> 1 start=2015-01-01_2016-01-01&term=AREA[MaximumAge] RANGE[0 days, 28 days]&intr=Drugs, Investigational&aggFilters=phase:3,studyType:int #>   query-register #> 1         CTGOV2  # other examples ctrGetQueryUrl(\"https://www.clinicaltrialsregister.eu/ctr-search/trial/2007-000371-42/results\") #> * Found search query from EUCTR: query=2007-000371-42 #>             query-term query-register #> 1 query=2007-000371-42          EUCTR ctrGetQueryUrl(\"https://euclinicaltrials.eu/ctis-public/view/2022-500041-24-00\") #> * Found search query from CTIS: searchCriteria={\"number\":\"2022-500041-24-00\"} #>                                      query-term query-register #> 1 searchCriteria={\"number\":\"2022-500041-24-00\"}           CTIS ctrGetQueryUrl(\"https://classic.clinicaltrials.gov/ct2/show/NCT01492673?cond=neuroblastoma\") #> * Appears specific for CTGOV Classic website #> * Note: 'url' shows a single trial (and is returned by the function) but also had search parameters: If interested in search results, click 'Return to List' in browser and use this as 'url'. #> Since 2024-06-25, the classic CTGOV servers are no longer available. Package ctrdata has translated the classic CTGOV query URL from this call of function ctrLoadQueryIntoDb(queryterm = ...) into a query URL that works with the current CTGOV2. This is printed below and is also part of the return value of this function, ctrLoadQueryIntoDb(...)$url. This URL can be used with ctrdata functions. Note that the fields and data schema of trials differ between CTGOV and CTGOV2.  #>  #> Replace this URL: #>  #> https://classic.clinicaltrials.gov/ct2/results?term=NCT01492673 #>  #> with this URL: #>  #> https://clinicaltrials.gov/search?term=NCT01492673 #> * Found search query from CTGOV2: term=NCT01492673 #>         query-term query-register #> 1 term=NCT01492673         CTGOV2 ctrGetQueryUrl(\"https://clinicaltrials.gov/ct2/show/NCT01492673?cond=neuroblastoma\") #> * Appears specific for CTGOV Classic website #> * Note: 'url' shows a single trial (and is returned by the function) but also had search parameters: If interested in search results, click 'Return to List' in browser and use this as 'url'. #> Since 2024-06-25, the classic CTGOV servers are no longer available. Package ctrdata has translated the classic CTGOV query URL from this call of function ctrLoadQueryIntoDb(queryterm = ...) into a query URL that works with the current CTGOV2. This is printed below and is also part of the return value of this function, ctrLoadQueryIntoDb(...)$url. This URL can be used with ctrdata functions. Note that the fields and data schema of trials differ between CTGOV and CTGOV2.  #>  #> Replace this URL: #>  #> https://classic.clinicaltrials.gov/ct2/results?term=NCT01492673 #>  #> with this URL: #>  #> https://clinicaltrials.gov/search?term=NCT01492673 #> * Found search query from CTGOV2: term=NCT01492673 #>         query-term query-register #> 1 term=NCT01492673         CTGOV2 ctrGetQueryUrl(\"https://clinicaltrials.gov/study/NCT01467986?aggFilters=ages:child\") #> * Appears specific for CTGOV REST API 2.0 #> * Note: 'url' shows a single trial (and is returned by the function) but also had search parameters: If interested in search results, click on 'Search Results' in browser and use this as 'url'. #> * Found search query from CTGOV2: id=NCT01467986 #>       query-term query-register #> 1 id=NCT01467986         CTGOV2 ctrGetQueryUrl(\"https://www.isrctn.com/ISRCTN70039829\") #> * Found search query from ISRCTN: q=ISRCTN70039829 #>         query-term query-register #> 1 q=ISRCTN70039829         ISRCTN  # using identifiers of single trials ctrGetQueryUrl(\"70039829\") #> * Found search query from ISRCTN: q=70039829 #>   query-term query-register #> 1 q=70039829         ISRCTN ctrGetQueryUrl(\"ISRCTN70039829\") #> * Found search query from ISRCTN: q=ISRCTN70039829 #>         query-term query-register #> 1 q=ISRCTN70039829         ISRCTN ctrGetQueryUrl(\"NCT00617929\") #> Not overruling register label CTGOV2 #> * Found search query from CTGOV2: term=NCT00617929 #>         query-term query-register #> 1 term=NCT00617929         CTGOV2 ctrGetQueryUrl(\"2022-501142-30-00\") #> * Found search query from CTIS: searchCriteria={\"number\":\"2022-501142-30-00\"} #>                                      query-term query-register #> 1 searchCriteria={\"number\":\"2022-501142-30-00\"}           CTIS ctrGetQueryUrl(\"2012-003632-23\") #> * Found search query from EUCTR: query=2012-003632-23 #>             query-term query-register #> 1 query=2012-003632-23          EUCTR"},{"path":"https://rfhb.github.io/ctrdata/reference/ctrLoadQueryIntoDb.html","id":null,"dir":"Reference","previous_headings":"","what":"Load and store register trial information — ctrLoadQueryIntoDb","title":"Load and store register trial information — ctrLoadQueryIntoDb","text":"Retrieves information clinical trials registers stores collection database. Main function ctrdata accessing registers. collection can store trial information different queries different registers. Query details stored collection can accessed using dbQueryHistory. previous query can re-run, replaces adds trial records keeping user annotations trial records.","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/ctrLoadQueryIntoDb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load and store register trial information — ctrLoadQueryIntoDb","text":"","code":"ctrLoadQueryIntoDb(   queryterm = NULL,   register = \"\",   querytoupdate = NULL,   forcetoupdate = FALSE,   euctrresults = FALSE,   euctrresultshistory = FALSE,   ctgov2history = FALSE,   documents.path = NULL,   documents.regexp = \"prot|sample|statist|sap_|p1ar|p2ars|icf|ctalett|lay|^[0-9]+ \",   annotation.text = \"\",   annotation.mode = \"append\",   only.count = FALSE,   con = NULL,   verbose = FALSE,   ... )"},{"path":"https://rfhb.github.io/ctrdata/reference/ctrLoadQueryIntoDb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load and store register trial information — ctrLoadQueryIntoDb","text":"queryterm Either string full URL search query register, data frame returned ctrGetQueryUrl dbQueryHistory functions, , together parameter register, string query elements search URL. query details recorded collection later use update records. \"CTIS\", queryterm can empty string obtain trial records. automatically copying user's query register web browser clipboard, see register String abbreviation register query, either \"EUCTR\", \"CTGOV2\", \"ISRCTN\" \"CTIS\". needed queryterm provides full URL query results provides single trial identifier. querytoupdate Either word \"last\", row number query data frame returned dbQueryHistory run retrieve new update trial records since query run last time. parameter takes precedence queryterm. \"EUCTR\", updates available last seven days; query run time passed since run last. work \"CTIS\" time. forcetoupdate TRUE, run query given querytoupdate, irrespective run last. Default FALSE. euctrresults TRUE, also download available results retrieving loading trials EUCTR. slows function. (\"CTGOV2\" \"CTIS\", available results always retrieved loaded collection.) euctrresultshistory TRUE, download results also available history results publication \"EUCTR.\" somewhat time-consuming. Default FALSE. ctgov2history trials CTGOV2, retrieve historic versions record. Default FALSE, time-consuming operation. Use n n versions (recommended), 1 first (original) version, -1 last--one version, \"n:m\" nth mth versions, TRUE versions trial record retrieved. Note register CTIS, historic versions available `applications` field register's relaunch 2024-06-17. documents.path relative absolute path directory exists can created, save documents directly available register (\"EUCTR\", \"CTGOV2\", \"ISRCTN\", \"CTIS\") PDFs results, analysis plans, spreadsheets, patient information sheets, assessments product information. Default NULL, disables saving documents. \"EUCTR\", sets euctrresults = TRUE since documents available results. documents.regexp Regular expression, case insensitive, select documents filename, saving documents requested (see documents.path). set NULL, empty placeholder files saved every document saved, useful get overview number types documents available download. Default \"prot|sample|statist|sap_|p1ar|p2ars|icf|ctalett|lay|^[0-9]+ \". Used \"CTGOV2\", \"ISRCTN\" \"CTIS\" (\"EUCTR\", documents downloaded since non-canonical filenames.) annotation.text Text including field \"annotation\" records retrieved query loaded collection. contents field \"annotation\" trial record preserved e.g. running function loading record annotation, see parameter annotation.mode. annotation.mode One \"append\" (default), \"prepend\" \"replace\" new annotation.text respect existing annotation records retrieved query loaded collection. .count Set TRUE return number trial records found register query. load trial information database. Default FALSE. con database connection object, created nodbi. See section `1 - Database connection` ctrdata. verbose Printing additional information set TRUE; default FALSE. ... use (capture deprecated parameters).","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/ctrLoadQueryIntoDb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load and store register trial information — ctrLoadQueryIntoDb","text":"list elements `n` (number trial records newly imported updated), `success` (vector _id's successfully loaded records), `failed` (vector identifiers records failed load) `queryterm` (query term used). returned list several attributes (including database collection name, well query history database collection) facilitate documentation.","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/ctrLoadQueryIntoDb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load and store register trial information — ctrLoadQueryIntoDb","text":"","code":"if (FALSE) { # \\dontrun{  dbc <- nodbi::src_sqlite(collection = \"my_collection\")  # Retrieve protocol- and results-related information # on two specific trials identified by their EU number ctrLoadQueryIntoDb(   queryterm = \"2005-001267-63+OR+2008-003606-33\",   register = \"EUCTR\",   euctrresults = TRUE,   con = dbc )  # Count ongoing interventional cancer trials involving children # Note this query is a classical CTGOV query and is translated # to a corresponding query for the current CTGOV2 webinterface ctrLoadQueryIntoDb(   queryterm = \"cond=cancer&recr=Open&type=Intr&age=0\",   register = \"CTGOV\",   only.count = TRUE,   con = dbc )  # Retrieve all information on more than 40 trials # that are labelled as phase 3 and that mention # either neuroblastoma or lymphoma from ISRCTN, # into the same collection as used before ctrLoadQueryIntoDb(   queryterm = paste0(     \"https://www.isrctn.com/search?\",     \"q=neuroblastoma+OR+lymphoma&filters=phase%3APhase+III\"),   con = dbc )  # Retrieve information trials in CTIS mentioning neonates ctrLoadQueryIntoDb(   queryterm = paste0(\"https://euclinicaltrials.eu/ctis-public/\",   \"search#searchCriteria={%22containAll%22:%22%22,\",   \"%22containAny%22:%22neonates%22,%22containNot%22:%22%22}\"),   con = dbc ) } # }"},{"path":"https://rfhb.github.io/ctrdata/reference/ctrOpenSearchPagesInBrowser.html","id":null,"dir":"Reference","previous_headings":"","what":"Open register to show query results or search page — ctrOpenSearchPagesInBrowser","title":"Open register to show query results or search page — ctrOpenSearchPagesInBrowser","text":"Open advanced search pages register(s), execute search browser","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/ctrOpenSearchPagesInBrowser.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open register to show query results or search page — ctrOpenSearchPagesInBrowser","text":"","code":"ctrOpenSearchPagesInBrowser(url = \"\", register = \"\", copyright = FALSE)"},{"path":"https://rfhb.github.io/ctrdata/reference/ctrOpenSearchPagesInBrowser.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open register to show query results or search page — ctrOpenSearchPagesInBrowser","text":"url search results page show browser. open browser previous search, output ctrGetQueryUrl dbQueryHistory can used. Can left empty string (default) open advanced search page register. register Register(s) open, \"EUCTR\", \"CTGOV2\", \"ISRCTN\" \"CTIS\". Default empty string, opens advanced search page register(s). copyright (Optional) set TRUE, opens copyright pages registers.","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/ctrOpenSearchPagesInBrowser.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Open register to show query results or search page — ctrOpenSearchPagesInBrowser","text":"(String) Full URL corresponding shortened url   conjunction register , invisibly   TRUE url specified.","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/ctrOpenSearchPagesInBrowser.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Open register to show query results or search page — ctrOpenSearchPagesInBrowser","text":"","code":"# Open all and check copyrights before using registers ctrOpenSearchPagesInBrowser(copyright = TRUE)  # Open specific register advanced search page ctrOpenSearchPagesInBrowser(register = \"CTGOV2\") ctrOpenSearchPagesInBrowser(register = \"CTIS\") ctrOpenSearchPagesInBrowser(register = \"EUCTR\") ctrOpenSearchPagesInBrowser(register = \"ISRCTN\")  # Open all queries that were loaded into demo collection dbc <- nodbi::src_sqlite(   dbname = system.file(\"extdata\", \"demo.sqlite\", package = \"ctrdata\"),   collection = \"my_trials\",   flags = RSQLite::SQLITE_RO) #> RSQLite version has enabled accelerating docdb_create() and docdb_update() functions when used with value = <NDJSON file name>.  dbh <- dbQueryHistory(con = dbc)  for (r in seq_len(nrow(dbh))) {     ctrOpenSearchPagesInBrowser(dbh[r, ]) } #> Since 2024-06-25, the classic CTGOV servers are no longer available. Package ctrdata has translated the classic CTGOV query URL from this call of function ctrLoadQueryIntoDb(queryterm = ...) into a query URL that works with the current CTGOV2. This is printed below and is also part of the return value of this function, ctrLoadQueryIntoDb(...)$url. This URL can be used with ctrdata functions. Note that the fields and data schema of trials differ between CTGOV and CTGOV2.  #>  #> Replace this URL: #>  #> term=AREA[MaximumAge]+RANGE[0+days,+28+days]&intr=Drugs,+Investigational&strd_s=01/01/2018&strd_e=01/01/2020&type=Intr&phase=2 #>  #> with this URL: #>  #> https://clinicaltrials.gov/search?start=2018-01-01_2020-01-01&term=AREA[MaximumAge] RANGE[0 days, 28 days]&intr=Drugs, Investigational&aggFilters=phase:3,studyType:int"},{"path":"https://rfhb.github.io/ctrdata/reference/ctrShowOneTrial.html","id":null,"dir":"Reference","previous_headings":"","what":"Show full structure and all data of a trial — ctrShowOneTrial","title":"Show full structure and all data of a trial — ctrShowOneTrial","text":"used interactively, function shows widget data trial tree field names values. widget opens default browser. Fields names values can search selected. Selected fields can copied clipboard use function dbGetFieldsIntoDf. trial retrieved ctrLoadQueryIntoDb database con provided trial database con.","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/ctrShowOneTrial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show full structure and all data of a trial — ctrShowOneTrial","text":"","code":"ctrShowOneTrial(identifier = NULL, con = NULL)"},{"path":"https://rfhb.github.io/ctrdata/reference/ctrShowOneTrial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show full structure and all data of a trial — ctrShowOneTrial","text":"identifier trial identifier string con database connection object, created nodbi. See section `1 - Database connection` ctrdata.","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/ctrShowOneTrial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show full structure and all data of a trial — ctrShowOneTrial","text":"Invisibly, trial data constructing HTML widget.","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/ctrShowOneTrial.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Show full structure and all data of a trial — ctrShowOneTrial","text":"widget CTIS trial 2022-501142-30-00:","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/ctrShowOneTrial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show full structure and all data of a trial — ctrShowOneTrial","text":"","code":"dbc <- nodbi::src_sqlite(   dbname = system.file(\"extdata\", \"demo.sqlite\", package = \"ctrdata\"),   collection = \"my_trials\",   flags = RSQLite::SQLITE_RO) #> RSQLite version has enabled accelerating docdb_create() and docdb_update() functions when used with value = <NDJSON file name>.  # all such identifiers work id <- \"2014-003556-31\" id <- \"2014-003556-31-SE\" id <- \"76463425\" id <- \"ISRCTN76463425\" id <- \"NCT03431558\" id <- \"2022-501142-30-00\"  # the id also works with # ctrGetQueryUrl(url = id) and # ctrLoadQueryIntoDb(queryterm = id, ...)  # show widget for user to explore and search content as well as to # select fields of interest and to click on \"Copy names of selected # fields to clipboard...\" to use them with dbGetFieldsIntoDf() ctrShowOneTrial(identifier = id, con = dbc) #> Error in utils::browseURL(tf): 'browser' must be a non-empty character string  # get sample of identifiers of trials in database sample(dbFindIdsUniqueTrials(con = dbc), 5L) #> Searching for duplicate trials...  #> - Getting all trial identifiers... #>  (may take some time)... #> , 29 found in collection #> - Finding duplicates among registers' and sponsor ids... #> - 2 EUCTR _id were not preferred EU Member State record for 8 trials #> - Keeping 5 / 3 / 8 / 8 / 3 records from CTGOV2 / EUCTR / CTGOV / ISRCTN / CTIS #> = Returning keys (_id) of 27 records in collection \"my_trials\" #>              ISRCTN               EUCTR               EUCTR              CTGOV2  #>          \"76463425\" \"2014-002606-20-PT\" \"2014-003556-31-SE\"       \"NCT00617929\"  #>               CTGOV  #>       \"NCT03876704\""},{"path":"https://rfhb.github.io/ctrdata/reference/ctrdata-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ctrdata: Retrieve and Analyze Clinical Trials in Public Registers — ctrdata-package","title":"ctrdata: Retrieve and Analyze Clinical Trials in Public Registers — ctrdata-package","text":"system querying, retrieving analyzing protocol- results-related information clinical trials four public registers, 'European Union Clinical Trials Register' ('EUCTR', https://www.clinicaltrialsregister.eu/), 'ClinicalTrials.gov' (https://clinicaltrials.gov/ also translating queries retired classic interface), 'ISRCTN' (http://www.isrctn.com/) 'European Union Clinical Trials Information System' ('CTIS', https://euclinicaltrials.eu/). Trial information downloaded, converted stored database ('PostgreSQL', 'SQLite', 'DuckDB' 'MongoDB'; via package 'nodbi'). Documents registers associated trials can also downloaded. functions implement trial concepts canonically across registers, identify deduplicated records, easily find extract variables (fields) interest even complex nested data used registers, merge variables update queries. package can used meta-analysis trend-analysis design conduct well results clinical trials across registers.","code":""},{"path":[]},{"path":"https://rfhb.github.io/ctrdata/reference/ctrdata-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ctrdata: Retrieve and Analyze Clinical Trials in Public Registers — ctrdata-package","text":"Maintainer: Ralf Herold ralf.herold@mailbox.org (ORCID)","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/ctrdata-registers.html","id":null,"dir":"Reference","previous_headings":"","what":"Information on clinical trial registers — ctrdata-registers","title":"Information on clinical trial registers — ctrdata-registers","text":"Registers four clinical trial registers package ctrdata can retrieve, aggregate analyse protocol- result-related information well documents, last updated 2025-03-02.","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/ctrdata-registers.html","id":"-overview","dir":"Reference","previous_headings":"","what":"1 - Overview","title":"Information on clinical trial registers — ctrdata-registers","text":"EUCTR: EU Clinical Trials Register holds 44,300 clinical trials (least one investigational medicinal product, IMP; European Union beyond), including 25,000 trials results, continue added (can loaded ctrdata). CTIS: EU Clinical Trials Information System, launched 2023, holds 8,700 publicly accessible clinical trials, including around 100 results report (PDF files). results structured electronic format foreseeably available, thus ctrdata load CTIS results. (automatically get CTIS search query URLs, see ) CTGOV2: ClinicalTrials.gov holds 528,000 interventional observational studies, including around 70,000 studies results (can loaded ctrdata). ISRCTN: ISRCTN Registry holds 26,000 interventional observational health studies, including 14,000 studies results (references). results structured electronic format foreseeably available, thus ctrdata load ISRCTN results.","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/ctrdata-registers.html","id":"-notable-changes","dir":"Reference","previous_headings":"","what":"2 - Notable changes","title":"Information on clinical trial registers — ctrdata-registers","text":"CTGOV \"classic\" retired 2024-06-25; ctrdata subsequently translates CTGOV queries CTGOV2 queries. new website (\"CTGOV2\") can used ctrdata since 2023-08-27. Database collections created CTGOV queries can still used since functions ctrdata continue support . CTIS relaunched 2024-06-17, changing data structure search syntax, ctrdata updated. CTIS can used ctrdata since 2023-03-25. EUCTR removed search parameter status= February 2025. information changes: .","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/ctrdata-registers.html","id":"-references","dir":"Reference","previous_headings":"","what":"3 - References","title":"Information on clinical trial registers — ctrdata-registers","text":"registers expanding entered search terms using dictionaries.","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/ctrdata-registers.html","id":"-example-and-ctrdata-motivation","dir":"Reference","previous_headings":"","what":"4 - Example and ctrdata motivation","title":"Information on clinical trial registers — ctrdata-registers","text":"*example expert search interventional trials primarily neonates, investigating treatments infectious conditions. shows searches web interface registers sufficient identify trials interest: EUCTR retrieves trials neonates, exclusively neonates. ISRCTN retrieves studies interventions medicines. CTIS retrieves trials mention words neonates infection. (show CTIS search results, see ) address issue, trials can retrieved ctrLoadQueryIntoDb database collection second step trials interest can selected based values relevant fields, example: EUCTR field f115_children_211years age group criteria ISRCTN field interventions.intervention.interventionType type study CTIS fields ageGroup authorizedApplication.authorizedPartI.medicalConditions.medicalCondition ctrdata supports users identifying fields functions dbFindFields ctrShowOneTrial.","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/ctrdata-registers.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Information on clinical trial registers — ctrdata-registers","text":"Ralf Herold ralf.herold@mailbox.org","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/ctrdata-trial-concepts.html","id":null,"dir":"Reference","previous_headings":"","what":"Trial concepts implemented across registers — ctrdata-trial-concepts","title":"Trial concepts implemented across registers — ctrdata-trial-concepts","text":"ctrdata includes (since version 1.21.0) functions implement selected trial concepts. Concepts clinical trials, start status recruitment, require analyse several fields various pre-defined values. addition, structure value sets data differ ctrdata-registers. included trial concepts intended simplify accelerate user's workflow well provide consistency analyses.","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/ctrdata-trial-concepts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Trial concepts implemented across registers — ctrdata-trial-concepts","text":"implementation trial concepts ctrdata based current understanding, publication data models scientific papers relevant. Call dfCalculateConcept one functions review explanation fields needed. R functions, code printed entering command just name function, e.g. .startDate. Raise issue ask improve concept. following trial concepts can used referencing name calling dbGetFieldsIntoDf (parameter calculate) dfCalculateConcept (parameter name). Concepts continue refined added; last updated 2025-02-15. .controlType (factor) type internal concurrent control used trial? (\"none\", \"-treatment\", \"placebo\", \"active\", \"placebo+active\" \"\") .isMedIntervTrial (logical) trial interventional one medicines (drugs biological) investigational (experimental) intervention? (irrespective status authorisation study design) .isPlatformTrial (logical) trial possibly (research) platform trial? (based title, .numTestArmsSubstances, number periods) .isUniqueTrial (logical) trial record unique data frame trial, based default parameters dbFindIdsUniqueTrials? .numSites (integer) many sites trial ? .numTestArmsSubstances (integer) many arms groups medicines investigational? (calculated ISRCTN phase 1 trials) .primaryEndpointDescription (list character) string containing protocol definition, details time frames, concatenated \" == \" .primaryEndpointResults (columns number, character, integer) returning statistical testing p value method well number subjects included test, one new column, first primary endpoint .resultsDate (date) planned achieved date results availability .startDate (date) planned, authorised documented date start recruitment .sampleSize (integer) achieved (planned) number subjects participants recruited .sponsorType (factor) type class main lead sponsor simplified profit, profit .statusRecruitment (factor) status simplified ongoing (includes temporarily halted), completed (includes planned, stopped, terminated) .trialObjectives (string) identifies letters objectives identified text fragments, e.g. \"E S PD D\", \"E\" (efficacy), \"S\" (safety), \"D\" (dose-finding) .trialPhase (ordered factor) phase(s) medicine development trial associated .trialPopulation (columns factor, string string) age groups (e.g., \"P\" paediatric participants, \"\" adults, \"E\" older 65 years, \"P+\"), inclusion exclusion criteria texts","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/ctrdata-trial-concepts.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Trial concepts implemented across registers — ctrdata-trial-concepts","text":"Ralf Herold ralf.herold@mailbox.org","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/ctrdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting started, database connection, function overview — ctrdata","title":"Getting started, database connection, function overview — ctrdata","text":"ctrdata package aggregating analysing information clinical studies, obtaining documents, public trial registers","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/ctrdata.html","id":"-database-connection","dir":"Reference","previous_headings":"","what":"1 - Database connection","title":"Getting started, database connection, function overview — ctrdata","text":"Package ctrdata retrieves trial information stores database collection. Therefore, database connection object given parameter con several ctrdata functions. connection object built using nodbi allows use different database backends. Specifying collection = \"<collection's name>\" necessary package ctrdata. connection object (called dbc) created almost identical ways supported backends:","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/ctrdata.html","id":"-operate-on-a-clinical-trial-register","dir":"Reference","previous_headings":"","what":"2 - Operate on a clinical trial register","title":"Getting started, database connection, function overview — ctrdata","text":"ctrOpenSearchPagesInBrowser, ctrLoadQueryIntoDb (load trial records database collection); see ctrdata-registers details registers search.","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/ctrdata.html","id":"-get-a-data-frame-from-the-database-collection","dir":"Reference","previous_headings":"","what":"3 - Get a data frame from the database collection","title":"Getting started, database connection, function overview — ctrdata","text":"ctrShowOneTrial (show widget explore structure, fields data trial), dbFindFields (find names fields interest trial records collection), dbGetFieldsIntoDf (create data frame fields interest calculated trial concepts collection), dbFindIdsUniqueTrials (get de-duplicated identifiers clinical trials' records subset data frame).","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/ctrdata.html","id":"-operate-on-a-data-frame-with-trial-information","dir":"Reference","previous_headings":"","what":"4 - Operate on a data frame with trial information","title":"Getting started, database connection, function overview — ctrdata","text":"dfTrials2Long (convert fields nested elements long format), dfName2Value (get values variable(s) interest). dfCalculateConcept (calculate trial concept fields across registers),","code":""},{"path":[]},{"path":"https://rfhb.github.io/ctrdata/reference/ctrdata.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Getting started, database connection, function overview — ctrdata","text":"Ralf Herold ralf.herold@mailbox.org","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/dbFindFields.html","id":null,"dir":"Reference","previous_headings":"","what":"Find names of fields in the database collection — dbFindFields","title":"Find names of fields in the database collection — dbFindFields","text":"Given part name field interest user, function returns full field names used records previously loaded collection (using ctrLoadQueryIntoDb). names fields value collection can returned. Set sample = FALSE force screening records collection field names, see . See ctrShowOneTrial interactively find fields.","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/dbFindFields.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find names of fields in the database collection — dbFindFields","text":"","code":"dbFindFields(namepart = \".*\", con, sample = TRUE, verbose = FALSE)"},{"path":"https://rfhb.github.io/ctrdata/reference/dbFindFields.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find names of fields in the database collection — dbFindFields","text":"namepart character string (can regular expression, including Perl-style) searched among field names (keys) collection, case-insensitive. default `\".*\"` lists fields. con database connection object, created nodbi. See section `1 - Database connection` ctrdata. sample TRUE (default), uses sample 5 trial records per register identify fields, rapidly return possibly incomplete set field names. FALSE, uses trial records collection, take time trials ensures returns names fields collection. verbose TRUE, prints additional information (default FALSE).","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/dbFindFields.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find names of fields in the database collection — dbFindFields","text":"Vector strings full names field(s) found, ordered register alphabet, see examples. Names vector names register holding respective fields. field names can fed dbGetFieldsIntoDf extract data field(s) collection data frame.","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/dbFindFields.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find names of fields in the database collection — dbFindFields","text":"full names child fields returned dot notation (e.g., clinical_results.outcome_list.outcome.measure.class_list.class.title) addition, names parent fields (e.g., clinical_results) returned. Data parent fields typically complex (nested), see dfTrials2Long easily handling . field definitions registers, see \"Definition\" ctrdata-registers. Note: dbFindFields first called ctrLoadQueryIntoDb, take moment.","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/dbFindFields.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find names of fields in the database collection — dbFindFields","text":"","code":"dbc <- nodbi::src_sqlite(   dbname = system.file(\"extdata\", \"demo.sqlite\", package = \"ctrdata\"),   collection = \"my_trials\",   flags = RSQLite::SQLITE_RO) #> RSQLite version has enabled accelerating docdb_create() and docdb_update() functions when used with value = <NDJSON file name>.  dbFindFields(namepart = \"date\", con = dbc)[1:5] #> Finding fields in database collection #>  (sampling 5 trial records per register)  #> .  #> .  #> .  #> .  #> .  #>  #> Field names cached for this session. #>                                                EUCTR  #>             \"n_date_of_competent_authority_decision\"  #>                                                EUCTR  #>                 \"n_date_of_ethics_committee_opinion\"  #>                                                EUCTR  #>              \"p_date_of_the_global_end_of_the_trial\"  #>                                                EUCTR  #> \"trialChanges.globalAmendments.globalAmendment.date\"  #>                                                EUCTR  #>                 \"trialInformation.analysisStageDate\"   # view all 1880+ fields from all registers:  allFields <- dbFindFields(con = dbc, sample = FALSE) #> Finding fields in database collection #>  (may take some time)  #> .  #> .  #> .  #> .  #> .  #>  #> Field names cached for this session.  if (interactive()) View(data.frame(   register = names(allFields),   field = allFields))"},{"path":"https://rfhb.github.io/ctrdata/reference/dbFindIdsUniqueTrials.html","id":null,"dir":"Reference","previous_headings":"","what":"Get identifiers of deduplicated trial records — dbFindIdsUniqueTrials","title":"Get identifiers of deduplicated trial records — dbFindIdsUniqueTrials","text":"Records clinical trial can loaded one register collection. function returns deduplicated identifiers trials collection, respecting register(s) preferred user. registers recording identifiers also registers, used function provide vector identifiers deduplicated trials.","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/dbFindIdsUniqueTrials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get identifiers of deduplicated trial records — dbFindIdsUniqueTrials","text":"","code":"dbFindIdsUniqueTrials(   preferregister = c(\"CTGOV2\", \"EUCTR\", \"CTGOV\", \"ISRCTN\", \"CTIS\"),   prefermemberstate = \"BE\",   include3rdcountrytrials = TRUE,   con,   verbose = FALSE )"},{"path":"https://rfhb.github.io/ctrdata/reference/dbFindIdsUniqueTrials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get identifiers of deduplicated trial records — dbFindIdsUniqueTrials","text":"preferregister vector order preference registers generate unique _id's, default c(\"CTGOV2\", \"EUCTR\", \"CTGOV\", \"ISRCTN\", \"CTIS\") prefermemberstate Code single EU Member State records returned. available, record lacking , random Member State's record trial returned. list codes EU  Member States, please see vector countriesEUCTR. Specifying \"3RD\" return Third Country record trials, available. include3rdcountrytrials logical value trials retained conducted exclusively third countries, , outside European Union. Ignored prefermemberstate set \"3RD\". con database connection object, created nodbi. See section `1 - Database connection` ctrdata. verbose TRUE, prints fields registers used find corresponding trial records","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/dbFindIdsUniqueTrials.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get identifiers of deduplicated trial records — dbFindIdsUniqueTrials","text":"named vector strings keys (field \"_id\") records collection represent unique trials, names correspond register record.","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/dbFindIdsUniqueTrials.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get identifiers of deduplicated trial records — dbFindIdsUniqueTrials","text":"Note content records may differ registers (, \"EUCTR\", records different Member States). differences considered function. Note trial concept \".isUniqueTrial\" (uses function) can calculated time creating data frame dbGetFieldsIntoDf, often may preferred approach.","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/dbFindIdsUniqueTrials.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get identifiers of deduplicated trial records — dbFindIdsUniqueTrials","text":"","code":"dbc <- nodbi::src_sqlite(   dbname = system.file(\"extdata\", \"demo.sqlite\", package = \"ctrdata\"),   collection = \"my_trials\",   flags = RSQLite::SQLITE_RO) #> RSQLite version has enabled accelerating docdb_create() and docdb_update() functions when used with value = <NDJSON file name>.  dbFindIdsUniqueTrials(con = dbc)[1:10] #> Searching for duplicate trials...  #> - Getting all trial identifiers... #> , 29 found in collection #> - Finding duplicates among registers' and sponsor ids... #> - 2 EUCTR _id were not preferred EU Member State record for 8 trials #> - Keeping 5 / 3 / 8 / 8 / 3 records from CTGOV2 / EUCTR / CTGOV / ISRCTN / CTIS #> = Returning keys (_id) of 27 records in collection \"my_trials\" #>              ISRCTN              ISRCTN              ISRCTN               EUCTR  #>          \"12949496\"          \"13281214\"          \"17473621\" \"2012-003632-23-CZ\"  #>               EUCTR               EUCTR                CTIS                CTIS  #> \"2014-002606-20-PT\" \"2014-003556-31-SE\" \"2022-501142-30-00\" \"2023-505613-24-00\"  #>                CTIS              ISRCTN  #> \"2024-510663-34-00\"          \"20343063\"   # alternative as of ctrdata version 1.21.0, # using defaults of dbFindIdsUniqueTrials() df <- dbGetFieldsIntoDf(   fields = \"keyword\",   calculate = \".isUniqueTrial\",   con = dbc) #> Querying database (24 fields)... #> Calculating .isUniqueTrial...                             #> - Finding duplicates among registers' and sponsor ids... #> - 2 EUCTR _id were not preferred EU Member State record for 8 trials #> - Keeping 5 / 3 / 8 / 8 / 3 records from CTGOV2 / EUCTR / CTGOV / ISRCTN / CTIS  # using base R df[df[[\".isUniqueTrial\"]], ] #>                  _id #> 1           12949496 #> 2           13281214 #> 3           17473621 #> 5  2012-003632-23-SE #> 6  2014-002606-20-PT #> 8  2014-003556-31-SE #> 9  2022-501142-30-00 #> 10 2023-505613-24-00 #> 11 2024-510663-34-00 #> 12          20343063 #> 13          61070850 #> 14          76463425 #> 15          80181452 #> 16          88261002 #> 17       NCT00617929 #> 18       NCT01125800 #> 19       NCT01483820 #> 20       NCT01505608 #> 21       NCT01592045 #> 22       NCT02620761 #> 23       NCT03280147 #> 24       NCT03325439 #> 25       NCT03431558 #> 26       NCT03876704 #> 27       NCT04001712 #> 28       NCT04041765 #> 29       NCT05969327 #>                                                                                                   keyword #> 1                                                                                                    <NA> #> 2                                                                                                    <NA> #> 3                                                                                                    <NA> #> 5                                                                                                    <NA> #> 6                                                                                                    <NA> #> 8                                                                                                    <NA> #> 9                                                                                                    <NA> #> 10                                                                                                   <NA> #> 11                                                                                                   <NA> #> 12                                                                                                   <NA> #> 13                                                                                                   <NA> #> 14                                                                                                   <NA> #> 15                                                                                                   <NA> #> 16                                                                                                   <NA> #> 17                                                                                                   <NA> #> 18                                                                                                   <NA> #> 19                                                                                                   <NA> #> 20                                                                                                   <NA> #> 21                                                                                                   <NA> #> 22                                                                                                   <NA> #> 23                                                              Neonate / Sepsis / Antibiotics / Duration #> 24 Electroencephalographic neonatal seizures / Brivaracetam / Epilepsy / ENS / Newborns / Pharmacokinetic #> 25                                               Bovine Lactoferrin, Neonatal infection, Low Birth Weight #> 26                                                                                                   <NA> #> 27                                                                                 early caffeine preterm #> 28                                                                IgM-enriched Intravenous Immunoglobulin #> 29                                                                                                   <NA> #>    .isUniqueTrial #> 1            TRUE #> 2            TRUE #> 3            TRUE #> 5            TRUE #> 6            TRUE #> 8            TRUE #> 9            TRUE #> 10           TRUE #> 11           TRUE #> 12           TRUE #> 13           TRUE #> 14           TRUE #> 15           TRUE #> 16           TRUE #> 17           TRUE #> 18           TRUE #> 19           TRUE #> 20           TRUE #> 21           TRUE #> 22           TRUE #> 23           TRUE #> 24           TRUE #> 25           TRUE #> 26           TRUE #> 27           TRUE #> 28           TRUE #> 29           TRUE  if (FALSE) { # \\dontrun{ library(dplyr) df %>% filter(.isUniqueTrial) } # }"},{"path":"https://rfhb.github.io/ctrdata/reference/dbGetFieldsIntoDf.html","id":null,"dir":"Reference","previous_headings":"","what":"Create data frame of specified fields from database collection — dbGetFieldsIntoDf","title":"Create data frame of specified fields from database collection — dbGetFieldsIntoDf","text":"Fields collection retrieved records data frame (tibble). Within given trial record, fields can hierarchical structured, , nested. Th function uses field names appropriately type values returns, harmonising original values (e.g. \"Information present EudraCT\" `NA`, \"Yes\" `TRUE`, \"false\" `FALSE`, date strings dates time differences, number strings numbers). function simplifies structure nested data may concatenate multiple strings field using \" / \" (see example) may widened returned data frame additional columns recursively expanded simply nested data (e.g., \"externalRefs\" columns \"externalRefs.doi\", \"externalRefs.eudraCTNumber\" etc.). alternative way handling complex nested data, see dfTrials2Long followed dfName2Value extracting sought variable(s).","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/dbGetFieldsIntoDf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create data frame of specified fields from database collection — dbGetFieldsIntoDf","text":"","code":"dbGetFieldsIntoDf(fields = \"\", calculate = \"\", con, verbose = FALSE, ...)"},{"path":"https://rfhb.github.io/ctrdata/reference/dbGetFieldsIntoDf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create data frame of specified fields from database collection — dbGetFieldsIntoDf","text":"fields Vector one strings, names sought fields. See function dbFindFields find names fields ctrShowOneTrial interactively selecting field names. Dot path notation (\"field.subfield\") without indices supported. compatibility `nodbi::src_postgres()` needed, specify fewer 50 fields, consider also using parent fields e.g., `\".b\"` instead `c(\".b.c.d\", \".b.c.e\")`, accessing sought fields dfTrials2Long followed dfName2Value R functions. calculate Vector one strings, names functions calculate certain trial concepts fields collection across different registers. See function dfCalculateConcept find names functions available `ctrdata` far. con database connection object, created nodbi. See section `1 - Database connection` ctrdata. verbose Printing additional information set TRUE; (default FALSE). ... use (captures deprecated parameter stopifnodata)","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/dbGetFieldsIntoDf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create data frame of specified fields from database collection — dbGetFieldsIntoDf","text":"data frame (tibble, tibble loaded) columns corresponding sought fields. column records' `_id` always included. maximum number rows returned data frame equal , less number trial records database collection.","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/dbGetFieldsIntoDf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create data frame of specified fields from database collection — dbGetFieldsIntoDf","text":"","code":"dbc <- nodbi::src_sqlite(   dbname = system.file(\"extdata\", \"demo.sqlite\", package = \"ctrdata\"),   collection = \"my_trials\",   flags = RSQLite::SQLITE_RO) #> RSQLite version has enabled accelerating docdb_create() and docdb_update() functions when used with value = <NDJSON file name>.  # get fields that are nested within another field # and can have multiple values with the nested field dbGetFieldsIntoDf(   fields = \"b1_sponsor.b31_and_b32_status_of_the_sponsor\",   con = dbc) #> Querying database (1 fields)... #>                 _id b1_sponsor.b31_and_b32_status_of_the_sponsor #> 1 2012-003632-23-CZ                                   Commercial #> 2 2012-003632-23-SE                                   Commercial #> 3 2014-002606-20-PT                                   Commercial #> 4 2014-003556-31-GB                                   Commercial #> 5 2014-003556-31-SE                                   Commercial  # fields that are lists of string values are # returned by concatenating values with a slash dbGetFieldsIntoDf(   fields = \"keyword\",   con = dbc) #> Querying database (1 fields)... #>           _id #> 1 NCT03280147 #> 2 NCT03325439 #> 3 NCT03431558 #> 4 NCT04001712 #> 5 NCT04041765 #>                                                                                                  keyword #> 1                                                              Neonate / Sepsis / Antibiotics / Duration #> 2 Electroencephalographic neonatal seizures / Brivaracetam / Epilepsy / ENS / Newborns / Pharmacokinetic #> 3                                               Bovine Lactoferrin, Neonatal infection, Low Birth Weight #> 4                                                                                 early caffeine preterm #> 5                                                                IgM-enriched Intravenous Immunoglobulin  # calculate new field(s) from data across trials df <- dbGetFieldsIntoDf(   fields = \"keyword\",   calculate = c(\".statusRecruitment\", \".isUniqueTrial\", \".startDate\"),   con = dbc) #> Querying database (44 fields)... #> Calculating .statusRecruitment...                             #> Calculating .isUniqueTrial...                             #> - Finding duplicates among registers' and sponsor ids... #> - 2 EUCTR _id were not preferred EU Member State record for 8 trials #> - Keeping 5 / 3 / 8 / 8 / 3 records from CTGOV2 / EUCTR / CTGOV / ISRCTN / CTIS #> Calculating .startDate...                              if (FALSE) { # \\dontrun{ library(dplyr) library(ggplot2)  df %>%   filter(.isUniqueTrial) %>%   count(.statusRecruitment)  df %>%   filter(.isUniqueTrial) %>%   ggplot() +   stat_ecdf(aes(     x = .startDate,     colour = .statusRecruitment)) } # }"},{"path":"https://rfhb.github.io/ctrdata/reference/dbQueryHistory.html","id":null,"dir":"Reference","previous_headings":"","what":"Show history of queries loaded into a database collection — dbQueryHistory","title":"Show history of queries loaded into a database collection — dbQueryHistory","text":"Show history queries loaded database collection","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/dbQueryHistory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show history of queries loaded into a database collection — dbQueryHistory","text":"","code":"dbQueryHistory(con, verbose = FALSE)"},{"path":"https://rfhb.github.io/ctrdata/reference/dbQueryHistory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show history of queries loaded into a database collection — dbQueryHistory","text":"con database connection object, created nodbi. See section `1 - Database connection` ctrdata. verbose TRUE, prints additional information (default FALSE).","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/dbQueryHistory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show history of queries loaded into a database collection — dbQueryHistory","text":"data frame (tibble, tibble loaded)  columns: `query-timestamp`, `query-register`,  `query-records` (note: number records loaded last  executing ctrLoadQueryIntoDb, total record number)  `query-term`, one row time  ctrLoadQueryIntoDb loaded trial records collection.","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/dbQueryHistory.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show history of queries loaded into a database collection — dbQueryHistory","text":"","code":"dbc <- nodbi::src_sqlite(   dbname = system.file(\"extdata\", \"demo.sqlite\", package = \"ctrdata\"),   collection = \"my_trials\",   flags = RSQLite::SQLITE_RO) #> RSQLite version has enabled accelerating docdb_create() and docdb_update() functions when used with value = <NDJSON file name>.  dbQueryHistory(con = dbc) #>       query-timestamp query-register query-records #> 1 2024-05-16 14:05:23          EUCTR             5 #> 2 2024-05-16 14:06:43          CTGOV             8 #> 3 2024-05-16 14:07:32         ISRCTN             8 #> 4 2024-05-16 14:07:57         CTGOV2             5 #> 5 2024-06-23 16:14:56           CTIS             3 #>                                                                                                                       query-term #> 1                                    query=&age=newborn&phase=phase-three&dateFrom=2015-02-28&dateTo=2015-03-31&status=completed #> 2 term=AREA[MaximumAge]+RANGE[0+days,+28+days]&intr=Drugs,+Investigational&strd_s=01/01/2018&strd_e=01/01/2020&type=Intr&phase=2 #> 3                                                                                    q=&filters=ageRange:Neonate,phase:Phase+III #> 4                                  distance=50&cond=neuroblastoma&aggFilters=phase:2,results:with&primComp=2014-01-01_2014-12-31 #> 5                                              searchCriteria={\"containAll\":\"infection\",\"containAny\":\"neonates\",\"containNot\":\"\"}"},{"path":"https://rfhb.github.io/ctrdata/reference/dfCalculateConcept.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate trial concept from various fields and registers — dfCalculateConcept","title":"Calculate trial concept from various fields and registers — dfCalculateConcept","text":"Across registers, calculate trial concept (e.g., status recruitment). concept defined within ctrdata based common understanding relevant publications. Details implementation printed, data frame specified, show peculiarities registers calculating concept.","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/dfCalculateConcept.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate trial concept from various fields and registers — dfCalculateConcept","text":"","code":"dfCalculateConcept(name = \".*\", df = NULL)"},{"path":"https://rfhb.github.io/ctrdata/reference/dfCalculateConcept.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate trial concept from various fields and registers — dfCalculateConcept","text":"name String name function applied `df`, regular expression list available functions. df Optional. Data frame fields needed apply function `name`.","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/dfCalculateConcept.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate trial concept from various fields and registers — dfCalculateConcept","text":"Data frame additional column name `name` calculated applying function `name`. `df` `NULL` (default), either list functions corresponding `name` , exactly one function identified, prints details function `name` explain implementation concept return invisibly names fields needed calculation.","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/dfCalculateConcept.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate trial concept from various fields and registers — dfCalculateConcept","text":"names functions can also used argument `calculate` dbGetFieldsIntoDf achieve purpose already time data frame data generated trial collection. approach cases efficient preferred using dfCalculateConcept. Note functions operate historic versions (CTGOV2) information latest record.","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/dfCalculateConcept.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate trial concept from various fields and registers — dfCalculateConcept","text":"","code":"# list names of all available functions in ctrdata dfCalculateConcept() #>  [1] \".controlType\"                \".isMedIntervTrial\"           #>  [3] \".isPlatformTrial\"            \".isUniqueTrial\"              #>  [5] \".numSites\"                   \".numTestArmsSubstances\"      #>  [7] \".primaryEndpointDescription\" \".primaryEndpointResults\"     #>  [9] \".resultsDate\"                \".sampleSize\"                 #> [11] \".sponsorType\"                \".startDate\"                  #> [13] \".statusRecruitment\"          \".trialObjectives\"            #> [15] \".trialPhase\"                 \".trialPopulation\"             # list names of functions for regular expression of name dfCalculateConcept(name = \"status\") #> [1] \".statusRecruitment\"  # describe a specific function dfCalculateConcept(name = \".statusRecruitment\") #>  #> >>>> .statusRecruitment #>  #> * Description: #>  #> Calculates the status at the time of loading the trial records. Maps the categories that are in fields which specify the state of recruitment. Simplifies the status into three categories \"ongoing\" (includes active, not yet recruiting; temporarily halted; suspended; authorised, not started and similar), \"completed\" (includes ended; ongoing, recuitment mended) and \"other\" (includes terminated; revoked). #>  #> Returns a factor of these categories. #>  #> * Fields needed: #>  #> trialInformation.globalEndOfTrialPremature #> trialInformation.isGlobalEndOfTrialReached #> p_end_of_trial_status #> last_known_status #> overall_status #> protocolSection.statusModule.overallStatus #> participants.recruitmentEnd #> participants.recruitmentStart #> participants.recruitmentStatusOverride #> ctPublicStatusCode #> ctStatus #>  #> * To show the implementation, call: ctrdata::.statusRecruitment #> or, after package(\"ctrdata\"), call: .statusRecruitment #>  #> <<<<  # print descriptions of all functions invisible(sapply(dfCalculateConcept(), dfCalculateConcept)) #>  #> >>>> .controlType #>  #> * Description: #>  #> Calculates the type of control(s) data collected within a clinical trial. ICH E10 lists as types of control: placebo concurrent control, no-treatment concurrent control, dose-response concurrent control, active (positive) concurrent control, external (including historical) control, multiple control groups. #>  #> Dose-controlled trials are currently not identified. External (including historical) controls are so far not identified in specific register fields. Cross-over designs, where identifiable, have active controls. #>  #> Returns a factor with levels \"none\", \"no-treatment\", \"placebo\", \"active\", \"placebo+active\" and \"other\". #>  #> * Fields needed: #>  #> e81_controlled #> e816_cross_over #> e817_other #> e8171_other_trial_design_description #> e822_placebo #> e823_other #> e8231_comparator_description #> e824_number_of_treatment_arms_in_the_trial #> arm_group.arm_group_type #> protocolSection.designModule.designInfo.interventionModel #> protocolSection.armsInterventionsModule.armGroups.type #> trialDesign.studyDesign #> trialDesign.primaryStudyDesign #> authorizedPartI.productRoleGroupInfos.productRoleName #> authorizedApplication.authorizedPartI.productRoleGroupInfos.productRoleName #>  #> * To show the implementation, call: ctrdata::.controlType #> or, after package(\"ctrdata\"), call: .controlType #>  #> <<<< #>  #> >>>> .isMedIntervTrial #>  #> * Description: #>  #> Calculates if record is a medicine-interventional trial, investigating one or more medicine, whether biological or not. #>  #> For EUCTR and CTIS, this corresponds to all records as per the definition of the EU Clinical Trial Regulation. #>  #> For CTGOV and CTGOV2, this is based on drug or biological as type of intervention, and interventional as type of study. #>  #> For ISRCTN, this is based on drug or biological as type of intervention, and interventional as type of study. #>  #> Returns a logical. #>  #> * Fields needed: #>  #> ctrname #> intervention.intervention_type #> study_type #> protocolSection.armsInterventionsModule.interventions.type #> protocolSection.designModule.studyType #> interventions.intervention.interventionType #> trialDesign.primaryStudyDesign #> ctrname #>  #> * To show the implementation, call: ctrdata::.isMedIntervTrial #> or, after package(\"ctrdata\"), call: .isMedIntervTrial #>  #> <<<< #>  #> >>>> .isPlatformTrial #>  #> * Description: #>  #> Calculates if the trial is likely a platform trial or not. As operational definition, at least one of these criteria is true: #>  #> - trial has \"platform\", \"basket\", \"umbrella\", \"multi-?arm\" or \"multi-?stage\" in its title or description (for ISRCTN, this is the only criterion; some trials in EUCTR lack data in English) - trial has more than 2 active arms with different investigational medicines, after excluding comparator, auxiliary and placebo medicines (calculated with function .numTestArmsSubstances(), not used for ISRCTN because it cannot be calculated precisely) - trial more than 2 periods, after excluding safety run-in, screening, enrolling, extension and follow-up periods (for CTGOV and CTGOV2, this criterion requires results-related data) #>  #> Requires that EUCTR results have been included in the collection, using ctrLoadQueryIntoDb(queryterm = ..., euctrresults = TRUE, con = ...). #>  #> Requires packages dplyr and stringdist to be installed; stringdist is used for evaluating names of active substances, which are considered similar when the similarity is 0.8 or higher. #>  #> Returns a logical. #>  #> * Fields needed: #>  #> ctrname #> a3_full_title_of_the_trial #> trialInformation.fullTitle #> subjectDisposition.postAssignmentPeriods.postAssignmentPeriod.title #> e824_number_of_treatment_arms_in_the_trial #> e81_controlled #> subjectDisposition.postAssignmentPeriods.postAssignmentPeriod.arms.arm #> official_title #> detailed_description.textblock #> clinical_results.participant_flow.period_list.period.title #> arm_group #> protocolSection.identificationModule.officialTitle #> protocolSection.descriptionModule.detailedDescription #> resultsSection.participantFlowModule.periods.title #> protocolSection.armsInterventionsModule.armGroups #> trialDescription.title #> trialDescription.scientificTitle #> interventions.intervention.interventionType #> trialDesign.secondaryStudyDesign #> interventions.intervention.interventionType #> interventions.intervention.drugNames #> title #> applications.fullTitle #> authorizedPartI.trialDetails.clinicalTrialIdentifiers.fullTitle #> authorizedPartI.trialDetails.clinicalTrialIdentifiers.publicTitle #> authorizedPartI.trialDetails.protocolInformation.studyDesign.periodDetails.title #> authorizedPartI.trialDetails.protocolInformation.studyDesign.periodDetails.armDetails.title #> authorizedApplication.authorizedPartI.trialDetails.clinicalTrialIdentifiers.fullTitle #> authorizedApplication.authorizedPartI.trialDetails.clinicalTrialIdentifiers.publicTitle #> authorizedApplication.authorizedPartI.trialDetails.protocolInformation.studyDesign.periodDetails.title #> authorizedPartI.productRoleGroupInfos #> authorizedApplication.authorizedPartI.productRoleGroupInfos #>  #> * To show the implementation, call: ctrdata::.isPlatformTrial #> or, after package(\"ctrdata\"), call: .isPlatformTrial #>  #> <<<< #>  #> >>>> .isUniqueTrial #>  #> * Description: #>  #> Applies function dbFindIdsUniqueTrials() with its defaults. Returns a logical. #>  #> * Fields needed: #>  #> _id #> ctrname #> a2_eudract_number #> a52_us_nct_clinicaltrialsgov_registry_number #> trialInformation.usctnIdentifier #> a51_isrctn_international_standard_randomised_controlled_trial_number #> trialInformation.isrctnIdentifier #> a41_sponsors_protocol_code_number #> id_info.secondary_id #> id_info.org_study_id #> id_info.nct_id #> id_info.nct_alias #> externalRefs.eudraCTNumber #> externalRefs.clinicalTrialsGovNumber #> isrctn #> externalRefs.protocolSerialNumber #> ctNumber #> eudraCtInfo.eudraCtCode #> authorizedPartI.trialDetails.clinicalTrialIdentifiers.secondaryIdentifyingNumbers.nctNumber.number #> protocolSection.identificationModule.nctId #> protocolSection.identificationModule.secondaryIdInfos.id #> protocolSection.identificationModule.nctIdAliases #> protocolSection.identificationModule.orgStudyIdInfo.id #>  #> * To show the implementation, call: ctrdata::.isUniqueTrial #> or, after package(\"ctrdata\"), call: .isUniqueTrial #>  #> <<<< #>  #> >>>> .numSites #>  #> * Description: #>  #> Calculates the number of the sites where the trial is conducted. EUCTR lacks information on number of sites outside of the EEA; for each non-EEA country mentioned, at least one site is assumed. #>  #> Returns an integer. #>  #> * Fields needed: #>  #> e851_number_of_sites_anticipated_in_the_eea #> e863_trial_sites_planned_in #> location.facility.address.city #> protocolSection.contactsLocationsModule.locations.city #> participants.trialCentres.trialCentre.name #> authorizedPartsII.trialSites.id #> authorizedApplication.authorizedPartsII.trialSites.id #>  #> * To show the implementation, call: ctrdata::.numSites #> or, after package(\"ctrdata\"), call: .numSites #>  #> <<<< #>  #> >>>> .numTestArmsSubstances #>  #> * Description: #>  #> Calculates the number of active arms with different investigational medicines, after excluding comparator, auxiliary and placebo arms / medicines. For ISRCTN, this is imprecise because arms are not identified in a field. Most registers provide no or only limited information on phase 1 trials, so that this number typically cannot be calculated for these trials. #>  #> Requires packages stringdist to be installed; stringdist is used for evaluating names of active substances, which are considered similar when the similarity is 0.8 or higher. #>  #> Returns an integer. #>  #> * Fields needed: #>  #> e824_number_of_treatment_arms_in_the_trial #> e81_controlled #> subjectDisposition.postAssignmentPeriods.postAssignmentPeriod.arms.arm #> arm_group #> protocolSection.armsInterventionsModule.armGroups #> trialDesign.secondaryStudyDesign #> interventions.intervention.interventionType #> interventions.intervention.drugNames #> authorizedPartI.productRoleGroupInfos #> authorizedApplication.authorizedPartI.productRoleGroupInfos #>  #> * To show the implementation, call: ctrdata::.numTestArmsSubstances #> or, after package(\"ctrdata\"), call: .numTestArmsSubstances #>  #> <<<< #>  #> >>>> .primaryEndpointDescription #>  #> * Description: #>  #> Calculates the full description of the primary endpoint, including e.g. its title, description, timeframe of assessment. The details vary by register. The text description can be used for identifying trials of interest or for analysing trends in primary endpoints, which among the set of all endpoints are most often used for determining the number of participants sought for the study. #>  #> Returns a list (that is, one or more items in one vector per row; the reason is a proportion of records lists several endpoints as primary). #>  #> * Fields needed: #>  #> e51_primary_end_points #> e511_timepoints_of_evaluation_of_this_end_point #> primary_outcome.measure #> primary_outcome.description #> primary_outcome.time_frame #> protocolSection.outcomesModule.primaryOutcomes.measure #> protocolSection.outcomesModule.primaryOutcomes.description #> protocolSection.outcomesModule.primaryOutcomes.timeFrame #> trialDescription.primaryOutcome #> authorizedApplication.authorizedPartI.trialDetails.trialInformation.endPoint.primaryEndPoints.endPoint #> authorizedPartI.trialDetails.trialInformation.endPoint.primaryEndPoints.endPoint #>  #> * To show the implementation, call: ctrdata::.primaryEndpointDescription #> or, after package(\"ctrdata\"), call: .primaryEndpointDescription #>  #> <<<< #>  #> >>>> .primaryEndpointResults #>  #> * Description: #>  #> Calculates several results-related elements of the primary analysis of the primary endpoint. Requires loading results-related information. For CTIS and ISRCTN, such information is not available in a structured format. #>  #> Recommended to be combined with .controlType, .sampleSize etc. for analyses. #>  #> Returns new columns: .primaryEndpointFirstPvalue (discarding any inequality indicator, e.g. <=) .primaryEndpointFirstPmethod (normalised string, e.g. chisquared) .primaryEndpointFirstPsize (number included in test, across assignment groups) #>  #> * Fields needed: #>  #> endPoints.endPoint.statisticalAnalyses.statisticalAnalysis.statisticalHypothesisTest.value #> endPoints.endPoint.statisticalAnalyses.statisticalAnalysis.statisticalHypothesisTest.method.value #> endPoints.endPoint.type.value #> endPoints.endPoint #> clinical_results.outcome_list.outcome.analysis_list.analysis.method #> clinical_results.outcome_list.outcome.analysis_list.analysis.p_value #> clinical_results.outcome_list.outcome.type #> clinical_results.outcome_list.outcome #> resultsSection.outcomeMeasuresModule.outcomeMeasures.analyses.pValue #> resultsSection.outcomeMeasuresModule.outcomeMeasures.analyses.statisticalMethod #> resultsSection.outcomeMeasuresModule.outcomeMeasures.type #> resultsSection.outcomeMeasuresModule.outcomeMeasures #>  #> * To show the implementation, call: ctrdata::.primaryEndpointResults #> or, after package(\"ctrdata\"), call: .primaryEndpointResults #>  #> <<<< #>  #> >>>> .resultsDate #>  #> * Description: #>  #> Calculates the earliest date of results as recorded in the register. At that date, results may have been incomplete and may have been changed later. For EUCTR, requires that results and preferrably also their history of publication have been included in the collection, using ctrLoadQueryIntoDb(queryterm = ..., euctrresults{history} = TRUE, con = ...). Cannot be calculated for ISRCTN, which does not have a corresponding field. #>  #> Returns a date. #>  #> * Fields needed: #>  #> firstreceived_results_date #> trialInformation.analysisStageDate #> results_first_posted #> protocolSection.statusModule.resultsFirstPostDateStruct.date #> results.intentToPublish #> results.summaryResults.submissionDate #> results.clinicalStudyReports.submitDate #>  #> * To show the implementation, call: ctrdata::.resultsDate #> or, after package(\"ctrdata\"), call: .resultsDate #>  #> <<<< #>  #> >>>> .sampleSize #>  #> * Description: #>  #> Calculates the sample size of the trial, preferring results-related over protocol-related information. #>  #> Returns an integer. #>  #> * Fields needed: #>  #> trialInformation.countrySubjectCounts.countrySubjectCount.subjects #> f11_number_of_subjects_for_this_age_range #> f1111_number_of_subjects_for_this_age_range #> f1121_number_of_subjects_for_this_age_range #> f1131_number_of_subjects_for_this_age_range #> f1141_number_of_subjects_for_this_age_range #> f1151_number_of_subjects_for_this_age_range #> f1161_number_of_subjects_for_this_age_range #> f121_number_of_subjects_for_this_age_range #> f131_number_of_subjects_for_this_age_range #> enrollment #> protocolSection.designModule.enrollmentInfo.count #> participants.targetEnrolment #> participants.totalFinalEnrolment #> authorizedPartsII.recruitmentSubjectCount #> authorizedPartI.rowSubjectCount #> authorizedApplication.authorizedPartsII.recruitmentSubjectCount #> authorizedApplication.authorizedPartI.rowSubjectCount #>  #> * To show the implementation, call: ctrdata::.sampleSize #> or, after package(\"ctrdata\"), call: .sampleSize #>  #> <<<< #>  #> >>>> .sponsorType #>  #> * Description: #>  #> Calculates the type or class of the lead or main sponsor of the trial. #>  #> Some information is not yet mapped (e.g., \"NETWORK\" in CTGOV2). No specific field is available in ISRCTN (which retrieves information on the type of funder via http://data.crossref.org/fundingdata/registry). #>  #> Returns a factor with levels \"For profit\", \"Not for profit\", \"Other\" #>  #> * Fields needed: #>  #> b1_sponsor.b31_and_b32_status_of_the_sponsor #> sponsors.lead_sponsor.agency_class #> protocolSection.sponsorCollaboratorsModule.leadSponsor.class #> ctrname #> sponsorType #> primarySponsor.commercial #> authorizedApplication.authorizedPartI.sponsors.isCommercial #>  #> * To show the implementation, call: ctrdata::.sponsorType #> or, after package(\"ctrdata\"), call: .sponsorType #>  #> <<<< #>  #> >>>> .startDate #>  #> * Description: #>  #> Calculates the date of start of the trial, based on the documented or planned start of recruitment, or on the date of opinion of the competent authority. Returns a date. #>  #> * Fields needed: #>  #> n_date_of_competent_authority_decision #> n_date_of_ethics_committee_opinion #> trialInformation.recruitmentStartDate #> start_date #> protocolSection.statusModule.startDateStruct.date #> participants.recruitmentStart #> trialDesign.overallStartDate #> startDateEU #> authorizationDate #> authorizedApplication.authorizedPartI.trialDetails.trialInformation.trialDuration.estimatedRecruitmentStartDate #>  #> * To show the implementation, call: ctrdata::.startDate #> or, after package(\"ctrdata\"), call: .startDate #>  #> <<<< #>  #> >>>> .statusRecruitment #>  #> * Description: #>  #> Calculates the status at the time of loading the trial records. Maps the categories that are in fields which specify the state of recruitment. Simplifies the status into three categories \"ongoing\" (includes active, not yet recruiting; temporarily halted; suspended; authorised, not started and similar), \"completed\" (includes ended; ongoing, recuitment mended) and \"other\" (includes terminated; revoked). #>  #> Returns a factor of these categories. #>  #> * Fields needed: #>  #> trialInformation.globalEndOfTrialPremature #> trialInformation.isGlobalEndOfTrialReached #> p_end_of_trial_status #> last_known_status #> overall_status #> protocolSection.statusModule.overallStatus #> participants.recruitmentEnd #> participants.recruitmentStart #> participants.recruitmentStatusOverride #> ctPublicStatusCode #> ctStatus #>  #> * To show the implementation, call: ctrdata::.statusRecruitment #> or, after package(\"ctrdata\"), call: .statusRecruitment #>  #> <<<< #>  #> >>>> .trialObjectives #>  #> * Description: #>  #> Calculates objectives of the trial, by searching for text fragments found in fields describing its purpose, objective, background or hypothesis, after applying .isMedIntervTrial, because the text fragments are tailored to medicinal product interventional trials. #>  #> This is a simplification, and it is expected that the criteria will be further refined. The text fragments only apply to English. #>  #> Returns a string with letters separated by a space, such as E (efficacy, including cure, survival, effectiveness); A (activity, including reponse, remission, seroconversion); S (safety); PK; PD (including biomarker); D (dose-finding, determining recommended dose); LT (long-term); and FU (follow-up). #>  #> * Fields needed: #>  #> e21_main_objective_of_the_trial #> ctrname #> detailed_description.textblock #> study_design_info.primary_purpose #> intervention.intervention_type #> study_type #> protocolSection.descriptionModule.detailedDescription #> protocolSection.designModule.designInfo.primaryPurpose #> protocolSection.armsInterventionsModule.interventions.type #> protocolSection.designModule.studyType #> trialDescription.studyHypothesis #> trialDesign.trialType #> interventions.intervention.interventionType #> trialDesign.primaryStudyDesign #> authorizedPartI.trialDetails.trialInformation.trialObjective.mainObjective #> authorizedPartI.trialDetails.trialInformation.trialObjective.trialScopes.otherDescription #> authorizedApplication.authorizedPartI.trialDetails.trialInformation.trialObjective.mainObjective #> authorizedApplication.authorizedPartI.trialDetails.trialInformation.trialObjective.trialScopes.otherDescription #> ctrname #>  #> * To show the implementation, call: ctrdata::.trialObjectives #> or, after package(\"ctrdata\"), call: .trialObjectives #>  #> <<<< #>  #> >>>> .trialPhase #>  #> * Description: #>  #> Calculates the phase of a clinical trial as per ICH E8(R1). #>  #> Returns an ordered factor of levels \"phase 1\", \"phase 1+2\", \"phase 2\", \"phase 2+3\", \"phase 2+4\", \"phase 3\", \"phase 3+4\", \"phase 1+2+3\",  \"phase 4\", \"phase 1+2+3+4\". #>  #> * Fields needed: #>  #> e71_human_pharmacology_phase_i #> e72_therapeutic_exploratory_phase_ii #> e73_therapeutic_confirmatory_phase_iii #> e74_therapeutic_use_phase_iv #> phase #> protocolSection.designModule.phases #> interventions.intervention.phase #> authorizedPartI.trialDetails.trialInformation.trialCategory.trialPhase #> authorizedApplication.authorizedPartI.trialDetails.trialInformation.trialCategory.trialPhase #>  #> * To show the implementation, call: ctrdata::.trialPhase #> or, after package(\"ctrdata\"), call: .trialPhase #>  #> <<<< #>  #> >>>> .trialPopulation #>  #> * Description: #>  #> Calculates from protocol-related information the age groups that can participate in a trial. #>  #> Returns new columns: .trialPopulationAgeGroup (factor, \"P\", \"A\", \"P+A\", \"E\", \"A+E\", \"P+A+E\") .trialPopulationInclusion (string) .trialPopulationExclusion (string) #>  #> * Fields needed: #>  #> e3_principal_inclusion_criteria #> e4_principal_exclusion_criteria #> f111_in_utero #> f112_preterm_newborn_infants_up_to_gestational_age__37_weeks #> f113_newborns_027_days #> f114_infants_and_toddlers_28_days23_months #> f115_children_211years #> f116_adolescents_1217_years #> f11_trial_has_subjects_under_18 #> f12_adults_1864_years #> f13_elderly_65_years #> eligibility.criteria.textblock #> eligibility.maximum_age #> eligibility.minimum_age #> protocolSection.eligibilityModule.maximumAge #> protocolSection.eligibilityModule.minimumAge #> protocolSection.eligibilityModule.eligibilityCriteria #> participants.ageRange #> participants.inclusion #> participants.exclusion #> ageGroup #> authorizedApplication.authorizedPartI.trialDetails.trialInformation.eligibilityCriteria.principalInclusionCriteria.principalInclusionCriteria #> authorizedApplication.authorizedPartI.trialDetails.trialInformation.eligibilityCriteria.principalExclusionCriteria.principalExclusionCriteria #>  #> * To show the implementation, call: ctrdata::.trialPopulation #> or, after package(\"ctrdata\"), call: .trialPopulation #>  #> <<<<  # apply dfCalculateConcept to data frame dbc <- nodbi::src_sqlite(   dbname = system.file(\"extdata\", \"demo.sqlite\", package = \"ctrdata\"),   collection = \"my_trials\",   flags = RSQLite::SQLITE_RO) #> RSQLite version has enabled accelerating docdb_create() and docdb_update() functions when used with value = <NDJSON file name>.  # use with existing data frame, # first get fields needed trialsDf <- dbGetFieldsIntoDf(   fields = unlist(dfCalculateConcept(name = \".statusRecruitment\")),   con = dbc) #>  #> >>>> .statusRecruitment #>  #> * Description: #>  #> Calculates the status at the time of loading the trial records. Maps the categories that are in fields which specify the state of recruitment. Simplifies the status into three categories \"ongoing\" (includes active, not yet recruiting; temporarily halted; suspended; authorised, not started and similar), \"completed\" (includes ended; ongoing, recuitment mended) and \"other\" (includes terminated; revoked). #>  #> Returns a factor of these categories. #>  #> * Fields needed: #>  #> trialInformation.globalEndOfTrialPremature #> trialInformation.isGlobalEndOfTrialReached #> p_end_of_trial_status #> last_known_status #> overall_status #> protocolSection.statusModule.overallStatus #> participants.recruitmentEnd #> participants.recruitmentStart #> participants.recruitmentStatusOverride #> ctPublicStatusCode #> ctStatus #>  #> * To show the implementation, call: ctrdata::.statusRecruitment #> or, after package(\"ctrdata\"), call: .statusRecruitment #>  #> <<<< #> Querying database (11 fields)...  # then calculate dfCalculateConcept(   name = \".statusRecruitment\",   df = trialsDf) #> Calculating .statusRecruitment...                             #>                  _id trialInformation.globalEndOfTrialPremature #> 1           12949496                                         NA #> 2           13281214                                         NA #> 3           17473621                                         NA #> 4  2012-003632-23-CZ                                      FALSE #> 5  2012-003632-23-SE                                      FALSE #> 6  2014-002606-20-PT                                         NA #> 7  2014-003556-31-GB                                      FALSE #> 8  2014-003556-31-SE                                      FALSE #> 9  2022-501142-30-00                                         NA #> 10 2023-505613-24-00                                         NA #> 11 2024-510663-34-00                                         NA #> 12          20343063                                         NA #> 13          61070850                                         NA #> 14          76463425                                         NA #> 15          80181452                                         NA #> 16          88261002                                         NA #> 17       NCT00617929                                         NA #> 18       NCT01125800                                         NA #> 19       NCT01483820                                         NA #> 20       NCT01505608                                         NA #> 21       NCT01592045                                         NA #> 22       NCT02620761                                         NA #> 23       NCT03280147                                         NA #> 24       NCT03325439                                         NA #> 25       NCT03431558                                         NA #> 26       NCT03876704                                         NA #> 27       NCT04001712                                         NA #> 28       NCT04041765                                         NA #> 29       NCT05969327                                         NA #>    trialInformation.isGlobalEndOfTrialReached p_end_of_trial_status #> 1                                          NA                  <NA> #> 2                                          NA                  <NA> #> 3                                          NA                  <NA> #> 4                                        TRUE             Completed #> 5                                        TRUE             Completed #> 6                                          NA               Ongoing #> 7                                        TRUE                  <NA> #> 8                                        TRUE             Completed #> 9                                          NA                  <NA> #> 10                                         NA                  <NA> #> 11                                         NA                  <NA> #> 12                                         NA                  <NA> #> 13                                         NA                  <NA> #> 14                                         NA                  <NA> #> 15                                         NA                  <NA> #> 16                                         NA                  <NA> #> 17                                         NA                  <NA> #> 18                                         NA                  <NA> #> 19                                         NA                  <NA> #> 20                                         NA                  <NA> #> 21                                         NA                  <NA> #> 22                                         NA                  <NA> #> 23                                         NA                  <NA> #> 24                                         NA                  <NA> #> 25                                         NA                  <NA> #> 26                                         NA                  <NA> #> 27                                         NA                  <NA> #> 28                                         NA                  <NA> #> 29                                         NA                  <NA> #>     last_known_status overall_status protocolSection.statusModule.overallStatus #> 1                <NA>           <NA>                                       <NA> #> 2                <NA>           <NA>                                       <NA> #> 3                <NA>           <NA>                                       <NA> #> 4                <NA>           <NA>                                       <NA> #> 5                <NA>           <NA>                                       <NA> #> 6                <NA>           <NA>                                       <NA> #> 7                <NA>           <NA>                                       <NA> #> 8                <NA>           <NA>                                       <NA> #> 9                <NA>           <NA>                                       <NA> #> 10               <NA>           <NA>                                       <NA> #> 11               <NA>           <NA>                                       <NA> #> 12               <NA>           <NA>                                       <NA> #> 13               <NA>           <NA>                                       <NA> #> 14               <NA>           <NA>                                       <NA> #> 15               <NA>           <NA>                                       <NA> #> 16               <NA>           <NA>                                       <NA> #> 17               <NA>           <NA>                                 TERMINATED #> 18               <NA>           <NA>                                  COMPLETED #> 19               <NA>           <NA>                                 TERMINATED #> 20               <NA>           <NA>                                 TERMINATED #> 21               <NA>           <NA>                                  COMPLETED #> 22               <NA>     Terminated                                       <NA> #> 23               <NA>      Completed                                       <NA> #> 24               <NA>     Terminated                                       <NA> #> 25         Recruiting Unknown status                                       <NA> #> 26         Recruiting Unknown status                                       <NA> #> 27               <NA>      Completed                                       <NA> #> 28 Not yet recruiting Unknown status                                       <NA> #> 29               <NA>      Completed                                       <NA> #>    participants.recruitmentEnd participants.recruitmentStart #> 1                   2020-01-01                    2015-11-01 #> 2                   2020-01-01                    2016-09-01 #> 3                   2024-02-01                    2023-05-01 #> 4                         <NA>                          <NA> #> 5                         <NA>                          <NA> #> 6                         <NA>                          <NA> #> 7                         <NA>                          <NA> #> 8                         <NA>                          <NA> #> 9                         <NA>                          <NA> #> 10                        <NA>                          <NA> #> 11                        <NA>                          <NA> #> 12                  2013-12-31                    2011-01-01 #> 13                  2011-12-31                    2007-01-10 #> 14                  2015-05-31                    2013-06-01 #> 15                  2012-03-31                    2010-04-01 #> 16                  2017-09-28                    2013-09-01 #> 17                        <NA>                          <NA> #> 18                        <NA>                          <NA> #> 19                        <NA>                          <NA> #> 20                        <NA>                          <NA> #> 21                        <NA>                          <NA> #> 22                        <NA>                          <NA> #> 23                        <NA>                          <NA> #> 24                        <NA>                          <NA> #> 25                        <NA>                          <NA> #> 26                        <NA>                          <NA> #> 27                        <NA>                          <NA> #> 28                        <NA>                          <NA> #> 29                        <NA>                          <NA> #>    participants.recruitmentStatusOverride ctPublicStatusCode   ctStatus #> 1                                 Stopped                 NA       <NA> #> 2                                    <NA>                 NA       <NA> #> 3                                    <NA>                 NA       <NA> #> 4                                    <NA>                 NA       <NA> #> 5                                    <NA>                 NA       <NA> #> 6                                    <NA>                 NA       <NA> #> 7                                    <NA>                 NA       <NA> #> 8                                    <NA>                 NA       <NA> #> 9                                    <NA>                  4 Authorised #> 10                                   <NA>                  4 Authorised #> 11                                   <NA>                  4 Authorised #> 12                                   <NA>                 NA       <NA> #> 13                                   <NA>                 NA       <NA> #> 14                                   <NA>                 NA       <NA> #> 15                                   <NA>                 NA       <NA> #> 16                                   <NA>                 NA       <NA> #> 17                                   <NA>                 NA       <NA> #> 18                                   <NA>                 NA       <NA> #> 19                                   <NA>                 NA       <NA> #> 20                                   <NA>                 NA       <NA> #> 21                                   <NA>                 NA       <NA> #> 22                                   <NA>                 NA       <NA> #> 23                                   <NA>                 NA       <NA> #> 24                                   <NA>                 NA       <NA> #> 25                                   <NA>                 NA       <NA> #> 26                                   <NA>                 NA       <NA> #> 27                                   <NA>                 NA       <NA> #> 28                                   <NA>                 NA       <NA> #> 29                                   <NA>                 NA       <NA> #>    .statusRecruitment #> 1               other #> 2           completed #> 3           completed #> 4           completed #> 5           completed #> 6             ongoing #> 7           completed #> 8           completed #> 9             ongoing #> 10            ongoing #> 11            ongoing #> 12          completed #> 13          completed #> 14          completed #> 15          completed #> 16          completed #> 17              other #> 18          completed #> 19              other #> 20              other #> 21          completed #> 22              other #> 23          completed #> 24              other #> 25            ongoing #> 26            ongoing #> 27          completed #> 28            ongoing #> 29          completed  # or use already when creating a trial data frame # to subset to the unique records of clinical trials trialsDf <- dbGetFieldsIntoDf(   calculate = \".isUniqueTrial\",   con = dbc) #> Querying database (23 fields)... #> Calculating .isUniqueTrial...                             #> - Finding duplicates among registers' and sponsor ids... #> - 2 EUCTR _id were not preferred EU Member State record for 8 trials #> - Keeping 5 / 3 / 8 / 8 / 3 records from CTGOV2 / EUCTR / CTGOV / ISRCTN / CTIS trialsDf[trialsDf[[\".isUniqueTrial\"]], ] #>                  _id .isUniqueTrial #> 1           12949496           TRUE #> 2           13281214           TRUE #> 3           17473621           TRUE #> 4  2012-003632-23-CZ           TRUE #> 6  2014-002606-20-PT           TRUE #> 8  2014-003556-31-SE           TRUE #> 9  2022-501142-30-00           TRUE #> 10 2023-505613-24-00           TRUE #> 11 2024-510663-34-00           TRUE #> 12          20343063           TRUE #> 13          61070850           TRUE #> 14          76463425           TRUE #> 15          80181452           TRUE #> 16          88261002           TRUE #> 17       NCT00617929           TRUE #> 18       NCT01125800           TRUE #> 19       NCT01483820           TRUE #> 20       NCT01505608           TRUE #> 21       NCT01592045           TRUE #> 22       NCT02620761           TRUE #> 23       NCT03280147           TRUE #> 24       NCT03325439           TRUE #> 25       NCT03431558           TRUE #> 26       NCT03876704           TRUE #> 27       NCT04001712           TRUE #> 28       NCT04041765           TRUE #> 29       NCT05969327           TRUE"},{"path":"https://rfhb.github.io/ctrdata/reference/dfMergeVariablesRelevel.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge variables, keeping type, and optionally relevel factors — dfMergeVariablesRelevel","title":"Merge variables, keeping type, and optionally relevel factors — dfMergeVariablesRelevel","text":"Merge variables data frame returned dbGetFieldsIntoDf new variable, optionally also map values new levels. See dfCalculateConcept pre-defined cross-register trial concepts already implemented based merging fields different registers calculating new field.","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/dfMergeVariablesRelevel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge variables, keeping type, and optionally relevel factors — dfMergeVariablesRelevel","text":"","code":"dfMergeVariablesRelevel(df = NULL, colnames = \"\", levelslist = NULL)"},{"path":"https://rfhb.github.io/ctrdata/reference/dfMergeVariablesRelevel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge variables, keeping type, and optionally relevel factors — dfMergeVariablesRelevel","text":"df data.frame variables (columns) merged one vector. colnames vector names columns `df` hold variables merged, selection columns per select. levelslist names list one slice new value used vector old values (optional).","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/dfMergeVariablesRelevel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge variables, keeping type, and optionally relevel factors — dfMergeVariablesRelevel","text":"vector, type columns merged","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/dfMergeVariablesRelevel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge variables, keeping type, and optionally relevel factors — dfMergeVariablesRelevel","text":"","code":"dbc <- nodbi::src_sqlite(   dbname = system.file(\"extdata\", \"demo.sqlite\", package = \"ctrdata\"),   collection = \"my_trials\",   flags = RSQLite::SQLITE_RO) #> RSQLite version has enabled accelerating docdb_create() and docdb_update() functions when used with value = <NDJSON file name>.  df <- dbGetFieldsIntoDf(   fields = c(     \"f11_trial_has_subjects_under_18\",     \"protocolSection.eligibilityModule.stdAges\",     \"participants.ageRange\"   ),   con = dbc ) #> Querying database (3 fields)...  newValues <- list(   \"paediatric\" = c(\"Neonate\", \"Child\", \"CHILD / ADULT\",                    \"CHILD / ADULT / OLDER_ADULT\", \"TRUE\"),   \"adultOnly\" = c(\"Adult\", \"Senior\"),   \"other\" = c(\"Not Specified\", \"All\", \"Mixed\", \"Other\") )  table(   dfMergeVariablesRelevel(     df = df,     colnames = 'matches(\"age|18\")',     levelslist = newValues   ) ) #> Columns identified to be merged: f11_trial_has_subjects_under_18, protocolSection.eligibilityModule.stdAges, participants.ageRange #>  #> paediatric  adultOnly      other  #>         17          0          0"},{"path":"https://rfhb.github.io/ctrdata/reference/dfName2Value.html","id":null,"dir":"Reference","previous_headings":"","what":"Get value for variable of interest — dfName2Value","title":"Get value for variable of interest — dfName2Value","text":"Get information variable interest  (e.g., clinical endpoints) long data frame protocol- result-related trial information returned dfTrials2Long. Parameters `valuename`, `wherename` `wherevalue` matched using Perl regular expressions ignoring case.","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/dfName2Value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get value for variable of interest — dfName2Value","text":"","code":"dfName2Value(df, valuename = \"\", wherename = \"\", wherevalue = \"\")"},{"path":"https://rfhb.github.io/ctrdata/reference/dfName2Value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get value for variable of interest — dfName2Value","text":"df data frame (tibble) four columns (`_id`, `identifier`, `name`, `value`) returned dfTrials2Long valuename character string name field holds value variable interest (e.g., summary measure \"endPoints.*tendencyValue.value\") wherename (optional) character string identify variable interest among repeatedly occur trial record (e.g., \"endPoints.endPoint.title\") wherevalue (optional) character string value variable identified `wherename` (e.g., \"response\")","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/dfName2Value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get value for variable of interest — dfName2Value","text":"data frame (tibble, tibble loaded) includes values interest, columns `_id`, `identifier`, `name`, `value` `` (contents `wherevalue` found `wherename`). Contents `value` strings unless elements numbers. `identifier` generated function dfTrials2Long identify matching elements, e.g endpoint descriptions measurements.","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/dfName2Value.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get value for variable of interest — dfName2Value","text":"","code":"dbc <- nodbi::src_sqlite(   dbname = system.file(\"extdata\", \"demo.sqlite\", package = \"ctrdata\"),   collection = \"my_trials\",   flags = RSQLite::SQLITE_RO) #> RSQLite version has enabled accelerating docdb_create() and docdb_update() functions when used with value = <NDJSON file name>.  dfwide <- dbGetFieldsIntoDf(     fields = c(         ## ctgov - typical results fields         # \"clinical_results.baseline.analyzed_list.analyzed.count_list.count\",         # \"clinical_results.baseline.group_list.group\",         # \"clinical_results.baseline.analyzed_list.analyzed.units\",         \"clinical_results.outcome_list.outcome\",         \"study_design_info.allocation\",         ## euctr - typical results fields         # \"trialInformation.fullTitle\",         # \"baselineCharacteristics.baselineReportingGroups.baselineReportingGroup\",         # \"trialChanges.hasGlobalInterruptions\",         # \"subjectAnalysisSets\",         # \"adverseEvents.seriousAdverseEvents.seriousAdverseEvent\",         \"endPoints.endPoint\",         \"subjectDisposition.recruitmentDetails\"     ), con = dbc ) #> Querying database (4 fields)...  dflong <- dfTrials2Long(df = dfwide) #> clinical_results.outcome_list.outcome                                                                                                                                                                    #> study_design_info.allocation                                                                                                                                                                             #> endPoints.endPoint                                                                                                                                                                                       #> subjectDisposition.recruitmentDetails                                                                                                                                                                    #>                                                                                                                                                                                                          #> .  #> .  #>  #> Total 7096 rows, 79 unique names of variables  ## get values for the endpoint 'response' dfName2Value(     df = dflong,     valuename = paste0(         \"clinical_results.*measurement.value|\",         \"clinical_results.*outcome.measure.units|\",         \"endPoints.endPoint.*tendencyValue.value|\",         \"endPoints.endPoint.unit\"     ),     wherename = paste0(         \"clinical_results.*outcome.measure.title|\",         \"endPoints.endPoint.title\"     ),     wherevalue = \"response\" ) #> Returning values for 2 out of 12 trials #>                  _id identifier #> 1  2012-003632-23-CZ          1 #> 2  2012-003632-23-CZ          1 #> 3  2012-003632-23-CZ          2 #> 4  2012-003632-23-CZ        6.1 #> 5  2012-003632-23-CZ        6.2 #> 6  2012-003632-23-CZ        6.3 #> 7  2012-003632-23-CZ        6.4 #> 8  2012-003632-23-CZ        6.5 #> 9  2012-003632-23-CZ          6 #> 10 2012-003632-23-CZ          8 #> 11 2012-003632-23-CZ          8 #> 12 2012-003632-23-SE          1 #> 13 2012-003632-23-SE          1 #> 14 2012-003632-23-SE          2 #> 15 2012-003632-23-SE        6.1 #> 16 2012-003632-23-SE        6.2 #> 17 2012-003632-23-SE        6.3 #> 18 2012-003632-23-SE        6.4 #> 19 2012-003632-23-SE        6.5 #> 20 2012-003632-23-SE          6 #> 21 2012-003632-23-SE          8 #> 22 2012-003632-23-SE          8 #>                                                                                                                        name #> 1  endPoints.endPoint.subjectAnalysisSetReportingGroups.subjectAnalysisSetReportingGroup.tendencyValues.tendencyValue.value #> 2                                                                                                   endPoints.endPoint.unit #> 3                                                                                                   endPoints.endPoint.unit #> 4  endPoints.endPoint.subjectAnalysisSetReportingGroups.subjectAnalysisSetReportingGroup.tendencyValues.tendencyValue.value #> 5  endPoints.endPoint.subjectAnalysisSetReportingGroups.subjectAnalysisSetReportingGroup.tendencyValues.tendencyValue.value #> 6  endPoints.endPoint.subjectAnalysisSetReportingGroups.subjectAnalysisSetReportingGroup.tendencyValues.tendencyValue.value #> 7  endPoints.endPoint.subjectAnalysisSetReportingGroups.subjectAnalysisSetReportingGroup.tendencyValues.tendencyValue.value #> 8  endPoints.endPoint.subjectAnalysisSetReportingGroups.subjectAnalysisSetReportingGroup.tendencyValues.tendencyValue.value #> 9                                                                                                   endPoints.endPoint.unit #> 10 endPoints.endPoint.subjectAnalysisSetReportingGroups.subjectAnalysisSetReportingGroup.tendencyValues.tendencyValue.value #> 11                                                                                                  endPoints.endPoint.unit #> 12 endPoints.endPoint.subjectAnalysisSetReportingGroups.subjectAnalysisSetReportingGroup.tendencyValues.tendencyValue.value #> 13                                                                                                  endPoints.endPoint.unit #> 14                                                                                                  endPoints.endPoint.unit #> 15 endPoints.endPoint.subjectAnalysisSetReportingGroups.subjectAnalysisSetReportingGroup.tendencyValues.tendencyValue.value #> 16 endPoints.endPoint.subjectAnalysisSetReportingGroups.subjectAnalysisSetReportingGroup.tendencyValues.tendencyValue.value #> 17 endPoints.endPoint.subjectAnalysisSetReportingGroups.subjectAnalysisSetReportingGroup.tendencyValues.tendencyValue.value #> 18 endPoints.endPoint.subjectAnalysisSetReportingGroups.subjectAnalysisSetReportingGroup.tendencyValues.tendencyValue.value #> 19 endPoints.endPoint.subjectAnalysisSetReportingGroups.subjectAnalysisSetReportingGroup.tendencyValues.tendencyValue.value #> 20                                                                                                  endPoints.endPoint.unit #> 21 endPoints.endPoint.subjectAnalysisSetReportingGroups.subjectAnalysisSetReportingGroup.tendencyValues.tendencyValue.value #> 22                                                                                                  endPoints.endPoint.unit #>                           value                           where #> 1                           7.0        Time to Overall Response #> 2                          Days        Time to Overall Response #> 3  At least 1 response (number)    Durability of First Response #> 4                          0.63                Overall Response #> 5                             0                Overall Response #> 6                          0.65                Overall Response #> 7                          0.59                Overall Response #> 8                          0.60                Overall Response #> 9         Overall Response Rate                Overall Response #> 10                         78.6 Cumulative Duration of Response #> 11 Percentage of treatment time Cumulative Duration of Response #> 12                          7.0        Time to Overall Response #> 13                         Days        Time to Overall Response #> 14 At least 1 response (number)    Durability of First Response #> 15                         0.63                Overall Response #> 16                            0                Overall Response #> 17                         0.65                Overall Response #> 18                         0.59                Overall Response #> 19                         0.60                Overall Response #> 20        Overall Response Rate                Overall Response #> 21                         78.6 Cumulative Duration of Response #> 22 Percentage of treatment time Cumulative Duration of Response"},{"path":"https://rfhb.github.io/ctrdata/reference/dfTrials2Long.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert data frame with trial records into long format — dfTrials2Long","title":"Convert data frame with trial records into long format — dfTrials2Long","text":"function works procotol- results- related information. converts lists values data frame returned dbGetFieldsIntoDf individual rows long data frame. resulting long data frame, values interest can selected using dfName2Value. function particularly useful fields complex content, node field \"clinical_results\" EUCTR, dbGetFieldsIntoDf returns multiply nested list function converts every observation every (leaf) field row .","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/dfTrials2Long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert data frame with trial records into long format — dfTrials2Long","text":"","code":"dfTrials2Long(df)"},{"path":"https://rfhb.github.io/ctrdata/reference/dfTrials2Long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert data frame with trial records into long format — dfTrials2Long","text":"df Data frame (tibble) columns including trial identifier (_id) one variables obtained dbGetFieldsIntoDf","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/dfTrials2Long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert data frame with trial records into long format — dfTrials2Long","text":"data frame  (tibble, tibble loaded) four columns: `_id`, `identifier`, `name`, `value`","code":""},{"path":"https://rfhb.github.io/ctrdata/reference/dfTrials2Long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert data frame with trial records into long format — dfTrials2Long","text":"","code":"dbc <- nodbi::src_sqlite(   dbname = system.file(\"extdata\", \"demo.sqlite\", package = \"ctrdata\"),   collection = \"my_trials\",   flags = RSQLite::SQLITE_RO) #> RSQLite version has enabled accelerating docdb_create() and docdb_update() functions when used with value = <NDJSON file name>.  dfwide <- dbGetFieldsIntoDf(   fields = \"clinical_results.participant_flow\",   con = dbc) #> Querying database (1 fields)...  dfTrials2Long(df = dfwide) #> clinical_results.participant_flow.recruitment_details                                                                                                                                                    #> clinical_results.participant_flow.pre_assignment_details                                                                                                                                                 #> clinical_results.participant_flow.group_list.group                                                                                                                                                       #> clinical_results.participant_flow.period_list.period.title                                                                                                                                               #> clinical_results.participant_flow.period_list.period.milestone_list.milestone                                                                                                                            #> clinical_results.participant_flow.period_list.period.drop_withdraw_reason_list.drop_withdraw_reason.title                                                                                                #> clinical_results.participant_flow.period_list.period.drop_withdraw_reason_list.drop_withdraw_reason.participants_list.participants.group_id                                                              #> clinical_results.participant_flow.period_list.period.drop_withdraw_reason_list.drop_withdraw_reason.participants_list.participants.count                                                                 #>                                                                                                                                                                                                          #> .  #> .  #>  #> Total 43 rows, 12 unique names of variables #>            _id identifier #> 1  NCT02620761          1 #> 2  NCT02620761          2 #> 3  NCT02620761          1 #> 4  NCT02620761          2 #> 5  NCT02620761          1 #> 6  NCT02620761          2 #> 7  NCT02620761        1.1 #> 8  NCT02620761        1.2 #> 9  NCT02620761        2.1 #> 10 NCT02620761        2.2 #> 11 NCT02620761        3.1 #> 12 NCT02620761        3.2 #> 13 NCT02620761        1.1 #> 14 NCT02620761        1.2 #> 15 NCT02620761        2.1 #> 16 NCT02620761        2.2 #> 17 NCT02620761        3.1 #> 18 NCT02620761        3.2 #> 19 NCT02620761          1 #> 20 NCT02620761          2 #> 21 NCT02620761          3 #> 22 NCT02620761          0 #> 23 NCT03325439          0 #> 24 NCT03325439          0 #> 25 NCT03325439          0 #> 26 NCT03325439          0 #> 27 NCT03325439          0 #> 28 NCT03325439          0 #> 29 NCT03325439          1 #> 30 NCT03325439          2 #> 31 NCT03325439          3 #> 32 NCT03325439          4 #> 33 NCT03325439          1 #> 34 NCT03325439          2 #> 35 NCT03325439          3 #> 36 NCT03325439          4 #> 37 NCT03325439          1 #> 38 NCT03325439          2 #> 39 NCT03325439          3 #> 40 NCT03325439          4 #> 41 NCT03325439          0 #> 42 NCT03325439          0 #> 43 NCT03325439          0 #>                                                                                                                                           name #> 1                                                                               clinical_results.participant_flow.group_list.group.description #> 2                                                                               clinical_results.participant_flow.group_list.group.description #> 3                                                                                  clinical_results.participant_flow.group_list.group.group_id #> 4                                                                                  clinical_results.participant_flow.group_list.group.group_id #> 5                                                                                     clinical_results.participant_flow.group_list.group.title #> 6                                                                                     clinical_results.participant_flow.group_list.group.title #> 7                           clinical_results.participant_flow.period_list.period.milestone_list.milestone.participants_list.participants.count #> 8                           clinical_results.participant_flow.period_list.period.milestone_list.milestone.participants_list.participants.count #> 9                           clinical_results.participant_flow.period_list.period.milestone_list.milestone.participants_list.participants.count #> 10                          clinical_results.participant_flow.period_list.period.milestone_list.milestone.participants_list.participants.count #> 11                          clinical_results.participant_flow.period_list.period.milestone_list.milestone.participants_list.participants.count #> 12                          clinical_results.participant_flow.period_list.period.milestone_list.milestone.participants_list.participants.count #> 13                       clinical_results.participant_flow.period_list.period.milestone_list.milestone.participants_list.participants.group_id #> 14                       clinical_results.participant_flow.period_list.period.milestone_list.milestone.participants_list.participants.group_id #> 15                       clinical_results.participant_flow.period_list.period.milestone_list.milestone.participants_list.participants.group_id #> 16                       clinical_results.participant_flow.period_list.period.milestone_list.milestone.participants_list.participants.group_id #> 17                       clinical_results.participant_flow.period_list.period.milestone_list.milestone.participants_list.participants.group_id #> 18                       clinical_results.participant_flow.period_list.period.milestone_list.milestone.participants_list.participants.group_id #> 19                                                         clinical_results.participant_flow.period_list.period.milestone_list.milestone.title #> 20                                                         clinical_results.participant_flow.period_list.period.milestone_list.milestone.title #> 21                                                         clinical_results.participant_flow.period_list.period.milestone_list.milestone.title #> 22                                                                                  clinical_results.participant_flow.period_list.period.title #> 23                                                                              clinical_results.participant_flow.group_list.group.description #> 24                                                                                 clinical_results.participant_flow.group_list.group.group_id #> 25                                                                                    clinical_results.participant_flow.group_list.group.title #> 26    clinical_results.participant_flow.period_list.period.drop_withdraw_reason_list.drop_withdraw_reason.participants_list.participants.count #> 27 clinical_results.participant_flow.period_list.period.drop_withdraw_reason_list.drop_withdraw_reason.participants_list.participants.group_id #> 28                                   clinical_results.participant_flow.period_list.period.drop_withdraw_reason_list.drop_withdraw_reason.title #> 29                          clinical_results.participant_flow.period_list.period.milestone_list.milestone.participants_list.participants.count #> 30                          clinical_results.participant_flow.period_list.period.milestone_list.milestone.participants_list.participants.count #> 31                          clinical_results.participant_flow.period_list.period.milestone_list.milestone.participants_list.participants.count #> 32                          clinical_results.participant_flow.period_list.period.milestone_list.milestone.participants_list.participants.count #> 33                       clinical_results.participant_flow.period_list.period.milestone_list.milestone.participants_list.participants.group_id #> 34                       clinical_results.participant_flow.period_list.period.milestone_list.milestone.participants_list.participants.group_id #> 35                       clinical_results.participant_flow.period_list.period.milestone_list.milestone.participants_list.participants.group_id #> 36                       clinical_results.participant_flow.period_list.period.milestone_list.milestone.participants_list.participants.group_id #> 37                                                         clinical_results.participant_flow.period_list.period.milestone_list.milestone.title #> 38                                                         clinical_results.participant_flow.period_list.period.milestone_list.milestone.title #> 39                                                         clinical_results.participant_flow.period_list.period.milestone_list.milestone.title #> 40                                                         clinical_results.participant_flow.period_list.period.milestone_list.milestone.title #> 41                                                                                  clinical_results.participant_flow.period_list.period.title #> 42                                                                                    clinical_results.participant_flow.pre_assignment_details #> 43                                                                                       clinical_results.participant_flow.recruitment_details #>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            value #> 1                                                                                                                      Infants in the Placebo arm will receive 0.9% sodium chloride (0.1 ml/hr). If, after 6 hrs there is not a clinically concerning decrease in blood pressure, as determined by attending physician, the rate of infusion (in this arm the placebo) will be increased to 0.2 ml/kg/hr. This rate will be continued throughout the remainder of the study.\\r0.9%NS: Randomized to receive Fenoldopam or 0.9%NS #> 2                                                              Infants in the experimental arm will receive fenoldopam (60 ug/ml; 0.1 ml/hr to provide 0.1ug/kg/min). If, after 6 hrs there is not a clinically concerning decrease in blood pressure, as determined by attending physician, the rate of infusion will be increased to 0.2 ml/kg/hr (0.2 ug/kg/min for infants receiving fenoldopam). This rate will be continued throughout the remainder of the study.\\rFenoldopam: Randomized to receive Fenoldopam orontrolenoldopam #> 7                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              1 #> 8                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              0 #> 9                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              1 #> 10                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             0 #> 11                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             0 #> 12                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             0 #> 13                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            P1 #> 14                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            P2 #> 15                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            P1 #> 16                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            P2 #> 17                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            P1 #> 18                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            P2 #> 19                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       STARTED #> 20                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     COMPLETED #> 21                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 NOT COMPLETED #> 22                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Overall Study #> 23 Participants in this arm received brivaracetam (BRV) 0.5 milligram per kilogram (mg/kg) administered as an intravenous (iv) solution for injection twice daily (bid) during the 48-hour Evaluation Period. An additional 3 doses of BRV (0.5 mg/kg) could have been administered every 12 hours for 48 hours (at the discretion of the Investigator). Treatment with antiepileptic drugs (AEDs) per standard of care (SToC) (first-line, second-line, or subsequent treatment) were continued in parallel with BRV treatmentxploratory Cohortneligibilityreatedverall Study #> 42                                                                                                                                                                                                                                                                           No eligible study participants were enrolled in the Confirmatory Cohorts. The study stopped prematurely due to enrolment challenges, the termination was not linked to any safety issues. The Participant Flow refers to the All Subjects Screened. #> 43                                                                                                                                                                                                                                                                                                                                                                                                                                               The study started to enroll participants in May 2019 and concluded in May 2021."},{"path":[]},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"improvements-1-20-0-9900","dir":"Changelog","previous_headings":"","what":"Improvements","title":"ctrdata 1.20.0.9900","text":"New feature: built-functions implement calculate common trial concepts across different registers, see dfCalculateConcept() dbGetFieldsIntoDf() largely avoid users code repeatedly common trial concepts, recruitment start date, trial investigating medicine intervention, trial platform trial etc. New feature: function ctrGenerateQueries() search registers user’s single input, e.g. intervention, phase, dates Refactored dfMergeVariablesRelevel(), factored returning data frame tibble","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"bug-fix-1-20-0-9900","dir":"Changelog","previous_headings":"","what":"Bug fix","title":"ctrdata 1.20.0.9900","text":"dbFindIdsUniqueTrials() excludes GB records EUCTR whenever least one Member State Third country record EUCTR longer allows search status clinical trial, adapted testing Correct ctrShowOneTrial() ctrLoadQueryIntoDb() certain EUCTR trials Early stopping database collection read-Added typing fields newly appearing CTIS Documentation simplification update","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-1200","dir":"Changelog","previous_headings":"","what":"ctrdata 1.20.0","title":"ctrdata 1.20.0","text":"CRAN release: 2024-12-14","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"improvements-1-20-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"ctrdata 1.20.0","text":"New function ctrShowOneTrial() inspect trial structure data, select fields dbGetFieldsIntoDf(); context, make ctrGetQueryUrl() work identifiers single trials Improve update documentation","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"bug-fix-1-20-0","dir":"Changelog","previous_headings":"","what":"Bug fix","title":"ctrdata 1.20.0","text":"Refactor dfTrials2Long correct generating identifiers single-item groups Correct using certain testing conditions","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-1195","dir":"Changelog","previous_headings":"","what":"ctrdata 1.19.5","title":"ctrdata 1.19.5","text":"CRAN release: 2024-11-10","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"improvements-1-19-5","dir":"Changelog","previous_headings":"","what":"Improvements","title":"ctrdata 1.19.5","text":"Refactored dbFindFields() speed efficiency Adapted newly available expert search CTGOV2","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"bug-fix-1-19-5","dir":"Changelog","previous_headings":"","what":"Bug fix","title":"ctrdata 1.19.5","text":"Correct CTGOV2 endpoint document downloads Adapted curl v6 renamed timeout parameter Documents download (folders trials documents; excluding duplicates)","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-1194","dir":"Changelog","previous_headings":"","what":"ctrdata 1.19.4","title":"ctrdata 1.19.4","text":"CRAN release: 2024-09-29 Fix vignettes update documentation website (pkgdown) Make dbFindFields() robust, specify scalar search fields identify records","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-1193","dir":"Changelog","previous_headings":"","what":"ctrdata 1.19.3","title":"ctrdata 1.19.3","text":"CRAN release: 2024-09-22 Improve Tampermonkey script (serves copy searches register clipboard, also can open CTIS search URL, see https://rfhb.github.io/ctrdata/#id_2-script--automatically-copy-users-query--web-browser Refactored parts documents downloading handling CDN links Simplify code now CTIS provides advanced search Code styling linting","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-1192","dir":"Changelog","previous_headings":"","what":"ctrdata 1.19.2","title":"ctrdata 1.19.2","text":"CRAN release: 2024-08-28","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"improvements-1-19-2","dir":"Changelog","previous_headings":"","what":"Improvements","title":"ctrdata 1.19.2","text":"Added typing newly appearing variables CTIS Accelerated CTIS trial data processing","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"bug-fixes-1-19-2","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"ctrdata 1.19.2","text":"Fix incomplete downloads CTIS disabling HTTP/2 multiplexing another function","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-1191","dir":"Changelog","previous_headings":"","what":"ctrdata 1.19.1","title":"ctrdata 1.19.1","text":"CRAN release: 2024-07-18","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"improvements-1-19-1","dir":"Changelog","previous_headings":"","what":"Improvements","title":"ctrdata 1.19.1","text":"Revised translation location elements search URL API call CTGOV2","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-1190","dir":"Changelog","previous_headings":"","what":"ctrdata 1.19.0","title":"ctrdata 1.19.0","text":"CRAN release: 2024-06-30","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"possibly-breaking-changes-1-19-0","dir":"Changelog","previous_headings":"","what":"Possibly breaking changes","title":"ctrdata 1.19.0","text":"CTGOV retired 2024-06-25 classic website API used ctrdata since 2015. support users, ctrdata now automatically translates redirects queries current website. helps automatically updating previously loaded queries (ctrLoadQueryIntoDb(querytoupdate = <n>)), manually migrating queries reproducible work clinical trials information. new functionality ctrdata translates user’s search query URL classic website query current CTGOV website, search parameters. Since structure format data differs data retrieved current API previously retrieved classic API, ctrdata continue identify current API register = \"CTGOV2\", support analysis stage. addition, ctrdata documentation continues include examples analyses CTGOV data, may downloaded earlier. CTIS relaunched 2024-06-17, ctrdata fully updated . moment, CTIS provides basic searches search query URL. support users, ctrdata includes updated script extracts user’s search parameters register search page clipboard browser URL bar. addition, script triggers search trials opening query URL, see https://rfhb.github.io/ctrdata/#id_2-script--automatically-copy-users-query--web-browser. File names CTIS documents start now document type, e.g. SbjctInfaICF - L1 SIS ICF NL publication.pdf, since prefix (document source) introduced version 1.18.0 applicable.","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"improvements-1-19-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"ctrdata 1.19.0","text":"Reduced size demo database package, addressing CRAN notes Adapted ctrFindActiveSubstanceSynonyms() CTGOV2 API; now based terms used studies Updated vignette added inspecting specific trial Updated register information, adding caveats issues Updated estimated download sizes user information Avoided duplicate data file retrievals New attribute ctrdata-collection data frames trial information; content attribute ctrdata-table, removed end 2024 Split utils.R files functions fields","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"bug-fixes-1-19-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"ctrdata 1.19.0","text":"Correct partial date brackets CTGOV2 Disable HTTP/2 multiplexing CTIS","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-1180-2024-05-13","dir":"Changelog","previous_headings":"","what":"ctrdata 1.18.0 (2024-05-13)","title":"ctrdata 1.18.0 (2024-05-13)","text":"CRAN release: 2024-05-13","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"possibly-breaking-change-1-18-0","dir":"Changelog","previous_headings":"","what":"Possibly breaking change","title":"ctrdata 1.18.0 (2024-05-13)","text":"File names documents downloaded CTIS now include document type use different separators (e.g., “parts2auth - SbjctInfaICF - …” abbreviation “Subject information informed consent form (publication)”, previously “parts2auth_…”)","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"improvements-1-18-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"ctrdata 1.18.0 (2024-05-13)","text":"Add retrieval historic versions trial records CTGOV2 (automatically retrieved CTIS, available registers) Added typing newly appearing fields CTIS Increase testing coverage 93.7% locally Added missing CI combination DuckDB CTGOV2","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"bug-fixes-1-18-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"ctrdata 1.18.0 (2024-05-13)","text":"Correct typing certain fields (lists ) integers Handle marginal case dbGetFieldsIntoDf() Changed unlink intermediate files Minor vignettes corrections","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-1172-2024-02-25","dir":"Changelog","previous_headings":"","what":"ctrdata 1.17.2 (2024-02-25)","title":"ctrdata 1.17.2 (2024-02-25)","text":"CRAN release: 2024-02-25","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"bug-fixes-1-17-2","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"ctrdata 1.17.2 (2024-02-25)","text":"Switch sequence API endpoints used CTIS Correct handling multiple public events CTIS Re-use CTIS downloads given session","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-1171-2024-02-05","dir":"Changelog","previous_headings":"","what":"ctrdata 1.17.1 (2024-02-05)","title":"ctrdata 1.17.1 (2024-02-05)","text":"CRAN release: 2024-02-04","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"improvements-1-17-1","dir":"Changelog","previous_headings":"","what":"Improvements","title":"ctrdata 1.17.1 (2024-02-05)","text":"Additional CTIS field types possibly documents (associated clinical trials) Use ctId instead id CTIS top-level field (synonym used API clinicalTrialId)","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"bug-fixes-1-17-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"ctrdata 1.17.1 (2024-02-05)","text":"Added handling unexpected Unicode protocol-related data one trial EUCTR Improved predicted download sizes times EUCTR Return message CTIS query result trials","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-1170-2024-01-22","dir":"Changelog","previous_headings":"","what":"ctrdata 1.17.0 (2024-01-22)","title":"ctrdata 1.17.0 (2024-01-22)","text":"CRAN release: 2024-01-22","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"possibly-breaking-changes-1-17-0","dir":"Changelog","previous_headings":"","what":"Possibly breaking changes","title":"ctrdata 1.17.0 (2024-01-22)","text":"Reimplemented dbGetFieldsIntoDf() accelerate predictable, simplified returns, particular nested fields; also attempts recursively expand simply nested data additional columns returned data frame Reimplemented dbFindFields() accelerate; based improved nodbi::docdb_query() dbFindFields() now digests sample records quickly find fields, records sample = FALSE taking increasing time increasing number records using nodbi::scr_postgres(), parameter fields dbGetFieldsIntoDf() limited less 50 fields; message flags backend potential compatibility issues, suggesting use parent fields, e.g., .b instead c(\".b.c.d\", \".b.c.e\") Parameter stopifnodata dbGetFieldsIntoDf() needed deprecated Reimplemented typing fields speed simplify","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"improvements-1-17-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"ctrdata 1.17.0 (2024-01-22)","text":"Register data re-used downloaded interactive session (, temporary folder now re-used throughout user’s session) Temporary folder can set users options(ctrdata.tempdir = \"<user_specified_folder>\") Inform MS Windows users cygwin found may chose delete Many fields added typing e.g. date dbGetFieldsIntoDf()","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"bug-fixes-1-17-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"ctrdata 1.17.0 (2024-01-22)","text":"Adapted corrected information loading newly available data CTIS Corrected escaping, back-conversion, characters JSON CTIS","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-1160-2023-11-24","dir":"Changelog","previous_headings":"","what":"ctrdata 1.16.0 (2023-11-24)","title":"ctrdata 1.16.0 (2023-11-24)","text":"CRAN release: 2023-11-24","code":""},{"path":[]},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"xml-files-are-converted-slightly-differently-1-16-0","dir":"Changelog","previous_headings":"Possibly breaking changes","what":"XML files are converted slightly differently","title":"ctrdata 1.16.0 (2023-11-24)","text":"EUCTR result-related information attributes: e.g. new: {\"id\":\"PostAssignmentPeriod-46349\"}, : {\"@attributes\":{\"id\":\"PostAssignmentPeriod-46349\"}} Consequently, work just delete @attributes field names dbGetFieldsIntoDf(\"clinical_results.baseline.analyzed_list.analyzed.count_list.count.@attributes.value\", db) EUCTR protocol-related information although differences found yet CTGOV attributes bare values remain included resulting NDJSON (e.g., records <start_date type=\"Actual\">March 15, 2004<\/start_date>, converted {\"start_date\":\"March 15, 2004\"})","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"euctr-some-renaming-to-harmonise-eu-andrd-country-trial-fields-1-16-0","dir":"Changelog","previous_headings":"Possibly breaking changes","what":"EUCTR: some renaming to harmonise EU and 3rd country trial fields","title":"ctrdata 1.16.0 (2023-11-24)","text":"new: e83_single_site_trial, (EU trials): e83_the_trial_involves_single_site_in_the_member_state_concerned new: e83_single_site_trial, (3rd country trials): e83_will_this_trial_be_conducted_ at_a_single_site_globally new: e863_trial_sites_planned_in, (EU trials): e863_specify_the_regions_in_which_trial_sites_are_planned new: e863_trial_sites_planned_in, (3rd country trials): e863_specify_the_countries_outside_of_the_eea_in_which_trial_sites_are_planned new: e84_multiple_sites_in_member_state, (EU trials): e84_the_trial_involves_multiple_sites_in_the_member_state_concerned new: e840_multiple_sites_globally, (3rd country trials): e84_will_this_trial_be_conducted_at_multiple_sites_globally See also https://github.com/rfhb/ctrdata/issues/26#issuecomment-1749555081","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"bug-fixes-1-16-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"ctrdata 1.16.0 (2023-11-24)","text":"corrected batch iterations CTIS trials accommodating unclear totalSize response corrected translation fields browser URL API call CTGOV2 (closes https://github.com/rfhb/ctrdata/issues/32) corrected minimum curl version 5.1.0 (closes https://github.com/rfhb/ctrdata/issues/31) handled errors saving EUCTR results (e.g., long file path name, closes https://github.com/rfhb/ctrdata/issues/30 https://github.com/rfhb/ctrdata/issues/28)","code":""},{"path":[]},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"major-1-16-0","dir":"Changelog","previous_headings":"Improvements","what":"Major","title":"ctrdata 1.16.0 (2023-11-24)","text":"external tools required (Cygwin, perl, cat, sed, php functionality transforming text, XML NDJSON replaced Javascript using R package V8); addresses personally communicated concerns faciliates use package ctrdata environments (e.g., https://github.com/rfhb/ctrdata/issues/26); consequently, might breaking change analysing certain fields, see fields affected.","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"other-1-16-0","dir":"Changelog","previous_headings":"Improvements","what":"Other","title":"ctrdata 1.16.0 (2023-11-24)","text":"added results summary download CTIS added documents download ISRCTN factored document download function ensure dbFindFields() returns fields EU 3rd country trials EUCTR (addresses https://github.com/rfhb/ctrdata/issues/26) changed order importing CTIS database, improved speed better checked data downloads, repeat necessary factored temporary folder creation added using options(ctrdata.tempdir = ...) set removed dfListExtractKey(), long deprecated removed dfMergeTwoVariablesRelevel(), long deprecated reorganised code file layout","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-1152-2023-09-10","dir":"Changelog","previous_headings":"","what":"ctrdata 1.15.2 (2023-09-10)","title":"ctrdata 1.15.2 (2023-09-10)","text":"CRAN release: 2023-09-17 fix handling utf8 upstream multi-language strings CTIS correct creating lists downloading documents ctis adding missing endpoints CTIS found increasing amount data, e.g. publicevents.temporaryHaltList.details 2022-501559-99-00","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-1151-2023-08-29","dir":"Changelog","previous_headings":"","what":"ctrdata 1.15.1 (2023-08-29)","title":"ctrdata 1.15.1 (2023-08-29)","text":"CRAN release: 2023-08-30 correct LaTeX documentation resulting CRAN error correct parts downloading CTIS, including file name sanitisation","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-1150-2023-08-27","dir":"Changelog","previous_headings":"","what":"ctrdata 1.15.0 (2023-08-27)","title":"ctrdata 1.15.0 (2023-08-27)","text":"CRAN release: 2023-08-27 added CTGOV REST API 2.0.0.-test new register identifier CTGOV2 handle CTGOV classic interface register CTGOV improved ctrdataURLcopier.js rewrite searches views CTIS mangle CTIS: change partIIInfo object array, adding new partIIIinfoKey '{\"partIIInfo\": \"<int>\": {...}, \"<int>\": {...}}' becomes '{\"partIIInfo\": [{\"partIIIinfoKey\": <int>, ...}, {\"partIIIinfoKey\": <int>, ...}]}') correct dbGetFieldsIntoDf() specific lists","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-1140-2023-07-16","dir":"Changelog","previous_headings":"","what":"ctrdata 1.14.0 (2023-07-16)","title":"ctrdata 1.14.0 (2023-07-16)","text":"CRAN release: 2023-07-16 fix dbFindIdsUniqueTrials() single-record register contents expand number CTIS variables typed date dfMergeVariablesRelevel() superseeds dfMergeTwoVariablesRelevel()","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-1133-2023-06-24","dir":"Changelog","previous_headings":"","what":"ctrdata 1.13.3 (2023-06-24)","title":"ctrdata 1.13.3 (2023-06-24)","text":"CRAN release: 2023-06-24 typo dbFindFields() use CTGOV classic website (ctrdata adapted new website) correct missing names attributes return vector dbFindIdsUniqueTrials()","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-1132-2023-05-27","dir":"Changelog","previous_headings":"","what":"ctrdata 1.13.2 (2023-05-27)","title":"ctrdata 1.13.2 (2023-05-27)","text":"CRAN release: 2023-05-26 correct selection lists ids documents download CTIS reduce dependencies (rvest, dplyr removed)","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-1131-2023-05-07","dir":"Changelog","previous_headings":"","what":"ctrdata 1.13.1 (2023-05-07)","title":"ctrdata 1.13.1 (2023-05-07)","text":"CRAN release: 2023-05-07 load CTIS data (publicEvaluation) download documents integrate downloading documents ctrLoadQueryIntoDb() also CTGOV use documents.path CTGOV, EUCTR, CTIS; deprecated euctrresultsfilespath added documents.regexp select documents downloading based file name","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-1130-2023-04-23","dir":"Changelog","previous_headings":"","what":"ctrdata 1.13.0 (2023-04-23)","title":"ctrdata 1.13.0 (2023-04-23)","text":"CRAN release: 2023-04-24 data CTIS imported completely adapt functions accommodate CTIS provide Tampermonkey script get URL user’s query register speed ctrLoadQueryIntoDb() CTIS nodbi >=0.9.2.9000 keep register names vector returned dbFindIdsUniqueTrials() correct dbFindFields() EUCTR","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-1121-2023-03-29","dir":"Changelog","previous_headings":"","what":"ctrdata 1.12.1 (2023-03-29)","title":"ctrdata 1.12.1 (2023-03-29)","text":"CRAN release: 2023-03-29 fix escaping hash symbol PDF rendition help page fix file encoding CTIS downloads MS Windows","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-1120-2023-03-25","dir":"Changelog","previous_headings":"","what":"ctrdata 1.12.0 (2023-03-25)","title":"ctrdata 1.12.0 (2023-03-25)","text":"CRAN release: 2023-03-26 added first access new register: CTIS, EU Clinical Trial Information System stop (instead warning) register host errors (e.g. incorrect number records) switch use curl::multi_download() can resume retrievals registers require curl >= 5.0","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-1111-2022-11-20","dir":"Changelog","previous_headings":"","what":"ctrdata 1.11.1 (2022-11-20)","title":"ctrdata 1.11.1 (2022-11-20)","text":"CRAN release: 2022-11-20 cater short EUCTR results-related information show warning beta CTGOV website supported limit unit testing MongoDB SQLite return error ctrGetQueryUrl() query URL prevent re-using connections reduce http/2 layer errors update query history querytoupdate used new records found make ctrLoadQueryIntoDb() always return visible result correct dfTrials2Long() identifier (EUCTR top “1” across fields) correct non-ASCII characters","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-1110-2022-11-02","dir":"Changelog","previous_headings":"","what":"ctrdata 1.11.0 (2022-11-02)","title":"ctrdata 1.11.0 (2022-11-02)","text":"CRAN release: 2022-11-02 now works DuckDB (>= v0.6.0) database backend, using nodbi (>= v0.9.0) reduced default number parallel connections EUCTR 10 4","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-1102-2022-08-20","dir":"Changelog","previous_headings":"","what":"ctrdata 1.10.2 (2022-08-20)","title":"ctrdata 1.10.2 (2022-08-20)","text":"CRAN release: 2022-08-20 fix slow speed dfName2Value() fix remove row names dfName2Value() fix internal function handle tibble fix handling certain ISRCTN queries fix dbGetFieldsIntoDf() missing data fix timeouts methods package testing fix dbGetFieldsIntoDf() rare complex fields fix URL Rd file make examples runnable demo database include wherevalue dfName2Value() result","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-1101-2022-07-24","dir":"Changelog","previous_headings":"","what":"ctrdata 1.10.1 (2022-07-24)","title":"ctrdata 1.10.1 (2022-07-24)","text":"CRAN release: 2022-07-24 fix documentation issues (https://stat.ethz.ch/pipermail/r-package-devel/2022q3/008240.html) fix unit test unused missing argument fix GitHub actions tests","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-1100-2022-07-01","dir":"Changelog","previous_headings":"","what":"ctrdata 1.10.0 (2022-07-01)","title":"ctrdata 1.10.0 (2022-07-01)","text":"CRAN release: 2022-07-06 ctrLoadQueryIntoDb() new parameter euctrresultsfilespath, deprecating euctrresultspdfpath ctrLoadQueryIntoDb() now also extracts saves results files PDF files ctrFindActiveSubstanceSynonyms() returns NULL non-existing active substance","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-191-2022-04-24","dir":"Changelog","previous_headings":"","what":"ctrdata 1.9.1 (2022-04-24)","title":"ctrdata 1.9.1 (2022-04-24)","text":"CRAN release: 2022-04-24 type e811… variables bugfix dbGetFieldsIntoDf bugfix annotations mix backends editorial update vignettes","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-190-2022-03-13","dir":"Changelog","previous_headings":"","what":"ctrdata 1.9.0 (2022-03-13)","title":"ctrdata 1.9.0 (2022-03-13)","text":"CRAN release: 2022-03-13 chunked trial batches ndjson files accelerated database import package dplyr loaded, functions return tibble instead data frame update correct documentation dbFindFields() returns vector fields now names register field occurs accelerated binary checks (cygwin / Windows) remove internet proxy mangling order use system configuration (e.g., transparent proxies used, environment variable https_proxy specified user) refactored internal caching correct dbGetFieldsIntoDf() specific nested data structures correct dfTrials2Long() specific fields correct dbFindIdsUniqueTrials() single trial register modify field typing decode HTML entities type fields difftime, e.g. min_age CTGOV speed parts dbGetFieldsIntoDf() simplify fields dbFindFields() returns names leaf node fields improve update documentation changed EU Member State default DE dbFindIdsUniqueTrials() corrected installCygwinWindowsDoInstall() properly update installation (remove –prune-install) test binaries installCygwinWindowsDoInstall() cache successful binary testing correct typing required_header.download_date improve numbering dfTrials2Long(), covering nested items thorough documentation improvement simplified dbFindFields() cleaned testing binaries cleaned helper scripts removed ctrGetQueryUrlFromBrowser(), long deprecated uses nodbi 0.6.0 can use PostgreSQL backend include PostgreSQL Github Actions","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-180-2021-11-18","dir":"Changelog","previous_headings":"","what":"ctrdata 1.8.0 (2021-11-18)","title":"ctrdata 1.8.0 (2021-11-18)","text":"CRAN release: 2021-11-21 changes match nodbi 0.5.0 simplifying database operations (user-visible functions: ctrLoadQueryIntoDb, dbFindIdsUniqueTrials, dbGetFieldsIntoDf), without changes API","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-171-2021-08-22","dir":"Changelog","previous_headings":"","what":"ctrdata 1.7.1 (2021-08-22)","title":"ctrdata 1.7.1 (2021-08-22)","text":"CRAN release: 2021-08-22 fix DBI needed Imports (CRAN Note) fix potential file name issue conversion script fix dbFindFields() never return _id (previously depended database backend) changed tests (CRAN detection, register availability, additional tests)","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-170-2021-07-24","dir":"Changelog","previous_headings":"","what":"ctrdata 1.7.0 (2021-07-24)","title":"ctrdata 1.7.0 (2021-07-24)","text":"CRAN release: 2021-07-25 much reduced database backend-specific code, using nodbi 0.4.3 (released 2021-07-23) also introduces transactions sqlite using RSQLite >=2.2.4 (released 2021-03-12) temporary directory creation needed, automated deletion changes detecting non-functioning register servers streamlined unit testing","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-160-2021-05-09","dir":"Changelog","previous_headings":"","what":"ctrdata 1.6.0 (2021-05-09)","title":"ctrdata 1.6.0 (2021-05-09)","text":"CRAN release: 2021-05-09 added support ISRCTN refactored checking binaries caching info updated EUCTR download parameters refactored ctrGetQueryUrl ctrOpenSearchPagesInBrowser harmonised error checking avoid errors external scripts refactored url / query mangling, added detailed testing refactored storing JSON database (handle big files, reduce memory) improved dbFindIdsUniqueTrials (speed, memory, register coverage) factored conversion JSON accelerated EUCTR results history download storage external scripts now create multiple chunks records use identifier fields dbFindIdsUniqueTrials adding user info field entries typed","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-153-2021-04-19","dir":"Changelog","previous_headings":"","what":"ctrdata 1.5.3 (2021-04-19)","title":"ctrdata 1.5.3 (2021-04-19)","text":"CRAN release: 2021-04-19 include message handle server certificate issues, propagating user settings httr curl operations ensure identical return structures new trials found dfTrials2Long: harmonise identifier level assignment, address cases field occurs input df dfMergeTwoVariablesRelevel: corrected improved user info dfName2Value: remove duplicate rows, e.g. duplicated criteria","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-152-2021-04-05","dir":"Changelog","previous_headings":"","what":"ctrdata 1.5.2 (2021-04-05)","title":"ctrdata 1.5.2 (2021-04-05)","text":"CRAN release: 2021-04-06 bugfix EOL converting EUCTR files","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-151-2021-03-21","dir":"Changelog","previous_headings":"","what":"ctrdata 1.5.1 (2021-03-21)","title":"ctrdata 1.5.1 (2021-03-21)","text":"CRAN release: 2021-03-21 bugfix non-matching euctr protocol result ids: trials EUCTR results downloaded version 1.5.0 downloaded (ctrLoadQueryIntoDb) dfTrials2Long refactored accelerated API change: dfTrials2Long return value (identifier replaces main_id sub_id) new option save EUCTR results PDF files user-specified directory","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-150-2021-03-14","dir":"Changelog","previous_headings":"","what":"ctrdata 1.5.0 (2021-03-14)","title":"ctrdata 1.5.0 (2021-03-14)","text":"CRAN release: 2021-03-16 return values dbGetFieldsIntoDf now mostly identical whether using src_mongo src_sqlite, best ensure portability analysis code permit dots queries / URLs improved handling queryterm renamed ctrGetQueryUrlFromBrowser ctrGetQueryUrl soft deprecated ctrGetQueryUrlFromBrowser ensure parallel retrievals EUCTR speed routines dbGetFieldsIntoDf make dfTrials2Long handle NA better improved documentation, clarified examples simplified internals typing fields, start typing results fields","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-141-2020-11-03","dir":"Changelog","previous_headings":"","what":"ctrdata 1.4.1 (2020-11-03)","title":"ctrdata 1.4.1 (2020-11-03)","text":"CRAN release: 2020-11-03 reset row names data frames returned functions update curl parameters accessing EUCTR","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-14-2020-10-17","dir":"Changelog","previous_headings":"","what":"ctrdata 1.4 (2020-10-17)","title":"ctrdata 1.4 (2020-10-17)","text":"new: easy access variables dfTrials2Long() + dfName2Value() improved dfMergeTwoVariablesRelevel() maintain type data revised simplified vignettes deprecated: dfListExtractKey() refactored parts euctr retrieval notify user euctr register server permit compression long retrieval take fixed identifying unique ids","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-132-2020-10-03","dir":"Changelog","previous_headings":"","what":"ctrdata 1.3.2 (2020-10-03)","title":"ctrdata 1.3.2 (2020-10-03)","text":"CRAN release: 2020-10-05 quote system file paths","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-131-2020-08-01","dir":"Changelog","previous_headings":"","what":"ctrdata 1.3.1 (2020-08-01)","title":"ctrdata 1.3.1 (2020-08-01)","text":"CRAN release: 2020-08-02 fix error CI tests","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-130-2020-07-27","dir":"Changelog","previous_headings":"","what":"ctrdata 1.3.0 (2020-07-27)","title":"ctrdata 1.3.0 (2020-07-27)","text":"CRAN release: 2020-07-27 workaround EUCTR certificate issue streamline ctrGetQueryUrlFromBrowser() better handling complex fields include tests query string handling, checking parameters return values better clean-testing ctrLoadQueryIntoDb(querytorerun = …) now looks date querytorerun last run, often use euctr update options switching travis github action upped coverage code tested","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-121-2020-05-18","dir":"Changelog","previous_headings":"","what":"ctrdata 1.2.1 (2020-05-18)","title":"ctrdata 1.2.1 (2020-05-18)","text":"CRAN release: 2020-05-18 tinytest >= 1.2.1 avoid regression error correct testing detail","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-12-2019-12-07","dir":"Changelog","previous_headings":"","what":"ctrdata 1.2 (2019-12-07)","title":"ctrdata 1.2 (2019-12-07)","text":"CRAN release: 2019-12-08 correct cygwin install detail","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-11-2019-11-12","dir":"Changelog","previous_headings":"","what":"ctrdata 1.1 (2019-11-12)","title":"ctrdata 1.1 (2019-11-12)","text":"CRAN release: 2019-11-12 release nodbi 0.4 available update description installation github handled mixed arrays text values key ctgov trial records user information importing nesting added euctr trial records user verbose information extended record importing improved parsing euctr trial records correct re-opening sqlite connection","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-101-2019-10-22","dir":"Changelog","previous_headings":"","what":"ctrdata 1.0.1 (2019-10-22)","title":"ctrdata 1.0.1 (2019-10-22)","text":"CRAN release: 2019-10-23 correction testing","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-10-2019-10-16","dir":"Changelog","previous_headings":"","what":"ctrdata 1.0 (2019-10-16)","title":"ctrdata 1.0 (2019-10-16)","text":"CRAN release: 2019-10-16 switch nodbi::scr_{mongo,sqlite}() re-implementation functions switch testthat tinytest, users can check tinytest::test_package(“ctrdata”) improvements euctr trial import new function dfListExtractKey speed testing bash commands windows","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-0182-2019-04-30","dir":"Changelog","previous_headings":"","what":"ctrdata 0.18.2 (2019-04-30)","title":"ctrdata 0.18.2 (2019-04-30)","text":"CRAN release: 2019-05-01 extended compatibility cygwin Windows find use cygw* windows refactored escaping bash command called windows corrected typing date fields","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-0181-2019-04-14","dir":"Changelog","previous_headings":"","what":"ctrdata 0.18.1 (2019-04-14)","title":"ctrdata 0.18.1 (2019-04-14)","text":"simplified cygwin install updated documentation corrected inconsistent handling query terms added automated proxy handling","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-018-2019-04-11","dir":"Changelog","previous_headings":"","what":"ctrdata 0.18 (2019-04-11)","title":"ctrdata 0.18 (2019-04-11)","text":"CRAN release: 2019-04-11 release version bug fixes field typing move use remote mongodb server updated vignettes","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-017-2019-03-27","dir":"Changelog","previous_headings":"","what":"ctrdata 0.17 (2019-03-27)","title":"ctrdata 0.17 (2019-03-27)","text":"improve dbFindFields() formatting added parameter force running query added typing (numeric fields) improve cygwin install attempts information removed dependency local mongodb installation (major rewrite) improved support remote mongodb servers (note changes host / db / uri parameters) Important: Added checking SSL certificates EUCTR EUCTR server sending required intermediate root certificates, thus failing curl httr, see https://www.digicert.com/help/?host=www.clinicaltrialsregister.eu fixed EUCTR results retrieval (curl return value order predictable) removed second time adding metadata one function streamlined user information progress feedback","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-0143-2019-03-12","dir":"Changelog","previous_headings":"","what":"ctrdata 0.14.3 (2019-03-12)","title":"ctrdata 0.14.3 (2019-03-12)","text":"turned error message new trials found prevent failing tests new trials found rss feed","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-0142-2019-03-07","dir":"Changelog","previous_headings":"","what":"ctrdata 0.14.2 (2019-03-07)","title":"ctrdata 0.14.2 (2019-03-07)","text":"harmonise user information","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-0141-2019-03-07","dir":"Changelog","previous_headings":"","what":"ctrdata 0.14.1 (2019-03-07)","title":"ctrdata 0.14.1 (2019-03-07)","text":"CRAN release: 2019-03-12 replaced RCurl (failed register servers) httr curl create README.md README.Rmd","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-014-2019-03-06","dir":"Changelog","previous_headings":"","what":"ctrdata 0.14 (2019-03-06)","title":"ctrdata 0.14 (2019-03-06)","text":"intention submit CRAN, therefore changing several warnings messages, improve testing tool chain applications","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-0133-2019-03-03","dir":"Changelog","previous_headings":"","what":"ctrdata 0.13.3 (2019-03-03)","title":"ctrdata 0.13.3 (2019-03-03)","text":"prettified dbFindFields() removing count symbols (XX.) paths improve converting invalid XML EUCTR result files JSON","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-0132-2019-02-28","dir":"Changelog","previous_headings":"","what":"ctrdata 0.13.2 (2019-02-28)","title":"ctrdata 0.13.2 (2019-02-28)","text":"made EUCTR retrieval robust added marginal case url single trial EUCTR extended timeout checking online status EUCTR","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-0131-2019-02-24","dir":"Changelog","previous_headings":"","what":"ctrdata 0.13.1 (2019-02-24)","title":"ctrdata 0.13.1 (2019-02-24)","text":"added typing dates logical fields using dbGetFieldsIntoDf()","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-013-2019-01-06","dir":"Changelog","previous_headings":"","what":"ctrdata 0.13 (2019-01-06)","title":"ctrdata 0.13 (2019-01-06)","text":"dbGetVariablesIntoDf() deprecated, use dbGetFieldsIntoDf() instead dbFindVariable() deprecated, use dbFindFields() instead dbMergeTwoVariablesRelevel() parameter varnames deprecated, use colnames instead","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-0121-2018-12-15","dir":"Changelog","previous_headings":"","what":"ctrdata 0.12.1 (2018-12-15)","title":"ctrdata 0.12.1 (2018-12-15)","text":"added function ctrFindActiveSubstanceSynonyms() obtain synonyms active substance added user information number trials CTGOV downloaded, limit 5000 per query corrected import EUCTR details = FALSE","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-012-2018-05-19","dir":"Changelog","previous_headings":"","what":"ctrdata 0.12 (2018-05-19)","title":"ctrdata 0.12 (2018-05-19)","text":"added possibility add user’s annotations records retrieved query (new option annotate.text)","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-0112-2018-04-22","dir":"Changelog","previous_headings":"","what":"ctrdata 0.11.2 (2018-04-22)","title":"ctrdata 0.11.2 (2018-04-22)","text":"changed queryterm processing","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-0111-2018-04-07","dir":"Changelog","previous_headings":"","what":"ctrdata 0.11.1 (2018-04-07)","title":"ctrdata 0.11.1 (2018-04-07)","text":"improved installFindMongoBinaries(), now better detect mongo binary locations use example cron scripts, may access user’s path information","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-011-2018-01-28","dir":"Changelog","previous_headings":"","what":"ctrdata 0.11 (2018-01-28)","title":"ctrdata 0.11 (2018-01-28)","text":"newly retrieved: EUCTR results history, new fields “firstreceived_results_date” “version_results_history” adding feature per issue #8","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-0104-2017-12-28","dir":"Changelog","previous_headings":"","what":"ctrdata 0.10.4 (2017-12-28)","title":"ctrdata 0.10.4 (2017-12-28)","text":"note compatibility mongoDB versions fixing issue #8 simplified license","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-0-10-4","dir":"Changelog","previous_headings":"","what":"ctrdata 0.10.3 (2017-11-24)","title":"ctrdata 0.10.4 (2017-12-28)","text":"changed custom-built “x5_trial_status” “p_end_of_trial_status” provided EUCTR","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-0102-2017-11-22","dir":"Changelog","previous_headings":"","what":"ctrdata 0.10.2 (2017-11-22)","title":"ctrdata 0.10.2 (2017-11-22)","text":"editorial project updates","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-0101-2017-07-30","dir":"Changelog","previous_headings":"","what":"ctrdata 0.10.1 (2017-07-30)","title":"ctrdata 0.10.1 (2017-07-30)","text":"now loading results euctr available xml","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-0100-2017-07-25","dir":"Changelog","previous_headings":"","what":"ctrdata 0.10.0 (2017-07-25)","title":"ctrdata 0.10.0 (2017-07-25)","text":"fully load results ctgov prepare loading results euctr","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-0914-2017-06-28","dir":"Changelog","previous_headings":"","what":"ctrdata 0.9.14 (2017-06-28)","title":"ctrdata 0.9.14 (2017-06-28)","text":"refactored system calls windows now part continuous integration","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-0913-2017-06-23","dir":"Changelog","previous_headings":"","what":"ctrdata 0.9.13 (2017-06-23)","title":"ctrdata 0.9.13 (2017-06-23)","text":"refactored ctrLoadQueryIntoDb","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-0912-2017-06-18","dir":"Changelog","previous_headings":"","what":"ctrdata 0.9.12 (2017-06-18)","title":"ctrdata 0.9.12 (2017-06-18)","text":"Preparing new CTGOV interface Improved documentation Corrected ctrGetQueryUrlFromBrowser return value","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-09111-2017-02-04","dir":"Changelog","previous_headings":"","what":"ctrdata 0.9.11.1 (2017-02-04)","title":"ctrdata 0.9.11.1 (2017-02-04)","text":"Improved documentation","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-0911-2017-01-15","dir":"Changelog","previous_headings":"","what":"ctrdata 0.9.11 (2017-01-15)","title":"ctrdata 0.9.11 (2017-01-15)","text":"Added functionality: EUCTR fallback import mechanism large JSON file fails import mongoDB (splitting importing one JSON file trial, tested several thousand trials)","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-09101-2017-01-12","dir":"Changelog","previous_headings":"","what":"ctrdata 0.9.10.1 (2017-01-12)","title":"ctrdata 0.9.10.1 (2017-01-12)","text":"Fixes issues conversion EUCTR records details. Fixes issue placebo information converted IMP fields.","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-09100-2016-12-28","dir":"Changelog","previous_headings":"","what":"ctrdata 0.9.10.0 (2016-12-28)","title":"ctrdata 0.9.10.0 (2016-12-28)","text":"Added metadata attributes returned objects indicate database, query, timestamp etc.","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-0995-2016-12-14","dir":"Changelog","previous_headings":"","what":"ctrdata 0.9.9.5 (2016-12-14)","title":"ctrdata 0.9.9.5 (2016-12-14)","text":"Added option ctrLoadQueryIntoDb(querytoupdate = “last”) re-download last query collection","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-0994-2016-11-18","dir":"Changelog","previous_headings":"","what":"ctrdata 0.9.9.4 (2016-11-18)","title":"ctrdata 0.9.9.4 (2016-11-18)","text":"Added progress indicator ctrLoadQueryIntoDb() indicate network download traffic","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-0993-2016-11-17","dir":"Changelog","previous_headings":"","what":"ctrdata 0.9.9.3 (2016-11-17)","title":"ctrdata 0.9.9.3 (2016-11-17)","text":"deduplication dbFindIdsUniqueTrials() optimised speed memory, added check ISRCTN","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-0992-2016-11-13","dir":"Changelog","previous_headings":"","what":"ctrdata 0.9.9.2 (2016-11-13)","title":"ctrdata 0.9.9.2 (2016-11-13)","text":"corrected deduplication dbFindIdsUniqueTrials()","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-0991-2016-11-12","dir":"Changelog","previous_headings":"","what":"ctrdata 0.9.9.1 (2016-11-12)","title":"ctrdata 0.9.9.1 (2016-11-12)","text":"renamed ctrQueryHistoryInDb() dbQueryHistory() note: change json format query history, breaking compatibility refactored concerned functions use mongolite rmongodb supported","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-09-2016-10-17","dir":"Changelog","previous_headings":"","what":"ctrdata 0.9 (2016-10-17)","title":"ctrdata 0.9 (2016-10-17)","text":"changed implementation dbFindIdsUniqueTrials() editorial changes examples","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-081-2016-09-07","dir":"Changelog","previous_headings":"","what":"ctrdata 0.8.1 (2016-09-07)","title":"ctrdata 0.8.1 (2016-09-07)","text":"added field indicate source register improved ctrLoadQueryIntoDb() details = FALSE added example map plotting","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-08-2016-09-04","dir":"Changelog","previous_headings":"","what":"ctrdata 0.8 (2016-09-04)","title":"ctrdata 0.8 (2016-09-04)","text":"dbFindIdsUniqueTrials now encapsulates dfFindIdsUniqueEuctrRecord dfFindIdsUniqueEuctrRecords removed installation instructions updated recently rmongodb removed CRAN","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-07-2016-05-29","dir":"Changelog","previous_headings":"","what":"ctrdata 0.7 (2016-05-29)","title":"ctrdata 0.7 (2016-05-29)","text":"dbGetVariablesIntoDf changed concatenate values array objects completed test adaptation travis improving perl regex checking helper applications","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-062-2016-04-20","dir":"Changelog","previous_headings":"","what":"ctrdata 0.6.2 (2016-04-20)","title":"ctrdata 0.6.2 (2016-04-20)","text":"add / update field “record_last_import” every imported / updated record","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-061-2016-04-02","dir":"Changelog","previous_headings":"","what":"ctrdata 0.6.1 (2016-04-02)","title":"ctrdata 0.6.1 (2016-04-02)","text":"changed provide vignettes","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-06-2016-02-25","dir":"Changelog","previous_headings":"","what":"ctrdata 0.6 (2016-02-25)","title":"ctrdata 0.6 (2016-02-25)","text":"different update mechanism EUCTR implemented corrected function name db… dfFindUniqueEuctrRecord()","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-059-2016-01-23","dir":"Changelog","previous_headings":"","what":"ctrdata 0.5.9 (2016-01-23)","title":"ctrdata 0.5.9 (2016-01-23)","text":"Corrected bugs Started preparation submission CRAN Preparing include package unit tests","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-05-2015-11-29","dir":"Changelog","previous_headings":"","what":"ctrdata 0.5 (2015-11-29)","title":"ctrdata 0.5 (2015-11-29)","text":"Published github Improved documentation","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-04-2015-10-08","dir":"Changelog","previous_headings":"","what":"ctrdata 0.4 (2015-10-08)","title":"ctrdata 0.4 (2015-10-08)","text":"Renamed functions consistency ease--use","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-03-2015-10-06","dir":"Changelog","previous_headings":"","what":"ctrdata 0.3 (2015-10-06)","title":"ctrdata 0.3 (2015-10-06)","text":"Added functionality download xml data CTGOV, includes data csv format","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-028","dir":"Changelog","previous_headings":"","what":"ctrdata 0.2.8","title":"ctrdata 0.2.8","text":"Changed extended history queries included database. New function dbCTRQueryHistory()","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-027","dir":"Changelog","previous_headings":"","what":"ctrdata 0.2.7","title":"ctrdata 0.2.7","text":"Added function merging variables different registers optionally merge values new values Note function findCTRkey renamed dbFindCTRkey acts database","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-025","dir":"Changelog","previous_headings":"","what":"ctrdata 0.2.5","title":"ctrdata 0.2.5","text":"Added function selecting preferred language versions trials EUCTR Improved use automatic proxy configuration script","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-022","dir":"Changelog","previous_headings":"","what":"ctrdata 0.2.2","title":"ctrdata 0.2.2","text":"Added proxy function improved installation cygwin MS Windows","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-02-2015-09-19","dir":"Changelog","previous_headings":"","what":"ctrdata 0.2 (2015-09-19)","title":"ctrdata 0.2 (2015-09-19)","text":"Now also working MS Windows","code":""},{"path":"https://rfhb.github.io/ctrdata/news/index.html","id":"ctrdata-01-2015-09-15","dir":"Changelog","previous_headings":"","what":"ctrdata 0.1 (2015-09-15)","title":"ctrdata 0.1 (2015-09-15)","text":"First version basic functionality Limited testing Works Mac OS X (10.10.x)","code":""}]
