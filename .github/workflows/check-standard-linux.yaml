# https://github.com/r-lib/actions/tree/master/examples#standard-ci-workflow
#
# note: update
# https://github.com/rfhb/ctrdata/settings/secrets/actions/CACHE_VERSION

on: [push, pull_request]

name: R-CMD-CHECK-ubuntu-postgresql-duckdb-mongodb-sqlite

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-latest, r: 'devel'}
          # - {os: ubuntu-latest, r: 'release'}
          # - {os: ubuntu-latest, r: 'oldrel-1'}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GHPAT }}

    services:
      mongodb:
        image: mongo:4.2
        ports:
          - 27017:27017

    steps:
      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          cache-version: 2
          extra-packages: remotes, DBI, duckdb, rcmdcheck, covr

      - name: Install dependencies
        run: |
          remotes::install_github("ropensci/nodbi")
          remotes::install_github("rfhb/ctrdata")
          remotes::install_deps(pkgdir = ".", dependencies = TRUE)
        shell: Rscript {0}

      - uses: r-lib/actions/setup-pandoc@v2

      - name: Install xclip for checks and other dependencies
        run: sudo apt-get install -y xclip libjq-dev

      - name: Install system dependencies
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))')

      - uses: ankane/setup-postgres@v1
        with:
          postgres-version: 14
          database: test

      - uses: r-lib/actions/check-r-package@v2
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
          _CURL_NO_SSL_VERIFYPEER_: true
          _R_CHECK_EXAMPLE_TIMING_THRESHOLD_: 30
          ctrdatamongouri: ${{ secrets.CTRDATAMONGOURI }}
        with:
          upload-snapshots: true
