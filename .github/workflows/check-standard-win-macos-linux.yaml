# https://github.com/r-lib/actions/tree/master/examples#standard-ci-workflow
#
# note: update
# https://github.com/rfhb/ctrdata/settings/secrets/actions/CACHE_VERSION

on: [push, pull_request, workflow_dispatch]

name: R-CMD-CHECK-win-macos-linux-duckdb-mongodb-sqlite-postgres

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-2022, r: 'release'}
          - {os: macOS-latest, r: 'release'}
          - {os: macOS-latest, r: 'oldrel'}
          - {os: ubuntu-latest, r: 'devel', http-user-agent: 'release'}
          # error installing dependencies under devel
          #- {os: macOS-latest, r: 'devel'}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      R_COMPILE_AND_INSTALL_PACKAGES: never
      AT_HOME: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GHPAT }}
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      CTRDATAMONGOURI: ${{ secrets.CTRDATAMONGOURI }}

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          cache: always
          cache-version: 1
          extra-packages: remotes, DBI, RSQLite, nodbi, duckdb, rcmdcheck, covr, tibble, stringdist, dplyr

      - name: Install dev nodbi
        if: ${{ (matrix.config.os == 'ubuntu-latest') }}
        run: remotes::install_github("ropensci/nodbi")
        shell: Rscript {0}

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: ankane/setup-mongodb@v1

      - uses: ankane/setup-postgres@v1
        with:
          database: test

      - uses: r-lib/actions/check-r-package@v2
        if: matrix.config.os == 'ubuntu-latest' && matrix.config.r == 'devel'

      - name: Test coverage
        if: matrix.config.os == 'macOS-latest' && matrix.config.r == 'release'
        # covr::codecov() never ends under Windows
        # covr::codecov() uses environment variable CODECOV_TOKEN
        run: covr::codecov(quiet = FALSE)
        shell: Rscript {0}

      - name: Upload failed check results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
