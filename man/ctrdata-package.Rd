% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ctrdata-package.R
\docType{package}
\name{ctrdata-package}
\alias{ctrdata-package}
\title{ctrdata: get started, connect database and function overview}
\description{
ctrdata package for aggregating and analysing
information on clinical trials from public registers
}
\section{Database connection}{

Package \code{ctrdata} retrieves trial information and stores it in a
database collection, which has to be given as a connection object
to parameter \code{con} for several ctrdata functions and this is
created in different ways for the three supported databases:\tabular{ll}{
   \strong{Database} \tab \strong{Connection object} \cr
   MongoDB \tab \verb{dbc <- }\link[nodbi:src_mongo]{nodbi::src_mongo}\verb{(db = "my_db", collection = "my_coll")} \cr
   SQLite \tab \verb{dbc <- }\link[nodbi:src_sqlite]{nodbi::src_sqlite}\verb{(dbname = "my_db", collection = "my_coll")} \cr
   PostgreSQL \tab \verb{dbc <- }\link[nodbi:src_postgres]{nodbi::src_postgres}\verb{(dbname = "my_db"); dbc[["collection"]] <- "my_coll"} \cr
}


Example of using a \code{ctrdata} function with any such connection object:
\link{dbQueryHistory}\code{(con = dbc)}.
Besides ctrdata functions below, any such a connection object can equally
be used with functions of package \code{nodbi}, for example
\link[nodbi:docdb_query]{nodbi::docdb_query}(\verb{src = dbc, key = dbc$collection, fields = '\{"_id": 1\}', query = '\{"sponsors.lead_sponsor.agency_class": "Industry"\}')}
}

\section{ctrdata operations on a clinical trial register}{


\link{ctrOpenSearchPagesInBrowser},
\link{ctrFindActiveSubstanceSynonyms},
\link{ctrGetQueryUrl},
\link{ctrLoadQueryIntoDb}
}

\section{Get a data frame from the database collection}{


\link{dbFindFields},
\link{dbGetFieldsIntoDf},
\link{dbFindIdsUniqueTrials} (de-duplicated identifiers of
clinical trial records that can be used to subset a data frame)
}

\section{Operate on a data frame with trial information}{


\link{dfTrials2Long} (convert nested lists into long format),
\link{dfName2Value} (get values for variable(s) of interest).
\link{dfMergeTwoVariablesRelevel},
}

\author{
Ralf Herold \email{ralf.herold@mailbox.org}
}
\keyword{package}
