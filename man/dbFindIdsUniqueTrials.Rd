% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{dbFindIdsUniqueTrials}
\alias{dbFindIdsUniqueTrials}
\title{Deduplicate records to provide unique clinical trial identifiers}
\usage{
dbFindIdsUniqueTrials(
  preferregister = c("EUCTR", "CTGOV", "ISRCTN"),
  prefermemberstate = "GB",
  include3rdcountrytrials = TRUE,
  con,
  verbose = TRUE
)
}
\arguments{
\item{preferregister}{A vector of the sequence of preference for registers
from which to generate unique _id's, default
\code{c("EUCTR", "CTGOV", "ISRCTN")}}

\item{prefermemberstate}{Code of single EU Member State for which records
should returned. If not available, a record for GB or lacking this, any
other record for the trial will be returned. For a list of codes of EU
  Member States, please see vector \code{countriesEUCTR}. Alternatively,
  "3RD" will lead to return a Third Country record of a trial, if available.}

\item{include3rdcountrytrials}{A logical value if trials should be retained
that are conducted exclusively in third countries, that is, outside
the European Union.}

\item{con}{A \link[nodbi]{src} connection object, as obtained with
nodbi::\link[nodbi]{src_mongo}() or nodbi::\link[nodbi]{src_sqlite}()}

\item{verbose}{If set to \code{TRUE}, prints out information about numbers
of records found at subsequent steps when searching for duplicates}
}
\value{
A vector with strings of keys ("_id" in the database) that
  represent non-duplicate trials.
}
\description{
If records for a clinical trial are found from more than one register, the
record from EUCTR is returned. The function currently relies on CTGOV
recording other identifiers such as the EudraCT number in the field "Other
IDs".
}
\examples{

\dontrun{
db <- nodbi::src_sqlite(
  collection = "my_collection"
)
dbFindIdsUniqueTrials(
  con = db
)
}

}
