% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dfCalculate.R
\name{dfCalculate}
\alias{dfCalculate}
\title{Calculate fields from data in other fields}
\usage{
dfCalculate(name = ".*", df = NULL)
}
\arguments{
\item{name}{String with name of function to be applied to `df`, or regular
expression to list available functions.}

\item{df}{Optional. Data frame with fields needed to apply function `name`.}
}
\value{
Data frame with additional column of name `name` as calculated
applying the function `name`. If `df` is not specified, either a list of
functions corresponding to `name` or, if exactly one function is identified,
prints details of the function `name` to explain the implementation of the
concept and returns invisibly the names of fields needed for the calculation.
}
\description{
Across registers, calculate from fields in a data frame a common trial
concept (e.g., status of recruitment) that is defined within ctrdata
based on general understanding and any publications concerning the concept,
which is printed to explain if no data frame is specified.
}
\details{
The names of the functions can also be used for the argument `calculate`
in \link{dbGetFieldsIntoDf} to achieve the same purpose already at the
time that a data frame with data is generated from the trial collection.
}
\examples{

# list names of all available functions in ctrdata
dfCalculate()

# list names of functions for regular expression of name
dfCalculate(name = "status")

# describe a specific function
dfCalculate(name = ".statusRecruitment")

# print descriptions of all functions
invisible(sapply(dfCalculate(), dfCalculate))

# apply dfCalculate to data frame
dbc <- nodbi::src_sqlite(
   dbname = system.file("extdata", "demo.sqlite", package = "ctrdata"),
   collection = "my_trials",
   RSQLite::SQLITE_RO)

# use with existing data frame
trialsDf <- dbGetFieldsIntoDf(
  fields = dfCalculate(name = ".statusRecruitment"),
  con = dbc)

dfCalculate(
  name = ".statusRecruitment",
  df = trialsDf)

# or use already when creating a trial data frame
trialsDf <- dbGetFieldsIntoDf(
  calculate = ".startDate",
  con = dbc)

}
