% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dfCalculateConcept.R
\name{dfCalculateConcept}
\alias{dfCalculateConcept}
\title{Calculate trial concept from various fields and registers}
\usage{
dfCalculateConcept(name = ".*", df = NULL)
}
\arguments{
\item{name}{Vector of strings of name of a function(s) to be applied to
`df`, or regular expression to list available functions.}

\item{df}{Optional. Data frame with fields needed to apply function `name`.}
}
\value{
Data frame with additional column(s) `name` as calculated
applying the function(s) `name`. If `df` is `NULL` (default), either a list of
functions corresponding to `name` or, if exactly one function is identified,
prints details of the function `name` to explain the implementation of the
concept and to return invisibly the names of fields needed for its calculation.
}
\description{
Across registers, calculate a trial concept (e.g., status of recruitment).
The concept is defined within ctrdata based on common understanding and
any relevant publications. Details of the implementation are printed,
if no data frame is specified, to show the peculiarities of the registers
for calculating the concept.
}
\details{
The names of the functions can also be used for the argument `calculate`
in \link{dbGetFieldsIntoDf} to achieve the same purpose already at the
time that a data frame is generated from the trial collection.
This approach will in most cases be more efficient and preferred over
using \link{dfCalculateConcept}.

Note that the functions do not operate on historic versions (CTGOV2) but
only on information from the latest record.
}
\examples{

# list available functions to calculate trial concepts
dfCalculateConcept()

# list names of functions for regular expression
dfCalculateConcept(name = "date")

# use package trial database collection
dbc <- nodbi::src_sqlite(
  dbname = system.file("extdata", "demo.sqlite", package = "ctrdata"),
  collection = "my_trials", flags = RSQLite::SQLITE_RO)

# calculate trial concepts when creating data frame
trialsDf <- dbGetFieldsIntoDf(
  calculate = c("f.statusRecruitment", "f.controlType"),
  con = dbc)

# or calculate trial concepts for existing data frame
trialsDf <- dbGetFieldsIntoDf(
  fields = unlist(f.statusRecruitment()),
  con = dbc)
dfCalculateConcept(
  name = "f.statusRecruitment",
  df = trialsDf)

}
